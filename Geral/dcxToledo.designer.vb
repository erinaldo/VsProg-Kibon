'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18408
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Toledo")>  _
Partial Public Class dcToledo
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertCadCfg(instance As CadCfg)
    End Sub
  Partial Private Sub UpdateCadCfg(instance As CadCfg)
    End Sub
  Partial Private Sub DeleteCadCfg(instance As CadCfg)
    End Sub
  Partial Private Sub InsertSdZones(instance As SdZones)
    End Sub
  Partial Private Sub UpdateSdZones(instance As SdZones)
    End Sub
  Partial Private Sub DeleteSdZones(instance As SdZones)
    End Sub
  Partial Private Sub InsertDadosArt(instance As DadosArt)
    End Sub
  Partial Private Sub UpdateDadosArt(instance As DadosArt)
    End Sub
  Partial Private Sub DeleteDadosArt(instance As DadosArt)
    End Sub
  Partial Private Sub InsertDadosHist(instance As DadosHist)
    End Sub
  Partial Private Sub UpdateDadosHist(instance As DadosHist)
    End Sub
  Partial Private Sub DeleteDadosHist(instance As DadosHist)
    End Sub
  Partial Private Sub InsertDadosMaq(instance As DadosMaq)
    End Sub
  Partial Private Sub UpdateDadosMaq(instance As DadosMaq)
    End Sub
  Partial Private Sub DeleteDadosMaq(instance As DadosMaq)
    End Sub
  Partial Private Sub InsertDadosProd(instance As DadosProd)
    End Sub
  Partial Private Sub UpdateDadosProd(instance As DadosProd)
    End Sub
  Partial Private Sub DeleteDadosProd(instance As DadosProd)
    End Sub
  Partial Private Sub InsertProdAktInt(instance As ProdAktInt)
    End Sub
  Partial Private Sub UpdateProdAktInt(instance As ProdAktInt)
    End Sub
  Partial Private Sub DeleteProdAktInt(instance As ProdAktInt)
    End Sub
  Partial Private Sub InsertProdCharge(instance As ProdCharge)
    End Sub
  Partial Private Sub UpdateProdCharge(instance As ProdCharge)
    End Sub
  Partial Private Sub DeleteProdCharge(instance As ProdCharge)
    End Sub
  Partial Private Sub InsertProdGut(instance As ProdGut)
    End Sub
  Partial Private Sub UpdateProdGut(instance As ProdGut)
    End Sub
  Partial Private Sub DeleteProdGut(instance As ProdGut)
    End Sub
  Partial Private Sub InsertProdLastChr(instance As ProdLastChr)
    End Sub
  Partial Private Sub UpdateProdLastChr(instance As ProdLastChr)
    End Sub
  Partial Private Sub DeleteProdLastChr(instance As ProdLastChr)
    End Sub
  Partial Private Sub InsertProdLastInt(instance As ProdLastInt)
    End Sub
  Partial Private Sub UpdateProdLastInt(instance As ProdLastInt)
    End Sub
  Partial Private Sub DeleteProdLastInt(instance As ProdLastInt)
    End Sub
  Partial Private Sub InsertProdMinus(instance As ProdMinus)
    End Sub
  Partial Private Sub UpdateProdMinus(instance As ProdMinus)
    End Sub
  Partial Private Sub DeleteProdMinus(instance As ProdMinus)
    End Sub
  Partial Private Sub InsertProdPlus(instance As ProdPlus)
    End Sub
  Partial Private Sub UpdateProdPlus(instance As ProdPlus)
    End Sub
  Partial Private Sub DeleteProdPlus(instance As ProdPlus)
    End Sub
  Partial Private Sub InsertProdStat(instance As ProdStat)
    End Sub
  Partial Private Sub UpdateProdStat(instance As ProdStat)
    End Sub
  Partial Private Sub DeleteProdStat(instance As ProdStat)
    End Sub
  Partial Private Sub InsertSdData(instance As SdData)
    End Sub
  Partial Private Sub UpdateSdData(instance As SdData)
    End Sub
  Partial Private Sub DeleteSdData(instance As SdData)
    End Sub
  Partial Private Sub InsertSdGleit(instance As SdGleit)
    End Sub
  Partial Private Sub UpdateSdGleit(instance As SdGleit)
    End Sub
  Partial Private Sub DeleteSdGleit(instance As SdGleit)
    End Sub
  Partial Private Sub InsertSdGrund(instance As SdGrund)
    End Sub
  Partial Private Sub UpdateSdGrund(instance As SdGrund)
    End Sub
  Partial Private Sub DeleteSdGrund(instance As SdGrund)
    End Sub
  Partial Private Sub InsertSdStat(instance As SdStat)
    End Sub
  Partial Private Sub UpdateSdStat(instance As SdStat)
    End Sub
  Partial Private Sub DeleteSdStat(instance As SdStat)
    End Sub
  Partial Private Sub InsertSdStat2(instance As SdStat2)
    End Sub
  Partial Private Sub UpdateSdStat2(instance As SdStat2)
    End Sub
  Partial Private Sub DeleteSdStat2(instance As SdStat2)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.Geral.My.MySettings.Default.csToledo, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property CadCfg() As System.Data.Linq.Table(Of CadCfg)
		Get
			Return Me.GetTable(Of CadCfg)
		End Get
	End Property
	
	Public ReadOnly Property SdZones() As System.Data.Linq.Table(Of SdZones)
		Get
			Return Me.GetTable(Of SdZones)
		End Get
	End Property
	
	Public ReadOnly Property DadosArt() As System.Data.Linq.Table(Of DadosArt)
		Get
			Return Me.GetTable(Of DadosArt)
		End Get
	End Property
	
	Public ReadOnly Property DadosHist() As System.Data.Linq.Table(Of DadosHist)
		Get
			Return Me.GetTable(Of DadosHist)
		End Get
	End Property
	
	Public ReadOnly Property DadosMaq() As System.Data.Linq.Table(Of DadosMaq)
		Get
			Return Me.GetTable(Of DadosMaq)
		End Get
	End Property
	
	Public ReadOnly Property DadosProd() As System.Data.Linq.Table(Of DadosProd)
		Get
			Return Me.GetTable(Of DadosProd)
		End Get
	End Property
	
	Public ReadOnly Property ProdAktInt() As System.Data.Linq.Table(Of ProdAktInt)
		Get
			Return Me.GetTable(Of ProdAktInt)
		End Get
	End Property
	
	Public ReadOnly Property ProdCharge() As System.Data.Linq.Table(Of ProdCharge)
		Get
			Return Me.GetTable(Of ProdCharge)
		End Get
	End Property
	
	Public ReadOnly Property ProdGut() As System.Data.Linq.Table(Of ProdGut)
		Get
			Return Me.GetTable(Of ProdGut)
		End Get
	End Property
	
	Public ReadOnly Property ProdLastChr() As System.Data.Linq.Table(Of ProdLastChr)
		Get
			Return Me.GetTable(Of ProdLastChr)
		End Get
	End Property
	
	Public ReadOnly Property ProdLastInt() As System.Data.Linq.Table(Of ProdLastInt)
		Get
			Return Me.GetTable(Of ProdLastInt)
		End Get
	End Property
	
	Public ReadOnly Property ProdMinus() As System.Data.Linq.Table(Of ProdMinus)
		Get
			Return Me.GetTable(Of ProdMinus)
		End Get
	End Property
	
	Public ReadOnly Property ProdPlus() As System.Data.Linq.Table(Of ProdPlus)
		Get
			Return Me.GetTable(Of ProdPlus)
		End Get
	End Property
	
	Public ReadOnly Property ProdStat() As System.Data.Linq.Table(Of ProdStat)
		Get
			Return Me.GetTable(Of ProdStat)
		End Get
	End Property
	
	Public ReadOnly Property SdData() As System.Data.Linq.Table(Of SdData)
		Get
			Return Me.GetTable(Of SdData)
		End Get
	End Property
	
	Public ReadOnly Property SdGleit() As System.Data.Linq.Table(Of SdGleit)
		Get
			Return Me.GetTable(Of SdGleit)
		End Get
	End Property
	
	Public ReadOnly Property SdGrund() As System.Data.Linq.Table(Of SdGrund)
		Get
			Return Me.GetTable(Of SdGrund)
		End Get
	End Property
	
	Public ReadOnly Property SdStat() As System.Data.Linq.Table(Of SdStat)
		Get
			Return Me.GetTable(Of SdStat)
		End Get
	End Property
	
	Public ReadOnly Property SdStat2() As System.Data.Linq.Table(Of SdStat2)
		Get
			Return Me.GetTable(Of SdStat2)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CadCfg")>  _
Partial Public Class CadCfg
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Cfg As String
	
	Private _Valor As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCfgChanging(value As String)
    End Sub
    Partial Private Sub OnCfgChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As String)
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cfg", DbType:="NVarChar(256) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Cfg() As String
		Get
			Return Me._Cfg
		End Get
		Set
			If (String.Equals(Me._Cfg, value) = false) Then
				Me.OnCfgChanging(value)
				Me.SendPropertyChanging
				Me._Cfg = value
				Me.SendPropertyChanged("Cfg")
				Me.OnCfgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Valor", DbType:="NVarChar(256)")>  _
	Public Property Valor() As String
		Get
			Return Me._Valor
		End Get
		Set
			If (String.Equals(Me._Valor, value) = false) Then
				Me.OnValorChanging(value)
				Me.SendPropertyChanging
				Me._Valor = value
				Me.SendPropertyChanged("Valor")
				Me.OnValorChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SdZones")>  _
Partial Public Class SdZones
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdSdZones As Integer
	
	Private _IdArt As System.Nullable(Of Integer)
	
	Private _NokZona1 As String
	
	Private _OkZona1 As String
	
	Private _NomeZ1 As String
	
	Private _NokZona2 As String
	
	Private _OkZona2 As String
	
	Private _NomeZ2 As String
	
	Private _NokZona3 As String
	
	Private _OkZona3 As String
	
	Private _NomeZ3 As String
	
	Private _NokZona4 As String
	
	Private _OkZona4 As String
	
	Private _NomeZ4 As String
	
	Private _NokZona5 As String
	
	Private _OkZona5 As String
	
	Private _NomeZ5 As String
	
	Private _DataHora As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdSdZonesChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSdZonesChanged()
    End Sub
    Partial Private Sub OnIdArtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnNokZona1Changing(value As String)
    End Sub
    Partial Private Sub OnNokZona1Changed()
    End Sub
    Partial Private Sub OnOkZona1Changing(value As String)
    End Sub
    Partial Private Sub OnOkZona1Changed()
    End Sub
    Partial Private Sub OnNomeZ1Changing(value As String)
    End Sub
    Partial Private Sub OnNomeZ1Changed()
    End Sub
    Partial Private Sub OnNokZona2Changing(value As String)
    End Sub
    Partial Private Sub OnNokZona2Changed()
    End Sub
    Partial Private Sub OnOkZona2Changing(value As String)
    End Sub
    Partial Private Sub OnOkZona2Changed()
    End Sub
    Partial Private Sub OnNomeZ2Changing(value As String)
    End Sub
    Partial Private Sub OnNomeZ2Changed()
    End Sub
    Partial Private Sub OnNokZona3Changing(value As String)
    End Sub
    Partial Private Sub OnNokZona3Changed()
    End Sub
    Partial Private Sub OnOkZona3Changing(value As String)
    End Sub
    Partial Private Sub OnOkZona3Changed()
    End Sub
    Partial Private Sub OnNomeZ3Changing(value As String)
    End Sub
    Partial Private Sub OnNomeZ3Changed()
    End Sub
    Partial Private Sub OnNokZona4Changing(value As String)
    End Sub
    Partial Private Sub OnNokZona4Changed()
    End Sub
    Partial Private Sub OnOkZona4Changing(value As String)
    End Sub
    Partial Private Sub OnOkZona4Changed()
    End Sub
    Partial Private Sub OnNomeZ4Changing(value As String)
    End Sub
    Partial Private Sub OnNomeZ4Changed()
    End Sub
    Partial Private Sub OnNokZona5Changing(value As String)
    End Sub
    Partial Private Sub OnNokZona5Changed()
    End Sub
    Partial Private Sub OnOkZona5Changing(value As String)
    End Sub
    Partial Private Sub OnOkZona5Changed()
    End Sub
    Partial Private Sub OnNomeZ5Changing(value As String)
    End Sub
    Partial Private Sub OnNomeZ5Changed()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSdZones", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdSdZones() As Integer
		Get
			Return Me._IdSdZones
		End Get
		Set
			If ((Me._IdSdZones = value)  _
						= false) Then
				Me.OnIdSdZonesChanging(value)
				Me.SendPropertyChanging
				Me._IdSdZones = value
				Me.SendPropertyChanged("IdSdZones")
				Me.OnIdSdZonesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int")>  _
	Public Property IdArt() As System.Nullable(Of Integer)
		Get
			Return Me._IdArt
		End Get
		Set
			If (Me._IdArt.Equals(value) = false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NokZona1", DbType:="NVarChar(50)")>  _
	Public Property NokZona1() As String
		Get
			Return Me._NokZona1
		End Get
		Set
			If (String.Equals(Me._NokZona1, value) = false) Then
				Me.OnNokZona1Changing(value)
				Me.SendPropertyChanging
				Me._NokZona1 = value
				Me.SendPropertyChanged("NokZona1")
				Me.OnNokZona1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OkZona1", DbType:="NVarChar(50)")>  _
	Public Property OkZona1() As String
		Get
			Return Me._OkZona1
		End Get
		Set
			If (String.Equals(Me._OkZona1, value) = false) Then
				Me.OnOkZona1Changing(value)
				Me.SendPropertyChanging
				Me._OkZona1 = value
				Me.SendPropertyChanged("OkZona1")
				Me.OnOkZona1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeZ1", DbType:="NVarChar(50)")>  _
	Public Property NomeZ1() As String
		Get
			Return Me._NomeZ1
		End Get
		Set
			If (String.Equals(Me._NomeZ1, value) = false) Then
				Me.OnNomeZ1Changing(value)
				Me.SendPropertyChanging
				Me._NomeZ1 = value
				Me.SendPropertyChanged("NomeZ1")
				Me.OnNomeZ1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NokZona2", DbType:="NVarChar(50)")>  _
	Public Property NokZona2() As String
		Get
			Return Me._NokZona2
		End Get
		Set
			If (String.Equals(Me._NokZona2, value) = false) Then
				Me.OnNokZona2Changing(value)
				Me.SendPropertyChanging
				Me._NokZona2 = value
				Me.SendPropertyChanged("NokZona2")
				Me.OnNokZona2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OkZona2", DbType:="NVarChar(50)")>  _
	Public Property OkZona2() As String
		Get
			Return Me._OkZona2
		End Get
		Set
			If (String.Equals(Me._OkZona2, value) = false) Then
				Me.OnOkZona2Changing(value)
				Me.SendPropertyChanging
				Me._OkZona2 = value
				Me.SendPropertyChanged("OkZona2")
				Me.OnOkZona2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeZ2", DbType:="NVarChar(50)")>  _
	Public Property NomeZ2() As String
		Get
			Return Me._NomeZ2
		End Get
		Set
			If (String.Equals(Me._NomeZ2, value) = false) Then
				Me.OnNomeZ2Changing(value)
				Me.SendPropertyChanging
				Me._NomeZ2 = value
				Me.SendPropertyChanged("NomeZ2")
				Me.OnNomeZ2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NokZona3", DbType:="NVarChar(50)")>  _
	Public Property NokZona3() As String
		Get
			Return Me._NokZona3
		End Get
		Set
			If (String.Equals(Me._NokZona3, value) = false) Then
				Me.OnNokZona3Changing(value)
				Me.SendPropertyChanging
				Me._NokZona3 = value
				Me.SendPropertyChanged("NokZona3")
				Me.OnNokZona3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OkZona3", DbType:="NVarChar(50)")>  _
	Public Property OkZona3() As String
		Get
			Return Me._OkZona3
		End Get
		Set
			If (String.Equals(Me._OkZona3, value) = false) Then
				Me.OnOkZona3Changing(value)
				Me.SendPropertyChanging
				Me._OkZona3 = value
				Me.SendPropertyChanged("OkZona3")
				Me.OnOkZona3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeZ3", DbType:="NVarChar(50)")>  _
	Public Property NomeZ3() As String
		Get
			Return Me._NomeZ3
		End Get
		Set
			If (String.Equals(Me._NomeZ3, value) = false) Then
				Me.OnNomeZ3Changing(value)
				Me.SendPropertyChanging
				Me._NomeZ3 = value
				Me.SendPropertyChanged("NomeZ3")
				Me.OnNomeZ3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NokZona4", DbType:="NVarChar(50)")>  _
	Public Property NokZona4() As String
		Get
			Return Me._NokZona4
		End Get
		Set
			If (String.Equals(Me._NokZona4, value) = false) Then
				Me.OnNokZona4Changing(value)
				Me.SendPropertyChanging
				Me._NokZona4 = value
				Me.SendPropertyChanged("NokZona4")
				Me.OnNokZona4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OkZona4", DbType:="NVarChar(50)")>  _
	Public Property OkZona4() As String
		Get
			Return Me._OkZona4
		End Get
		Set
			If (String.Equals(Me._OkZona4, value) = false) Then
				Me.OnOkZona4Changing(value)
				Me.SendPropertyChanging
				Me._OkZona4 = value
				Me.SendPropertyChanged("OkZona4")
				Me.OnOkZona4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeZ4", DbType:="NVarChar(50)")>  _
	Public Property NomeZ4() As String
		Get
			Return Me._NomeZ4
		End Get
		Set
			If (String.Equals(Me._NomeZ4, value) = false) Then
				Me.OnNomeZ4Changing(value)
				Me.SendPropertyChanging
				Me._NomeZ4 = value
				Me.SendPropertyChanged("NomeZ4")
				Me.OnNomeZ4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NokZona5", DbType:="NVarChar(50)")>  _
	Public Property NokZona5() As String
		Get
			Return Me._NokZona5
		End Get
		Set
			If (String.Equals(Me._NokZona5, value) = false) Then
				Me.OnNokZona5Changing(value)
				Me.SendPropertyChanging
				Me._NokZona5 = value
				Me.SendPropertyChanged("NokZona5")
				Me.OnNokZona5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OkZona5", DbType:="NVarChar(50)")>  _
	Public Property OkZona5() As String
		Get
			Return Me._OkZona5
		End Get
		Set
			If (String.Equals(Me._OkZona5, value) = false) Then
				Me.OnOkZona5Changing(value)
				Me.SendPropertyChanging
				Me._OkZona5 = value
				Me.SendPropertyChanged("OkZona5")
				Me.OnOkZona5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeZ5", DbType:="NVarChar(50)")>  _
	Public Property NomeZ5() As String
		Get
			Return Me._NomeZ5
		End Get
		Set
			If (String.Equals(Me._NomeZ5, value) = false) Then
				Me.OnNomeZ5Changing(value)
				Me.SendPropertyChanging
				Me._NomeZ5 = value
				Me.SendPropertyChanged("NomeZ5")
				Me.OnNomeZ5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DadosArt")>  _
Partial Public Class DadosArt
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ArtId As Integer
	
	Private _IdMaq As System.Nullable(Of Integer)
	
	Private _Nome As String
	
	Private _DataHora As System.Nullable(Of Date)
	
	Private _Sts As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnArtIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnArtIdChanged()
    End Sub
    Partial Private Sub OnIdMaqChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdMaqChanged()
    End Sub
    Partial Private Sub OnNomeChanging(value As String)
    End Sub
    Partial Private Sub OnNomeChanged()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    Partial Private Sub OnStsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ArtId", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ArtId() As Integer
		Get
			Return Me._ArtId
		End Get
		Set
			If ((Me._ArtId = value)  _
						= false) Then
				Me.OnArtIdChanging(value)
				Me.SendPropertyChanging
				Me._ArtId = value
				Me.SendPropertyChanged("ArtId")
				Me.OnArtIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdMaq", DbType:="Int")>  _
	Public Property IdMaq() As System.Nullable(Of Integer)
		Get
			Return Me._IdMaq
		End Get
		Set
			If (Me._IdMaq.Equals(value) = false) Then
				Me.OnIdMaqChanging(value)
				Me.SendPropertyChanging
				Me._IdMaq = value
				Me.SendPropertyChanged("IdMaq")
				Me.OnIdMaqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nome", DbType:="NVarChar(50)")>  _
	Public Property Nome() As String
		Get
			Return Me._Nome
		End Get
		Set
			If (String.Equals(Me._Nome, value) = false) Then
				Me.OnNomeChanging(value)
				Me.SendPropertyChanging
				Me._Nome = value
				Me.SendPropertyChanged("Nome")
				Me.OnNomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sts", DbType:="Int")>  _
	Public Property Sts() As System.Nullable(Of Integer)
		Get
			Return Me._Sts
		End Get
		Set
			If (Me._Sts.Equals(value) = false) Then
				Me.OnStsChanging(value)
				Me.SendPropertyChanging
				Me._Sts = value
				Me.SendPropertyChanged("Sts")
				Me.OnStsChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DadosHist")>  _
Partial Public Class DadosHist
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdMaq As Integer
	
	Private _IdArt As Integer
	
	Private _IdHist As Integer
	
	Private _HorIni As String
	
	Private _DataIni As System.Nullable(Of Date)
	
	Private _Horfin As String
	
	Private _DataFin As System.Nullable(Of Date)
	
	Private _Rendimento As String
	
	Private _ValorMedio As String
	
	Private _TU1Infrac As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdMaqChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdMaqChanged()
    End Sub
    Partial Private Sub OnIdArtChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnIdHistChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdHistChanged()
    End Sub
    Partial Private Sub OnHorIniChanging(value As String)
    End Sub
    Partial Private Sub OnHorIniChanged()
    End Sub
    Partial Private Sub OnDataIniChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataIniChanged()
    End Sub
    Partial Private Sub OnHorfinChanging(value As String)
    End Sub
    Partial Private Sub OnHorfinChanged()
    End Sub
    Partial Private Sub OnDataFinChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataFinChanged()
    End Sub
    Partial Private Sub OnRendimentoChanging(value As String)
    End Sub
    Partial Private Sub OnRendimentoChanged()
    End Sub
    Partial Private Sub OnValorMedioChanging(value As String)
    End Sub
    Partial Private Sub OnValorMedioChanged()
    End Sub
    Partial Private Sub OnTU1InfracChanging(value As String)
    End Sub
    Partial Private Sub OnTU1InfracChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdMaq", DbType:="Int NOT NULL")>  _
	Public Property IdMaq() As Integer
		Get
			Return Me._IdMaq
		End Get
		Set
			If ((Me._IdMaq = value)  _
						= false) Then
				Me.OnIdMaqChanging(value)
				Me.SendPropertyChanging
				Me._IdMaq = value
				Me.SendPropertyChanged("IdMaq")
				Me.OnIdMaqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int NOT NULL")>  _
	Public Property IdArt() As Integer
		Get
			Return Me._IdArt
		End Get
		Set
			If ((Me._IdArt = value)  _
						= false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdHist", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdHist() As Integer
		Get
			Return Me._IdHist
		End Get
		Set
			If ((Me._IdHist = value)  _
						= false) Then
				Me.OnIdHistChanging(value)
				Me.SendPropertyChanging
				Me._IdHist = value
				Me.SendPropertyChanged("IdHist")
				Me.OnIdHistChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HorIni", DbType:="NVarChar(50)")>  _
	Public Property HorIni() As String
		Get
			Return Me._HorIni
		End Get
		Set
			If (String.Equals(Me._HorIni, value) = false) Then
				Me.OnHorIniChanging(value)
				Me.SendPropertyChanging
				Me._HorIni = value
				Me.SendPropertyChanged("HorIni")
				Me.OnHorIniChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataIni", DbType:="Date")>  _
	Public Property DataIni() As System.Nullable(Of Date)
		Get
			Return Me._DataIni
		End Get
		Set
			If (Me._DataIni.Equals(value) = false) Then
				Me.OnDataIniChanging(value)
				Me.SendPropertyChanging
				Me._DataIni = value
				Me.SendPropertyChanged("DataIni")
				Me.OnDataIniChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Horfin", DbType:="NVarChar(50)")>  _
	Public Property Horfin() As String
		Get
			Return Me._Horfin
		End Get
		Set
			If (String.Equals(Me._Horfin, value) = false) Then
				Me.OnHorfinChanging(value)
				Me.SendPropertyChanging
				Me._Horfin = value
				Me.SendPropertyChanged("Horfin")
				Me.OnHorfinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataFin", DbType:="Date")>  _
	Public Property DataFin() As System.Nullable(Of Date)
		Get
			Return Me._DataFin
		End Get
		Set
			If (Me._DataFin.Equals(value) = false) Then
				Me.OnDataFinChanging(value)
				Me.SendPropertyChanging
				Me._DataFin = value
				Me.SendPropertyChanged("DataFin")
				Me.OnDataFinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rendimento", DbType:="NVarChar(50)")>  _
	Public Property Rendimento() As String
		Get
			Return Me._Rendimento
		End Get
		Set
			If (String.Equals(Me._Rendimento, value) = false) Then
				Me.OnRendimentoChanging(value)
				Me.SendPropertyChanging
				Me._Rendimento = value
				Me.SendPropertyChanged("Rendimento")
				Me.OnRendimentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValorMedio", DbType:="NVarChar(50)")>  _
	Public Property ValorMedio() As String
		Get
			Return Me._ValorMedio
		End Get
		Set
			If (String.Equals(Me._ValorMedio, value) = false) Then
				Me.OnValorMedioChanging(value)
				Me.SendPropertyChanging
				Me._ValorMedio = value
				Me.SendPropertyChanged("ValorMedio")
				Me.OnValorMedioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TU1Infrac", DbType:="NVarChar(50)")>  _
	Public Property TU1Infrac() As String
		Get
			Return Me._TU1Infrac
		End Get
		Set
			If (String.Equals(Me._TU1Infrac, value) = false) Then
				Me.OnTU1InfracChanging(value)
				Me.SendPropertyChanging
				Me._TU1Infrac = value
				Me.SendPropertyChanged("TU1Infrac")
				Me.OnTU1InfracChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DadosMaq")>  _
Partial Public Class DadosMaq
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdMaq As Integer
	
	Private _Maquina As String
	
	Private _DataHora As System.Nullable(Of Date)
	
	Private _Sts As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdMaqChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdMaqChanged()
    End Sub
    Partial Private Sub OnMaquinaChanging(value As String)
    End Sub
    Partial Private Sub OnMaquinaChanged()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    Partial Private Sub OnStsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdMaq", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdMaq() As Integer
		Get
			Return Me._IdMaq
		End Get
		Set
			If ((Me._IdMaq = value)  _
						= false) Then
				Me.OnIdMaqChanging(value)
				Me.SendPropertyChanging
				Me._IdMaq = value
				Me.SendPropertyChanged("IdMaq")
				Me.OnIdMaqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Maquina", DbType:="NVarChar(MAX)")>  _
	Public Property Maquina() As String
		Get
			Return Me._Maquina
		End Get
		Set
			If (String.Equals(Me._Maquina, value) = false) Then
				Me.OnMaquinaChanging(value)
				Me.SendPropertyChanging
				Me._Maquina = value
				Me.SendPropertyChanged("Maquina")
				Me.OnMaquinaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sts", DbType:="Int")>  _
	Public Property Sts() As System.Nullable(Of Integer)
		Get
			Return Me._Sts
		End Get
		Set
			If (Me._Sts.Equals(value) = false) Then
				Me.OnStsChanging(value)
				Me.SendPropertyChanging
				Me._Sts = value
				Me.SendPropertyChanged("Sts")
				Me.OnStsChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DadosProd")>  _
Partial Public Class DadosProd
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdProd As Integer
	
	Private _IdArt As System.Nullable(Of Integer)
	
	Private _IdMaq As System.Nullable(Of Integer)
	
	Private _DataHora As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdProdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdProdChanged()
    End Sub
    Partial Private Sub OnIdArtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnIdMaqChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdMaqChanged()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProd", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdProd() As Integer
		Get
			Return Me._IdProd
		End Get
		Set
			If ((Me._IdProd = value)  _
						= false) Then
				Me.OnIdProdChanging(value)
				Me.SendPropertyChanging
				Me._IdProd = value
				Me.SendPropertyChanged("IdProd")
				Me.OnIdProdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int")>  _
	Public Property IdArt() As System.Nullable(Of Integer)
		Get
			Return Me._IdArt
		End Get
		Set
			If (Me._IdArt.Equals(value) = false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdMaq", DbType:="Int")>  _
	Public Property IdMaq() As System.Nullable(Of Integer)
		Get
			Return Me._IdMaq
		End Get
		Set
			If (Me._IdMaq.Equals(value) = false) Then
				Me.OnIdMaqChanging(value)
				Me.SendPropertyChanging
				Me._IdMaq = value
				Me.SendPropertyChanged("IdMaq")
				Me.OnIdMaqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProdAktInt")>  _
Partial Public Class ProdAktInt
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdProdAkt As Integer
	
	Private _IdArt As System.Nullable(Of Integer)
	
	Private _Data As String
	
	Private _Hora As String
	
	Private _QtdProdOk As String
	
	Private _QtdProdNok As String
	
	Private _VlMedio As String
	
	Private _DesvioPadrao As String
	
	Private _TuLim As String
	
	Private _QtdProdTU1Lim As String
	
	Private _ProdTU1LimPerc As String
	
	Private _Tu2Lim As String
	
	Private _DataHora As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdProdAktChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdProdAktChanged()
    End Sub
    Partial Private Sub OnIdArtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnDataChanging(value As String)
    End Sub
    Partial Private Sub OnDataChanged()
    End Sub
    Partial Private Sub OnHoraChanging(value As String)
    End Sub
    Partial Private Sub OnHoraChanged()
    End Sub
    Partial Private Sub OnQtdProdOkChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdOkChanged()
    End Sub
    Partial Private Sub OnQtdProdNokChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdNokChanged()
    End Sub
    Partial Private Sub OnVlMedioChanging(value As String)
    End Sub
    Partial Private Sub OnVlMedioChanged()
    End Sub
    Partial Private Sub OnDesvioPadraoChanging(value As String)
    End Sub
    Partial Private Sub OnDesvioPadraoChanged()
    End Sub
    Partial Private Sub OnTuLimChanging(value As String)
    End Sub
    Partial Private Sub OnTuLimChanged()
    End Sub
    Partial Private Sub OnQtdProdTU1LimChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdTU1LimChanged()
    End Sub
    Partial Private Sub OnProdTU1LimPercChanging(value As String)
    End Sub
    Partial Private Sub OnProdTU1LimPercChanged()
    End Sub
    Partial Private Sub OnTu2LimChanging(value As String)
    End Sub
    Partial Private Sub OnTu2LimChanged()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProdAkt", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdProdAkt() As Integer
		Get
			Return Me._IdProdAkt
		End Get
		Set
			If ((Me._IdProdAkt = value)  _
						= false) Then
				Me.OnIdProdAktChanging(value)
				Me.SendPropertyChanging
				Me._IdProdAkt = value
				Me.SendPropertyChanged("IdProdAkt")
				Me.OnIdProdAktChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int")>  _
	Public Property IdArt() As System.Nullable(Of Integer)
		Get
			Return Me._IdArt
		End Get
		Set
			If (Me._IdArt.Equals(value) = false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Data", DbType:="NVarChar(50)")>  _
	Public Property Data() As String
		Get
			Return Me._Data
		End Get
		Set
			If (String.Equals(Me._Data, value) = false) Then
				Me.OnDataChanging(value)
				Me.SendPropertyChanging
				Me._Data = value
				Me.SendPropertyChanged("Data")
				Me.OnDataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hora", DbType:="NVarChar(50)")>  _
	Public Property Hora() As String
		Get
			Return Me._Hora
		End Get
		Set
			If (String.Equals(Me._Hora, value) = false) Then
				Me.OnHoraChanging(value)
				Me.SendPropertyChanging
				Me._Hora = value
				Me.SendPropertyChanged("Hora")
				Me.OnHoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdOk", DbType:="NVarChar(50)")>  _
	Public Property QtdProdOk() As String
		Get
			Return Me._QtdProdOk
		End Get
		Set
			If (String.Equals(Me._QtdProdOk, value) = false) Then
				Me.OnQtdProdOkChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdOk = value
				Me.SendPropertyChanged("QtdProdOk")
				Me.OnQtdProdOkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdNok", DbType:="NVarChar(50)")>  _
	Public Property QtdProdNok() As String
		Get
			Return Me._QtdProdNok
		End Get
		Set
			If (String.Equals(Me._QtdProdNok, value) = false) Then
				Me.OnQtdProdNokChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdNok = value
				Me.SendPropertyChanged("QtdProdNok")
				Me.OnQtdProdNokChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VlMedio", DbType:="NVarChar(50)")>  _
	Public Property VlMedio() As String
		Get
			Return Me._VlMedio
		End Get
		Set
			If (String.Equals(Me._VlMedio, value) = false) Then
				Me.OnVlMedioChanging(value)
				Me.SendPropertyChanging
				Me._VlMedio = value
				Me.SendPropertyChanged("VlMedio")
				Me.OnVlMedioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DesvioPadrao", DbType:="NVarChar(50)")>  _
	Public Property DesvioPadrao() As String
		Get
			Return Me._DesvioPadrao
		End Get
		Set
			If (String.Equals(Me._DesvioPadrao, value) = false) Then
				Me.OnDesvioPadraoChanging(value)
				Me.SendPropertyChanging
				Me._DesvioPadrao = value
				Me.SendPropertyChanged("DesvioPadrao")
				Me.OnDesvioPadraoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TuLim", DbType:="NVarChar(50)")>  _
	Public Property TuLim() As String
		Get
			Return Me._TuLim
		End Get
		Set
			If (String.Equals(Me._TuLim, value) = false) Then
				Me.OnTuLimChanging(value)
				Me.SendPropertyChanging
				Me._TuLim = value
				Me.SendPropertyChanged("TuLim")
				Me.OnTuLimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdTU1Lim", DbType:="NVarChar(50)")>  _
	Public Property QtdProdTU1Lim() As String
		Get
			Return Me._QtdProdTU1Lim
		End Get
		Set
			If (String.Equals(Me._QtdProdTU1Lim, value) = false) Then
				Me.OnQtdProdTU1LimChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdTU1Lim = value
				Me.SendPropertyChanged("QtdProdTU1Lim")
				Me.OnQtdProdTU1LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProdTU1LimPerc", DbType:="NVarChar(50)")>  _
	Public Property ProdTU1LimPerc() As String
		Get
			Return Me._ProdTU1LimPerc
		End Get
		Set
			If (String.Equals(Me._ProdTU1LimPerc, value) = false) Then
				Me.OnProdTU1LimPercChanging(value)
				Me.SendPropertyChanging
				Me._ProdTU1LimPerc = value
				Me.SendPropertyChanged("ProdTU1LimPerc")
				Me.OnProdTU1LimPercChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tu2Lim", DbType:="NVarChar(50)")>  _
	Public Property Tu2Lim() As String
		Get
			Return Me._Tu2Lim
		End Get
		Set
			If (String.Equals(Me._Tu2Lim, value) = false) Then
				Me.OnTu2LimChanging(value)
				Me.SendPropertyChanging
				Me._Tu2Lim = value
				Me.SendPropertyChanged("Tu2Lim")
				Me.OnTu2LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProdCharge")>  _
Partial Public Class ProdCharge
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdProdCharge As Integer
	
	Private _IdArt As System.Nullable(Of Integer)
	
	Private _Data As String
	
	Private _Hora As String
	
	Private _NumBatch As String
	
	Private _QtdProdOk As String
	
	Private _QtdProdNok As String
	
	Private _VlMedio As String
	
	Private _DesvioPadrao As String
	
	Private _Tu1Lim As String
	
	Private _QtdProdTu1Lim As String
	
	Private _ProdTU1LimPerc As String
	
	Private _Tu2Lim As String
	
	Private _QtdProdTu2Lim As String
	
	Private _DataHora As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdProdChargeChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdProdChargeChanged()
    End Sub
    Partial Private Sub OnIdArtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnDataChanging(value As String)
    End Sub
    Partial Private Sub OnDataChanged()
    End Sub
    Partial Private Sub OnHoraChanging(value As String)
    End Sub
    Partial Private Sub OnHoraChanged()
    End Sub
    Partial Private Sub OnNumBatchChanging(value As String)
    End Sub
    Partial Private Sub OnNumBatchChanged()
    End Sub
    Partial Private Sub OnQtdProdOkChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdOkChanged()
    End Sub
    Partial Private Sub OnQtdProdNokChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdNokChanged()
    End Sub
    Partial Private Sub OnVlMedioChanging(value As String)
    End Sub
    Partial Private Sub OnVlMedioChanged()
    End Sub
    Partial Private Sub OnDesvioPadraoChanging(value As String)
    End Sub
    Partial Private Sub OnDesvioPadraoChanged()
    End Sub
    Partial Private Sub OnTu1LimChanging(value As String)
    End Sub
    Partial Private Sub OnTu1LimChanged()
    End Sub
    Partial Private Sub OnQtdProdTu1LimChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdTu1LimChanged()
    End Sub
    Partial Private Sub OnProdTU1LimPercChanging(value As String)
    End Sub
    Partial Private Sub OnProdTU1LimPercChanged()
    End Sub
    Partial Private Sub OnTu2LimChanging(value As String)
    End Sub
    Partial Private Sub OnTu2LimChanged()
    End Sub
    Partial Private Sub OnQtdProdTu2LimChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdTu2LimChanged()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProdCharge", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdProdCharge() As Integer
		Get
			Return Me._IdProdCharge
		End Get
		Set
			If ((Me._IdProdCharge = value)  _
						= false) Then
				Me.OnIdProdChargeChanging(value)
				Me.SendPropertyChanging
				Me._IdProdCharge = value
				Me.SendPropertyChanged("IdProdCharge")
				Me.OnIdProdChargeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int")>  _
	Public Property IdArt() As System.Nullable(Of Integer)
		Get
			Return Me._IdArt
		End Get
		Set
			If (Me._IdArt.Equals(value) = false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Data", DbType:="NVarChar(50)")>  _
	Public Property Data() As String
		Get
			Return Me._Data
		End Get
		Set
			If (String.Equals(Me._Data, value) = false) Then
				Me.OnDataChanging(value)
				Me.SendPropertyChanging
				Me._Data = value
				Me.SendPropertyChanged("Data")
				Me.OnDataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hora", DbType:="NVarChar(50)")>  _
	Public Property Hora() As String
		Get
			Return Me._Hora
		End Get
		Set
			If (String.Equals(Me._Hora, value) = false) Then
				Me.OnHoraChanging(value)
				Me.SendPropertyChanging
				Me._Hora = value
				Me.SendPropertyChanged("Hora")
				Me.OnHoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumBatch", DbType:="NVarChar(50)")>  _
	Public Property NumBatch() As String
		Get
			Return Me._NumBatch
		End Get
		Set
			If (String.Equals(Me._NumBatch, value) = false) Then
				Me.OnNumBatchChanging(value)
				Me.SendPropertyChanging
				Me._NumBatch = value
				Me.SendPropertyChanged("NumBatch")
				Me.OnNumBatchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdOk", DbType:="NVarChar(50)")>  _
	Public Property QtdProdOk() As String
		Get
			Return Me._QtdProdOk
		End Get
		Set
			If (String.Equals(Me._QtdProdOk, value) = false) Then
				Me.OnQtdProdOkChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdOk = value
				Me.SendPropertyChanged("QtdProdOk")
				Me.OnQtdProdOkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdNok", DbType:="NVarChar(50)")>  _
	Public Property QtdProdNok() As String
		Get
			Return Me._QtdProdNok
		End Get
		Set
			If (String.Equals(Me._QtdProdNok, value) = false) Then
				Me.OnQtdProdNokChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdNok = value
				Me.SendPropertyChanged("QtdProdNok")
				Me.OnQtdProdNokChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VlMedio", DbType:="NVarChar(50)")>  _
	Public Property VlMedio() As String
		Get
			Return Me._VlMedio
		End Get
		Set
			If (String.Equals(Me._VlMedio, value) = false) Then
				Me.OnVlMedioChanging(value)
				Me.SendPropertyChanging
				Me._VlMedio = value
				Me.SendPropertyChanged("VlMedio")
				Me.OnVlMedioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DesvioPadrao", DbType:="NVarChar(50)")>  _
	Public Property DesvioPadrao() As String
		Get
			Return Me._DesvioPadrao
		End Get
		Set
			If (String.Equals(Me._DesvioPadrao, value) = false) Then
				Me.OnDesvioPadraoChanging(value)
				Me.SendPropertyChanging
				Me._DesvioPadrao = value
				Me.SendPropertyChanged("DesvioPadrao")
				Me.OnDesvioPadraoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tu1Lim", DbType:="NVarChar(50)")>  _
	Public Property Tu1Lim() As String
		Get
			Return Me._Tu1Lim
		End Get
		Set
			If (String.Equals(Me._Tu1Lim, value) = false) Then
				Me.OnTu1LimChanging(value)
				Me.SendPropertyChanging
				Me._Tu1Lim = value
				Me.SendPropertyChanged("Tu1Lim")
				Me.OnTu1LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdTu1Lim", DbType:="NVarChar(50)")>  _
	Public Property QtdProdTu1Lim() As String
		Get
			Return Me._QtdProdTu1Lim
		End Get
		Set
			If (String.Equals(Me._QtdProdTu1Lim, value) = false) Then
				Me.OnQtdProdTu1LimChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdTu1Lim = value
				Me.SendPropertyChanged("QtdProdTu1Lim")
				Me.OnQtdProdTu1LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProdTU1LimPerc", DbType:="NVarChar(50)")>  _
	Public Property ProdTU1LimPerc() As String
		Get
			Return Me._ProdTU1LimPerc
		End Get
		Set
			If (String.Equals(Me._ProdTU1LimPerc, value) = false) Then
				Me.OnProdTU1LimPercChanging(value)
				Me.SendPropertyChanging
				Me._ProdTU1LimPerc = value
				Me.SendPropertyChanged("ProdTU1LimPerc")
				Me.OnProdTU1LimPercChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tu2Lim", DbType:="NVarChar(50)")>  _
	Public Property Tu2Lim() As String
		Get
			Return Me._Tu2Lim
		End Get
		Set
			If (String.Equals(Me._Tu2Lim, value) = false) Then
				Me.OnTu2LimChanging(value)
				Me.SendPropertyChanging
				Me._Tu2Lim = value
				Me.SendPropertyChanged("Tu2Lim")
				Me.OnTu2LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdTu2Lim", DbType:="NVarChar(50)")>  _
	Public Property QtdProdTu2Lim() As String
		Get
			Return Me._QtdProdTu2Lim
		End Get
		Set
			If (String.Equals(Me._QtdProdTu2Lim, value) = false) Then
				Me.OnQtdProdTu2LimChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdTu2Lim = value
				Me.SendPropertyChanged("QtdProdTu2Lim")
				Me.OnQtdProdTu2LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProdGut")>  _
Partial Public Class ProdGut
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdProdGut As Integer
	
	Private _IdArt As System.Nullable(Of Integer)
	
	Private _QtdProdGutOk As String
	
	Private _PesoTotalGutOk As String
	
	Private _VlMedioGutOk As String
	
	Private _QtdProdSpecial As String
	
	Private _QtdProdMetalDt As String
	
	Private _DataHora As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdProdGutChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdProdGutChanged()
    End Sub
    Partial Private Sub OnIdArtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnQtdProdGutOkChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdGutOkChanged()
    End Sub
    Partial Private Sub OnPesoTotalGutOkChanging(value As String)
    End Sub
    Partial Private Sub OnPesoTotalGutOkChanged()
    End Sub
    Partial Private Sub OnVlMedioGutOkChanging(value As String)
    End Sub
    Partial Private Sub OnVlMedioGutOkChanged()
    End Sub
    Partial Private Sub OnQtdProdSpecialChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdSpecialChanged()
    End Sub
    Partial Private Sub OnQtdProdMetalDtChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdMetalDtChanged()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProdGut", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdProdGut() As Integer
		Get
			Return Me._IdProdGut
		End Get
		Set
			If ((Me._IdProdGut = value)  _
						= false) Then
				Me.OnIdProdGutChanging(value)
				Me.SendPropertyChanging
				Me._IdProdGut = value
				Me.SendPropertyChanged("IdProdGut")
				Me.OnIdProdGutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int")>  _
	Public Property IdArt() As System.Nullable(Of Integer)
		Get
			Return Me._IdArt
		End Get
		Set
			If (Me._IdArt.Equals(value) = false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdGutOk", DbType:="NVarChar(50)")>  _
	Public Property QtdProdGutOk() As String
		Get
			Return Me._QtdProdGutOk
		End Get
		Set
			If (String.Equals(Me._QtdProdGutOk, value) = false) Then
				Me.OnQtdProdGutOkChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdGutOk = value
				Me.SendPropertyChanged("QtdProdGutOk")
				Me.OnQtdProdGutOkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PesoTotalGutOk", DbType:="NVarChar(50)")>  _
	Public Property PesoTotalGutOk() As String
		Get
			Return Me._PesoTotalGutOk
		End Get
		Set
			If (String.Equals(Me._PesoTotalGutOk, value) = false) Then
				Me.OnPesoTotalGutOkChanging(value)
				Me.SendPropertyChanging
				Me._PesoTotalGutOk = value
				Me.SendPropertyChanged("PesoTotalGutOk")
				Me.OnPesoTotalGutOkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VlMedioGutOk", DbType:="NVarChar(50)")>  _
	Public Property VlMedioGutOk() As String
		Get
			Return Me._VlMedioGutOk
		End Get
		Set
			If (String.Equals(Me._VlMedioGutOk, value) = false) Then
				Me.OnVlMedioGutOkChanging(value)
				Me.SendPropertyChanging
				Me._VlMedioGutOk = value
				Me.SendPropertyChanged("VlMedioGutOk")
				Me.OnVlMedioGutOkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdSpecial", DbType:="NVarChar(50)")>  _
	Public Property QtdProdSpecial() As String
		Get
			Return Me._QtdProdSpecial
		End Get
		Set
			If (String.Equals(Me._QtdProdSpecial, value) = false) Then
				Me.OnQtdProdSpecialChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdSpecial = value
				Me.SendPropertyChanged("QtdProdSpecial")
				Me.OnQtdProdSpecialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdMetalDt", DbType:="NVarChar(50)")>  _
	Public Property QtdProdMetalDt() As String
		Get
			Return Me._QtdProdMetalDt
		End Get
		Set
			If (String.Equals(Me._QtdProdMetalDt, value) = false) Then
				Me.OnQtdProdMetalDtChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdMetalDt = value
				Me.SendPropertyChanged("QtdProdMetalDt")
				Me.OnQtdProdMetalDtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProdLastChr")>  _
Partial Public Class ProdLastChr
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdProdLastChr As Integer
	
	Private _IdArt As System.Nullable(Of Integer)
	
	Private _Data As String
	
	Private _Hora As String
	
	Private _NumBatch As String
	
	Private _QtdProdOk As String
	
	Private _QtdProdNok As String
	
	Private _VlMedio As String
	
	Private _DesvioPadrao As String
	
	Private _Tu1Lim As String
	
	Private _QtdProdTu1Lim As String
	
	Private _ProdTU1LimPerc As String
	
	Private _Tu2Lim As String
	
	Private _QtdProdTu2Lim As String
	
	Private _DataHora As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdProdLastChrChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdProdLastChrChanged()
    End Sub
    Partial Private Sub OnIdArtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnDataChanging(value As String)
    End Sub
    Partial Private Sub OnDataChanged()
    End Sub
    Partial Private Sub OnHoraChanging(value As String)
    End Sub
    Partial Private Sub OnHoraChanged()
    End Sub
    Partial Private Sub OnNumBatchChanging(value As String)
    End Sub
    Partial Private Sub OnNumBatchChanged()
    End Sub
    Partial Private Sub OnQtdProdOkChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdOkChanged()
    End Sub
    Partial Private Sub OnQtdProdNokChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdNokChanged()
    End Sub
    Partial Private Sub OnVlMedioChanging(value As String)
    End Sub
    Partial Private Sub OnVlMedioChanged()
    End Sub
    Partial Private Sub OnDesvioPadraoChanging(value As String)
    End Sub
    Partial Private Sub OnDesvioPadraoChanged()
    End Sub
    Partial Private Sub OnTu1LimChanging(value As String)
    End Sub
    Partial Private Sub OnTu1LimChanged()
    End Sub
    Partial Private Sub OnQtdProdTu1LimChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdTu1LimChanged()
    End Sub
    Partial Private Sub OnProdTU1LimPercChanging(value As String)
    End Sub
    Partial Private Sub OnProdTU1LimPercChanged()
    End Sub
    Partial Private Sub OnTu2LimChanging(value As String)
    End Sub
    Partial Private Sub OnTu2LimChanged()
    End Sub
    Partial Private Sub OnQtdProdTu2LimChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdTu2LimChanged()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProdLastChr", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdProdLastChr() As Integer
		Get
			Return Me._IdProdLastChr
		End Get
		Set
			If ((Me._IdProdLastChr = value)  _
						= false) Then
				Me.OnIdProdLastChrChanging(value)
				Me.SendPropertyChanging
				Me._IdProdLastChr = value
				Me.SendPropertyChanged("IdProdLastChr")
				Me.OnIdProdLastChrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int")>  _
	Public Property IdArt() As System.Nullable(Of Integer)
		Get
			Return Me._IdArt
		End Get
		Set
			If (Me._IdArt.Equals(value) = false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Data", DbType:="NVarChar(50)")>  _
	Public Property Data() As String
		Get
			Return Me._Data
		End Get
		Set
			If (String.Equals(Me._Data, value) = false) Then
				Me.OnDataChanging(value)
				Me.SendPropertyChanging
				Me._Data = value
				Me.SendPropertyChanged("Data")
				Me.OnDataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hora", DbType:="NVarChar(50)")>  _
	Public Property Hora() As String
		Get
			Return Me._Hora
		End Get
		Set
			If (String.Equals(Me._Hora, value) = false) Then
				Me.OnHoraChanging(value)
				Me.SendPropertyChanging
				Me._Hora = value
				Me.SendPropertyChanged("Hora")
				Me.OnHoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumBatch", DbType:="NVarChar(50)")>  _
	Public Property NumBatch() As String
		Get
			Return Me._NumBatch
		End Get
		Set
			If (String.Equals(Me._NumBatch, value) = false) Then
				Me.OnNumBatchChanging(value)
				Me.SendPropertyChanging
				Me._NumBatch = value
				Me.SendPropertyChanged("NumBatch")
				Me.OnNumBatchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdOk", DbType:="NVarChar(50)")>  _
	Public Property QtdProdOk() As String
		Get
			Return Me._QtdProdOk
		End Get
		Set
			If (String.Equals(Me._QtdProdOk, value) = false) Then
				Me.OnQtdProdOkChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdOk = value
				Me.SendPropertyChanged("QtdProdOk")
				Me.OnQtdProdOkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdNok", DbType:="NVarChar(50)")>  _
	Public Property QtdProdNok() As String
		Get
			Return Me._QtdProdNok
		End Get
		Set
			If (String.Equals(Me._QtdProdNok, value) = false) Then
				Me.OnQtdProdNokChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdNok = value
				Me.SendPropertyChanged("QtdProdNok")
				Me.OnQtdProdNokChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VlMedio", DbType:="NVarChar(50)")>  _
	Public Property VlMedio() As String
		Get
			Return Me._VlMedio
		End Get
		Set
			If (String.Equals(Me._VlMedio, value) = false) Then
				Me.OnVlMedioChanging(value)
				Me.SendPropertyChanging
				Me._VlMedio = value
				Me.SendPropertyChanged("VlMedio")
				Me.OnVlMedioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DesvioPadrao", DbType:="NVarChar(50)")>  _
	Public Property DesvioPadrao() As String
		Get
			Return Me._DesvioPadrao
		End Get
		Set
			If (String.Equals(Me._DesvioPadrao, value) = false) Then
				Me.OnDesvioPadraoChanging(value)
				Me.SendPropertyChanging
				Me._DesvioPadrao = value
				Me.SendPropertyChanged("DesvioPadrao")
				Me.OnDesvioPadraoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tu1Lim", DbType:="NVarChar(50)")>  _
	Public Property Tu1Lim() As String
		Get
			Return Me._Tu1Lim
		End Get
		Set
			If (String.Equals(Me._Tu1Lim, value) = false) Then
				Me.OnTu1LimChanging(value)
				Me.SendPropertyChanging
				Me._Tu1Lim = value
				Me.SendPropertyChanged("Tu1Lim")
				Me.OnTu1LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdTu1Lim", DbType:="NVarChar(50)")>  _
	Public Property QtdProdTu1Lim() As String
		Get
			Return Me._QtdProdTu1Lim
		End Get
		Set
			If (String.Equals(Me._QtdProdTu1Lim, value) = false) Then
				Me.OnQtdProdTu1LimChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdTu1Lim = value
				Me.SendPropertyChanged("QtdProdTu1Lim")
				Me.OnQtdProdTu1LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProdTU1LimPerc", DbType:="NVarChar(50)")>  _
	Public Property ProdTU1LimPerc() As String
		Get
			Return Me._ProdTU1LimPerc
		End Get
		Set
			If (String.Equals(Me._ProdTU1LimPerc, value) = false) Then
				Me.OnProdTU1LimPercChanging(value)
				Me.SendPropertyChanging
				Me._ProdTU1LimPerc = value
				Me.SendPropertyChanged("ProdTU1LimPerc")
				Me.OnProdTU1LimPercChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tu2Lim", DbType:="NVarChar(50)")>  _
	Public Property Tu2Lim() As String
		Get
			Return Me._Tu2Lim
		End Get
		Set
			If (String.Equals(Me._Tu2Lim, value) = false) Then
				Me.OnTu2LimChanging(value)
				Me.SendPropertyChanging
				Me._Tu2Lim = value
				Me.SendPropertyChanged("Tu2Lim")
				Me.OnTu2LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdTu2Lim", DbType:="NVarChar(50)")>  _
	Public Property QtdProdTu2Lim() As String
		Get
			Return Me._QtdProdTu2Lim
		End Get
		Set
			If (String.Equals(Me._QtdProdTu2Lim, value) = false) Then
				Me.OnQtdProdTu2LimChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdTu2Lim = value
				Me.SendPropertyChanged("QtdProdTu2Lim")
				Me.OnQtdProdTu2LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProdLastInt")>  _
Partial Public Class ProdLastInt
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdProdLastInt As Integer
	
	Private _IdArt As System.Nullable(Of Integer)
	
	Private _Data As String
	
	Private _Hora As String
	
	Private _QtdProdOk As String
	
	Private _QtdProdNok As String
	
	Private _VlMedio As String
	
	Private _DesvioPadrao As String
	
	Private _TuLim As String
	
	Private _QtdProdTU1Lim As String
	
	Private _ProdTU1LimPerc As String
	
	Private _Tu2Lim As String
	
	Private _DataHora As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdProdLastIntChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdProdLastIntChanged()
    End Sub
    Partial Private Sub OnIdArtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnDataChanging(value As String)
    End Sub
    Partial Private Sub OnDataChanged()
    End Sub
    Partial Private Sub OnHoraChanging(value As String)
    End Sub
    Partial Private Sub OnHoraChanged()
    End Sub
    Partial Private Sub OnQtdProdOkChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdOkChanged()
    End Sub
    Partial Private Sub OnQtdProdNokChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdNokChanged()
    End Sub
    Partial Private Sub OnVlMedioChanging(value As String)
    End Sub
    Partial Private Sub OnVlMedioChanged()
    End Sub
    Partial Private Sub OnDesvioPadraoChanging(value As String)
    End Sub
    Partial Private Sub OnDesvioPadraoChanged()
    End Sub
    Partial Private Sub OnTuLimChanging(value As String)
    End Sub
    Partial Private Sub OnTuLimChanged()
    End Sub
    Partial Private Sub OnQtdProdTU1LimChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdTU1LimChanged()
    End Sub
    Partial Private Sub OnProdTU1LimPercChanging(value As String)
    End Sub
    Partial Private Sub OnProdTU1LimPercChanged()
    End Sub
    Partial Private Sub OnTu2LimChanging(value As String)
    End Sub
    Partial Private Sub OnTu2LimChanged()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProdLastInt", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdProdLastInt() As Integer
		Get
			Return Me._IdProdLastInt
		End Get
		Set
			If ((Me._IdProdLastInt = value)  _
						= false) Then
				Me.OnIdProdLastIntChanging(value)
				Me.SendPropertyChanging
				Me._IdProdLastInt = value
				Me.SendPropertyChanged("IdProdLastInt")
				Me.OnIdProdLastIntChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int")>  _
	Public Property IdArt() As System.Nullable(Of Integer)
		Get
			Return Me._IdArt
		End Get
		Set
			If (Me._IdArt.Equals(value) = false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Data", DbType:="NVarChar(50)")>  _
	Public Property Data() As String
		Get
			Return Me._Data
		End Get
		Set
			If (String.Equals(Me._Data, value) = false) Then
				Me.OnDataChanging(value)
				Me.SendPropertyChanging
				Me._Data = value
				Me.SendPropertyChanged("Data")
				Me.OnDataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hora", DbType:="NVarChar(50)")>  _
	Public Property Hora() As String
		Get
			Return Me._Hora
		End Get
		Set
			If (String.Equals(Me._Hora, value) = false) Then
				Me.OnHoraChanging(value)
				Me.SendPropertyChanging
				Me._Hora = value
				Me.SendPropertyChanged("Hora")
				Me.OnHoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdOk", DbType:="NVarChar(50)")>  _
	Public Property QtdProdOk() As String
		Get
			Return Me._QtdProdOk
		End Get
		Set
			If (String.Equals(Me._QtdProdOk, value) = false) Then
				Me.OnQtdProdOkChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdOk = value
				Me.SendPropertyChanged("QtdProdOk")
				Me.OnQtdProdOkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdNok", DbType:="NVarChar(50)")>  _
	Public Property QtdProdNok() As String
		Get
			Return Me._QtdProdNok
		End Get
		Set
			If (String.Equals(Me._QtdProdNok, value) = false) Then
				Me.OnQtdProdNokChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdNok = value
				Me.SendPropertyChanged("QtdProdNok")
				Me.OnQtdProdNokChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VlMedio", DbType:="NVarChar(50)")>  _
	Public Property VlMedio() As String
		Get
			Return Me._VlMedio
		End Get
		Set
			If (String.Equals(Me._VlMedio, value) = false) Then
				Me.OnVlMedioChanging(value)
				Me.SendPropertyChanging
				Me._VlMedio = value
				Me.SendPropertyChanged("VlMedio")
				Me.OnVlMedioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DesvioPadrao", DbType:="NVarChar(50)")>  _
	Public Property DesvioPadrao() As String
		Get
			Return Me._DesvioPadrao
		End Get
		Set
			If (String.Equals(Me._DesvioPadrao, value) = false) Then
				Me.OnDesvioPadraoChanging(value)
				Me.SendPropertyChanging
				Me._DesvioPadrao = value
				Me.SendPropertyChanged("DesvioPadrao")
				Me.OnDesvioPadraoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TuLim", DbType:="NVarChar(50)")>  _
	Public Property TuLim() As String
		Get
			Return Me._TuLim
		End Get
		Set
			If (String.Equals(Me._TuLim, value) = false) Then
				Me.OnTuLimChanging(value)
				Me.SendPropertyChanging
				Me._TuLim = value
				Me.SendPropertyChanged("TuLim")
				Me.OnTuLimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdTU1Lim", DbType:="NVarChar(50)")>  _
	Public Property QtdProdTU1Lim() As String
		Get
			Return Me._QtdProdTU1Lim
		End Get
		Set
			If (String.Equals(Me._QtdProdTU1Lim, value) = false) Then
				Me.OnQtdProdTU1LimChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdTU1Lim = value
				Me.SendPropertyChanged("QtdProdTU1Lim")
				Me.OnQtdProdTU1LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProdTU1LimPerc", DbType:="NVarChar(50)")>  _
	Public Property ProdTU1LimPerc() As String
		Get
			Return Me._ProdTU1LimPerc
		End Get
		Set
			If (String.Equals(Me._ProdTU1LimPerc, value) = false) Then
				Me.OnProdTU1LimPercChanging(value)
				Me.SendPropertyChanging
				Me._ProdTU1LimPerc = value
				Me.SendPropertyChanged("ProdTU1LimPerc")
				Me.OnProdTU1LimPercChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tu2Lim", DbType:="NVarChar(50)")>  _
	Public Property Tu2Lim() As String
		Get
			Return Me._Tu2Lim
		End Get
		Set
			If (String.Equals(Me._Tu2Lim, value) = false) Then
				Me.OnTu2LimChanging(value)
				Me.SendPropertyChanging
				Me._Tu2Lim = value
				Me.SendPropertyChanged("Tu2Lim")
				Me.OnTu2LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProdMinus")>  _
Partial Public Class ProdMinus
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdProdMinus As Integer
	
	Private _IdArt As System.Nullable(Of Integer)
	
	Private _QtdProdMinusZ1 As String
	
	Private _PesoTotalMinusZ1 As String
	
	Private _VlMedioMinusZ1 As String
	
	Private _QtdProdMinusZ2 As String
	
	Private _PesoTotalMinusZ2 As String
	
	Private _VlMedioMinusZ2 As String
	
	Private _QtdProdMinusZ3 As String
	
	Private _PesoTotalMinusZ3 As String
	
	Private _VlMedioMinusZ3 As String
	
	Private _DataHora As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdProdMinusChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdProdMinusChanged()
    End Sub
    Partial Private Sub OnIdArtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnQtdProdMinusZ1Changing(value As String)
    End Sub
    Partial Private Sub OnQtdProdMinusZ1Changed()
    End Sub
    Partial Private Sub OnPesoTotalMinusZ1Changing(value As String)
    End Sub
    Partial Private Sub OnPesoTotalMinusZ1Changed()
    End Sub
    Partial Private Sub OnVlMedioMinusZ1Changing(value As String)
    End Sub
    Partial Private Sub OnVlMedioMinusZ1Changed()
    End Sub
    Partial Private Sub OnQtdProdMinusZ2Changing(value As String)
    End Sub
    Partial Private Sub OnQtdProdMinusZ2Changed()
    End Sub
    Partial Private Sub OnPesoTotalMinusZ2Changing(value As String)
    End Sub
    Partial Private Sub OnPesoTotalMinusZ2Changed()
    End Sub
    Partial Private Sub OnVlMedioMinusZ2Changing(value As String)
    End Sub
    Partial Private Sub OnVlMedioMinusZ2Changed()
    End Sub
    Partial Private Sub OnQtdProdMinusZ3Changing(value As String)
    End Sub
    Partial Private Sub OnQtdProdMinusZ3Changed()
    End Sub
    Partial Private Sub OnPesoTotalMinusZ3Changing(value As String)
    End Sub
    Partial Private Sub OnPesoTotalMinusZ3Changed()
    End Sub
    Partial Private Sub OnVlMedioMinusZ3Changing(value As String)
    End Sub
    Partial Private Sub OnVlMedioMinusZ3Changed()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProdMinus", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdProdMinus() As Integer
		Get
			Return Me._IdProdMinus
		End Get
		Set
			If ((Me._IdProdMinus = value)  _
						= false) Then
				Me.OnIdProdMinusChanging(value)
				Me.SendPropertyChanging
				Me._IdProdMinus = value
				Me.SendPropertyChanged("IdProdMinus")
				Me.OnIdProdMinusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int")>  _
	Public Property IdArt() As System.Nullable(Of Integer)
		Get
			Return Me._IdArt
		End Get
		Set
			If (Me._IdArt.Equals(value) = false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdMinusZ1", DbType:="NVarChar(50)")>  _
	Public Property QtdProdMinusZ1() As String
		Get
			Return Me._QtdProdMinusZ1
		End Get
		Set
			If (String.Equals(Me._QtdProdMinusZ1, value) = false) Then
				Me.OnQtdProdMinusZ1Changing(value)
				Me.SendPropertyChanging
				Me._QtdProdMinusZ1 = value
				Me.SendPropertyChanged("QtdProdMinusZ1")
				Me.OnQtdProdMinusZ1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PesoTotalMinusZ1", DbType:="NVarChar(50)")>  _
	Public Property PesoTotalMinusZ1() As String
		Get
			Return Me._PesoTotalMinusZ1
		End Get
		Set
			If (String.Equals(Me._PesoTotalMinusZ1, value) = false) Then
				Me.OnPesoTotalMinusZ1Changing(value)
				Me.SendPropertyChanging
				Me._PesoTotalMinusZ1 = value
				Me.SendPropertyChanged("PesoTotalMinusZ1")
				Me.OnPesoTotalMinusZ1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VlMedioMinusZ1", DbType:="NVarChar(50)")>  _
	Public Property VlMedioMinusZ1() As String
		Get
			Return Me._VlMedioMinusZ1
		End Get
		Set
			If (String.Equals(Me._VlMedioMinusZ1, value) = false) Then
				Me.OnVlMedioMinusZ1Changing(value)
				Me.SendPropertyChanging
				Me._VlMedioMinusZ1 = value
				Me.SendPropertyChanged("VlMedioMinusZ1")
				Me.OnVlMedioMinusZ1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdMinusZ2", DbType:="NVarChar(50)")>  _
	Public Property QtdProdMinusZ2() As String
		Get
			Return Me._QtdProdMinusZ2
		End Get
		Set
			If (String.Equals(Me._QtdProdMinusZ2, value) = false) Then
				Me.OnQtdProdMinusZ2Changing(value)
				Me.SendPropertyChanging
				Me._QtdProdMinusZ2 = value
				Me.SendPropertyChanged("QtdProdMinusZ2")
				Me.OnQtdProdMinusZ2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PesoTotalMinusZ2", DbType:="NVarChar(50)")>  _
	Public Property PesoTotalMinusZ2() As String
		Get
			Return Me._PesoTotalMinusZ2
		End Get
		Set
			If (String.Equals(Me._PesoTotalMinusZ2, value) = false) Then
				Me.OnPesoTotalMinusZ2Changing(value)
				Me.SendPropertyChanging
				Me._PesoTotalMinusZ2 = value
				Me.SendPropertyChanged("PesoTotalMinusZ2")
				Me.OnPesoTotalMinusZ2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VlMedioMinusZ2", DbType:="NVarChar(50)")>  _
	Public Property VlMedioMinusZ2() As String
		Get
			Return Me._VlMedioMinusZ2
		End Get
		Set
			If (String.Equals(Me._VlMedioMinusZ2, value) = false) Then
				Me.OnVlMedioMinusZ2Changing(value)
				Me.SendPropertyChanging
				Me._VlMedioMinusZ2 = value
				Me.SendPropertyChanged("VlMedioMinusZ2")
				Me.OnVlMedioMinusZ2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdMinusZ3", DbType:="NVarChar(50)")>  _
	Public Property QtdProdMinusZ3() As String
		Get
			Return Me._QtdProdMinusZ3
		End Get
		Set
			If (String.Equals(Me._QtdProdMinusZ3, value) = false) Then
				Me.OnQtdProdMinusZ3Changing(value)
				Me.SendPropertyChanging
				Me._QtdProdMinusZ3 = value
				Me.SendPropertyChanged("QtdProdMinusZ3")
				Me.OnQtdProdMinusZ3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PesoTotalMinusZ3", DbType:="NVarChar(50)")>  _
	Public Property PesoTotalMinusZ3() As String
		Get
			Return Me._PesoTotalMinusZ3
		End Get
		Set
			If (String.Equals(Me._PesoTotalMinusZ3, value) = false) Then
				Me.OnPesoTotalMinusZ3Changing(value)
				Me.SendPropertyChanging
				Me._PesoTotalMinusZ3 = value
				Me.SendPropertyChanged("PesoTotalMinusZ3")
				Me.OnPesoTotalMinusZ3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VlMedioMinusZ3", DbType:="NVarChar(50)")>  _
	Public Property VlMedioMinusZ3() As String
		Get
			Return Me._VlMedioMinusZ3
		End Get
		Set
			If (String.Equals(Me._VlMedioMinusZ3, value) = false) Then
				Me.OnVlMedioMinusZ3Changing(value)
				Me.SendPropertyChanging
				Me._VlMedioMinusZ3 = value
				Me.SendPropertyChanged("VlMedioMinusZ3")
				Me.OnVlMedioMinusZ3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProdPlus")>  _
Partial Public Class ProdPlus
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdProdPlus As Integer
	
	Private _IdArt As System.Nullable(Of Integer)
	
	Private _QtdProdPlusZ3 As String
	
	Private _PesoTotalPlusZ3 As String
	
	Private _VlMedioPlusZ3 As String
	
	Private _QtdProdPlusZ2 As String
	
	Private _PesoTotalPlusZ2 As String
	
	Private _VlMedioPlusZ2 As String
	
	Private _QtdProdPlusZ1 As String
	
	Private _PesoTotalPlusZ1 As String
	
	Private _VlMedioPlusZ1 As String
	
	Private _DataHora As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdProdPlusChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdProdPlusChanged()
    End Sub
    Partial Private Sub OnIdArtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnQtdProdPlusZ3Changing(value As String)
    End Sub
    Partial Private Sub OnQtdProdPlusZ3Changed()
    End Sub
    Partial Private Sub OnPesoTotalPlusZ3Changing(value As String)
    End Sub
    Partial Private Sub OnPesoTotalPlusZ3Changed()
    End Sub
    Partial Private Sub OnVlMedioPlusZ3Changing(value As String)
    End Sub
    Partial Private Sub OnVlMedioPlusZ3Changed()
    End Sub
    Partial Private Sub OnQtdProdPlusZ2Changing(value As String)
    End Sub
    Partial Private Sub OnQtdProdPlusZ2Changed()
    End Sub
    Partial Private Sub OnPesoTotalPlusZ2Changing(value As String)
    End Sub
    Partial Private Sub OnPesoTotalPlusZ2Changed()
    End Sub
    Partial Private Sub OnVlMedioPlusZ2Changing(value As String)
    End Sub
    Partial Private Sub OnVlMedioPlusZ2Changed()
    End Sub
    Partial Private Sub OnQtdProdPlusZ1Changing(value As String)
    End Sub
    Partial Private Sub OnQtdProdPlusZ1Changed()
    End Sub
    Partial Private Sub OnPesoTotalPlusZ1Changing(value As String)
    End Sub
    Partial Private Sub OnPesoTotalPlusZ1Changed()
    End Sub
    Partial Private Sub OnVlMedioPlusZ1Changing(value As String)
    End Sub
    Partial Private Sub OnVlMedioPlusZ1Changed()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProdPlus", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdProdPlus() As Integer
		Get
			Return Me._IdProdPlus
		End Get
		Set
			If ((Me._IdProdPlus = value)  _
						= false) Then
				Me.OnIdProdPlusChanging(value)
				Me.SendPropertyChanging
				Me._IdProdPlus = value
				Me.SendPropertyChanged("IdProdPlus")
				Me.OnIdProdPlusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int")>  _
	Public Property IdArt() As System.Nullable(Of Integer)
		Get
			Return Me._IdArt
		End Get
		Set
			If (Me._IdArt.Equals(value) = false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdPlusZ3", DbType:="NVarChar(50)")>  _
	Public Property QtdProdPlusZ3() As String
		Get
			Return Me._QtdProdPlusZ3
		End Get
		Set
			If (String.Equals(Me._QtdProdPlusZ3, value) = false) Then
				Me.OnQtdProdPlusZ3Changing(value)
				Me.SendPropertyChanging
				Me._QtdProdPlusZ3 = value
				Me.SendPropertyChanged("QtdProdPlusZ3")
				Me.OnQtdProdPlusZ3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PesoTotalPlusZ3", DbType:="NVarChar(50)")>  _
	Public Property PesoTotalPlusZ3() As String
		Get
			Return Me._PesoTotalPlusZ3
		End Get
		Set
			If (String.Equals(Me._PesoTotalPlusZ3, value) = false) Then
				Me.OnPesoTotalPlusZ3Changing(value)
				Me.SendPropertyChanging
				Me._PesoTotalPlusZ3 = value
				Me.SendPropertyChanged("PesoTotalPlusZ3")
				Me.OnPesoTotalPlusZ3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VlMedioPlusZ3", DbType:="NVarChar(50)")>  _
	Public Property VlMedioPlusZ3() As String
		Get
			Return Me._VlMedioPlusZ3
		End Get
		Set
			If (String.Equals(Me._VlMedioPlusZ3, value) = false) Then
				Me.OnVlMedioPlusZ3Changing(value)
				Me.SendPropertyChanging
				Me._VlMedioPlusZ3 = value
				Me.SendPropertyChanged("VlMedioPlusZ3")
				Me.OnVlMedioPlusZ3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdPlusZ2", DbType:="NVarChar(50)")>  _
	Public Property QtdProdPlusZ2() As String
		Get
			Return Me._QtdProdPlusZ2
		End Get
		Set
			If (String.Equals(Me._QtdProdPlusZ2, value) = false) Then
				Me.OnQtdProdPlusZ2Changing(value)
				Me.SendPropertyChanging
				Me._QtdProdPlusZ2 = value
				Me.SendPropertyChanged("QtdProdPlusZ2")
				Me.OnQtdProdPlusZ2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PesoTotalPlusZ2", DbType:="NVarChar(50)")>  _
	Public Property PesoTotalPlusZ2() As String
		Get
			Return Me._PesoTotalPlusZ2
		End Get
		Set
			If (String.Equals(Me._PesoTotalPlusZ2, value) = false) Then
				Me.OnPesoTotalPlusZ2Changing(value)
				Me.SendPropertyChanging
				Me._PesoTotalPlusZ2 = value
				Me.SendPropertyChanged("PesoTotalPlusZ2")
				Me.OnPesoTotalPlusZ2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VlMedioPlusZ2", DbType:="NVarChar(50)")>  _
	Public Property VlMedioPlusZ2() As String
		Get
			Return Me._VlMedioPlusZ2
		End Get
		Set
			If (String.Equals(Me._VlMedioPlusZ2, value) = false) Then
				Me.OnVlMedioPlusZ2Changing(value)
				Me.SendPropertyChanging
				Me._VlMedioPlusZ2 = value
				Me.SendPropertyChanged("VlMedioPlusZ2")
				Me.OnVlMedioPlusZ2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdPlusZ1", DbType:="NVarChar(50)")>  _
	Public Property QtdProdPlusZ1() As String
		Get
			Return Me._QtdProdPlusZ1
		End Get
		Set
			If (String.Equals(Me._QtdProdPlusZ1, value) = false) Then
				Me.OnQtdProdPlusZ1Changing(value)
				Me.SendPropertyChanging
				Me._QtdProdPlusZ1 = value
				Me.SendPropertyChanged("QtdProdPlusZ1")
				Me.OnQtdProdPlusZ1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PesoTotalPlusZ1", DbType:="NVarChar(50)")>  _
	Public Property PesoTotalPlusZ1() As String
		Get
			Return Me._PesoTotalPlusZ1
		End Get
		Set
			If (String.Equals(Me._PesoTotalPlusZ1, value) = false) Then
				Me.OnPesoTotalPlusZ1Changing(value)
				Me.SendPropertyChanging
				Me._PesoTotalPlusZ1 = value
				Me.SendPropertyChanged("PesoTotalPlusZ1")
				Me.OnPesoTotalPlusZ1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VlMedioPlusZ1", DbType:="NVarChar(50)")>  _
	Public Property VlMedioPlusZ1() As String
		Get
			Return Me._VlMedioPlusZ1
		End Get
		Set
			If (String.Equals(Me._VlMedioPlusZ1, value) = false) Then
				Me.OnVlMedioPlusZ1Changing(value)
				Me.SendPropertyChanging
				Me._VlMedioPlusZ1 = value
				Me.SendPropertyChanged("VlMedioPlusZ1")
				Me.OnVlMedioPlusZ1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProdStat")>  _
Partial Public Class ProdStat
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdProdStat As Integer
	
	Private _IdArt As System.Nullable(Of Integer)
	
	Private _Data As String
	
	Private _Hora As String
	
	Private _Artigo As String
	
	Private _NumBatch As String
	
	Private _PesoNominal As String
	
	Private _Tara As String
	
	Private _QtdProdOk As String
	
	Private _QtdProdNok As String
	
	Private _VlMedio As String
	
	Private _DesvioPadrao As String
	
	Private _Tu1Lim As String
	
	Private _QtdProdTu1Lim As String
	
	Private _QtdProdPerc As String
	
	Private _Tu2Lim As String
	
	Private _QtdProdTu2Lim As String
	
	Private _DataHora As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdProdStatChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdProdStatChanged()
    End Sub
    Partial Private Sub OnIdArtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnDataChanging(value As String)
    End Sub
    Partial Private Sub OnDataChanged()
    End Sub
    Partial Private Sub OnHoraChanging(value As String)
    End Sub
    Partial Private Sub OnHoraChanged()
    End Sub
    Partial Private Sub OnArtigoChanging(value As String)
    End Sub
    Partial Private Sub OnArtigoChanged()
    End Sub
    Partial Private Sub OnNumBatchChanging(value As String)
    End Sub
    Partial Private Sub OnNumBatchChanged()
    End Sub
    Partial Private Sub OnPesoNominalChanging(value As String)
    End Sub
    Partial Private Sub OnPesoNominalChanged()
    End Sub
    Partial Private Sub OnTaraChanging(value As String)
    End Sub
    Partial Private Sub OnTaraChanged()
    End Sub
    Partial Private Sub OnQtdProdOkChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdOkChanged()
    End Sub
    Partial Private Sub OnQtdProdNokChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdNokChanged()
    End Sub
    Partial Private Sub OnVlMedioChanging(value As String)
    End Sub
    Partial Private Sub OnVlMedioChanged()
    End Sub
    Partial Private Sub OnDesvioPadraoChanging(value As String)
    End Sub
    Partial Private Sub OnDesvioPadraoChanged()
    End Sub
    Partial Private Sub OnTu1LimChanging(value As String)
    End Sub
    Partial Private Sub OnTu1LimChanged()
    End Sub
    Partial Private Sub OnQtdProdTu1LimChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdTu1LimChanged()
    End Sub
    Partial Private Sub OnQtdProdPercChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdPercChanged()
    End Sub
    Partial Private Sub OnTu2LimChanging(value As String)
    End Sub
    Partial Private Sub OnTu2LimChanged()
    End Sub
    Partial Private Sub OnQtdProdTu2LimChanging(value As String)
    End Sub
    Partial Private Sub OnQtdProdTu2LimChanged()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProdStat", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdProdStat() As Integer
		Get
			Return Me._IdProdStat
		End Get
		Set
			If ((Me._IdProdStat = value)  _
						= false) Then
				Me.OnIdProdStatChanging(value)
				Me.SendPropertyChanging
				Me._IdProdStat = value
				Me.SendPropertyChanged("IdProdStat")
				Me.OnIdProdStatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int")>  _
	Public Property IdArt() As System.Nullable(Of Integer)
		Get
			Return Me._IdArt
		End Get
		Set
			If (Me._IdArt.Equals(value) = false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Data", DbType:="NVarChar(50)")>  _
	Public Property Data() As String
		Get
			Return Me._Data
		End Get
		Set
			If (String.Equals(Me._Data, value) = false) Then
				Me.OnDataChanging(value)
				Me.SendPropertyChanging
				Me._Data = value
				Me.SendPropertyChanged("Data")
				Me.OnDataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hora", DbType:="NVarChar(50)")>  _
	Public Property Hora() As String
		Get
			Return Me._Hora
		End Get
		Set
			If (String.Equals(Me._Hora, value) = false) Then
				Me.OnHoraChanging(value)
				Me.SendPropertyChanging
				Me._Hora = value
				Me.SendPropertyChanged("Hora")
				Me.OnHoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Artigo", DbType:="NVarChar(50)")>  _
	Public Property Artigo() As String
		Get
			Return Me._Artigo
		End Get
		Set
			If (String.Equals(Me._Artigo, value) = false) Then
				Me.OnArtigoChanging(value)
				Me.SendPropertyChanging
				Me._Artigo = value
				Me.SendPropertyChanged("Artigo")
				Me.OnArtigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumBatch", DbType:="NVarChar(50)")>  _
	Public Property NumBatch() As String
		Get
			Return Me._NumBatch
		End Get
		Set
			If (String.Equals(Me._NumBatch, value) = false) Then
				Me.OnNumBatchChanging(value)
				Me.SendPropertyChanging
				Me._NumBatch = value
				Me.SendPropertyChanged("NumBatch")
				Me.OnNumBatchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PesoNominal", DbType:="NVarChar(50)")>  _
	Public Property PesoNominal() As String
		Get
			Return Me._PesoNominal
		End Get
		Set
			If (String.Equals(Me._PesoNominal, value) = false) Then
				Me.OnPesoNominalChanging(value)
				Me.SendPropertyChanging
				Me._PesoNominal = value
				Me.SendPropertyChanged("PesoNominal")
				Me.OnPesoNominalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tara", DbType:="NVarChar(50)")>  _
	Public Property Tara() As String
		Get
			Return Me._Tara
		End Get
		Set
			If (String.Equals(Me._Tara, value) = false) Then
				Me.OnTaraChanging(value)
				Me.SendPropertyChanging
				Me._Tara = value
				Me.SendPropertyChanged("Tara")
				Me.OnTaraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdOk", DbType:="NVarChar(50)")>  _
	Public Property QtdProdOk() As String
		Get
			Return Me._QtdProdOk
		End Get
		Set
			If (String.Equals(Me._QtdProdOk, value) = false) Then
				Me.OnQtdProdOkChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdOk = value
				Me.SendPropertyChanged("QtdProdOk")
				Me.OnQtdProdOkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdNok", DbType:="NVarChar(50)")>  _
	Public Property QtdProdNok() As String
		Get
			Return Me._QtdProdNok
		End Get
		Set
			If (String.Equals(Me._QtdProdNok, value) = false) Then
				Me.OnQtdProdNokChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdNok = value
				Me.SendPropertyChanged("QtdProdNok")
				Me.OnQtdProdNokChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VlMedio", DbType:="NVarChar(50)")>  _
	Public Property VlMedio() As String
		Get
			Return Me._VlMedio
		End Get
		Set
			If (String.Equals(Me._VlMedio, value) = false) Then
				Me.OnVlMedioChanging(value)
				Me.SendPropertyChanging
				Me._VlMedio = value
				Me.SendPropertyChanged("VlMedio")
				Me.OnVlMedioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DesvioPadrao", DbType:="NVarChar(50)")>  _
	Public Property DesvioPadrao() As String
		Get
			Return Me._DesvioPadrao
		End Get
		Set
			If (String.Equals(Me._DesvioPadrao, value) = false) Then
				Me.OnDesvioPadraoChanging(value)
				Me.SendPropertyChanging
				Me._DesvioPadrao = value
				Me.SendPropertyChanged("DesvioPadrao")
				Me.OnDesvioPadraoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tu1Lim", DbType:="NVarChar(50)")>  _
	Public Property Tu1Lim() As String
		Get
			Return Me._Tu1Lim
		End Get
		Set
			If (String.Equals(Me._Tu1Lim, value) = false) Then
				Me.OnTu1LimChanging(value)
				Me.SendPropertyChanging
				Me._Tu1Lim = value
				Me.SendPropertyChanged("Tu1Lim")
				Me.OnTu1LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdTu1Lim", DbType:="NVarChar(50)")>  _
	Public Property QtdProdTu1Lim() As String
		Get
			Return Me._QtdProdTu1Lim
		End Get
		Set
			If (String.Equals(Me._QtdProdTu1Lim, value) = false) Then
				Me.OnQtdProdTu1LimChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdTu1Lim = value
				Me.SendPropertyChanged("QtdProdTu1Lim")
				Me.OnQtdProdTu1LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdPerc", DbType:="NVarChar(50)")>  _
	Public Property QtdProdPerc() As String
		Get
			Return Me._QtdProdPerc
		End Get
		Set
			If (String.Equals(Me._QtdProdPerc, value) = false) Then
				Me.OnQtdProdPercChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdPerc = value
				Me.SendPropertyChanged("QtdProdPerc")
				Me.OnQtdProdPercChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tu2Lim", DbType:="NVarChar(50)")>  _
	Public Property Tu2Lim() As String
		Get
			Return Me._Tu2Lim
		End Get
		Set
			If (String.Equals(Me._Tu2Lim, value) = false) Then
				Me.OnTu2LimChanging(value)
				Me.SendPropertyChanging
				Me._Tu2Lim = value
				Me.SendPropertyChanged("Tu2Lim")
				Me.OnTu2LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdTu2Lim", DbType:="NVarChar(50)")>  _
	Public Property QtdProdTu2Lim() As String
		Get
			Return Me._QtdProdTu2Lim
		End Get
		Set
			If (String.Equals(Me._QtdProdTu2Lim, value) = false) Then
				Me.OnQtdProdTu2LimChanging(value)
				Me.SendPropertyChanging
				Me._QtdProdTu2Lim = value
				Me.SendPropertyChanged("QtdProdTu2Lim")
				Me.OnQtdProdTu2LimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SdData")>  _
Partial Public Class SdData
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdSdData As Integer
	
	Private _IdArt As System.Nullable(Of Integer)
	
	Private _PesoNom As String
	
	Private _TaraMedia As String
	
	Private _TamArt As String
	
	Private _NumProdNok As String
	
	Private _RendAlvo As String
	
	Private _TempoAfericao As String
	
	Private _FtCorrecao As String
	
	Private _TamMax As String
	
	Private _DensEspec As String
	
	Private _CorrDens As String
	
	Private _DataHora As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdSdDataChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSdDataChanged()
    End Sub
    Partial Private Sub OnIdArtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnPesoNomChanging(value As String)
    End Sub
    Partial Private Sub OnPesoNomChanged()
    End Sub
    Partial Private Sub OnTaraMediaChanging(value As String)
    End Sub
    Partial Private Sub OnTaraMediaChanged()
    End Sub
    Partial Private Sub OnTamArtChanging(value As String)
    End Sub
    Partial Private Sub OnTamArtChanged()
    End Sub
    Partial Private Sub OnNumProdNokChanging(value As String)
    End Sub
    Partial Private Sub OnNumProdNokChanged()
    End Sub
    Partial Private Sub OnRendAlvoChanging(value As String)
    End Sub
    Partial Private Sub OnRendAlvoChanged()
    End Sub
    Partial Private Sub OnTempoAfericaoChanging(value As String)
    End Sub
    Partial Private Sub OnTempoAfericaoChanged()
    End Sub
    Partial Private Sub OnFtCorrecaoChanging(value As String)
    End Sub
    Partial Private Sub OnFtCorrecaoChanged()
    End Sub
    Partial Private Sub OnTamMaxChanging(value As String)
    End Sub
    Partial Private Sub OnTamMaxChanged()
    End Sub
    Partial Private Sub OnDensEspecChanging(value As String)
    End Sub
    Partial Private Sub OnDensEspecChanged()
    End Sub
    Partial Private Sub OnCorrDensChanging(value As String)
    End Sub
    Partial Private Sub OnCorrDensChanged()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSdData", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdSdData() As Integer
		Get
			Return Me._IdSdData
		End Get
		Set
			If ((Me._IdSdData = value)  _
						= false) Then
				Me.OnIdSdDataChanging(value)
				Me.SendPropertyChanging
				Me._IdSdData = value
				Me.SendPropertyChanged("IdSdData")
				Me.OnIdSdDataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int")>  _
	Public Property IdArt() As System.Nullable(Of Integer)
		Get
			Return Me._IdArt
		End Get
		Set
			If (Me._IdArt.Equals(value) = false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PesoNom", DbType:="NVarChar(50)")>  _
	Public Property PesoNom() As String
		Get
			Return Me._PesoNom
		End Get
		Set
			If (String.Equals(Me._PesoNom, value) = false) Then
				Me.OnPesoNomChanging(value)
				Me.SendPropertyChanging
				Me._PesoNom = value
				Me.SendPropertyChanged("PesoNom")
				Me.OnPesoNomChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaraMedia", DbType:="NVarChar(50)")>  _
	Public Property TaraMedia() As String
		Get
			Return Me._TaraMedia
		End Get
		Set
			If (String.Equals(Me._TaraMedia, value) = false) Then
				Me.OnTaraMediaChanging(value)
				Me.SendPropertyChanging
				Me._TaraMedia = value
				Me.SendPropertyChanged("TaraMedia")
				Me.OnTaraMediaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TamArt", DbType:="NVarChar(50)")>  _
	Public Property TamArt() As String
		Get
			Return Me._TamArt
		End Get
		Set
			If (String.Equals(Me._TamArt, value) = false) Then
				Me.OnTamArtChanging(value)
				Me.SendPropertyChanging
				Me._TamArt = value
				Me.SendPropertyChanged("TamArt")
				Me.OnTamArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumProdNok", DbType:="NVarChar(50)")>  _
	Public Property NumProdNok() As String
		Get
			Return Me._NumProdNok
		End Get
		Set
			If (String.Equals(Me._NumProdNok, value) = false) Then
				Me.OnNumProdNokChanging(value)
				Me.SendPropertyChanging
				Me._NumProdNok = value
				Me.SendPropertyChanged("NumProdNok")
				Me.OnNumProdNokChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RendAlvo", DbType:="NVarChar(50)")>  _
	Public Property RendAlvo() As String
		Get
			Return Me._RendAlvo
		End Get
		Set
			If (String.Equals(Me._RendAlvo, value) = false) Then
				Me.OnRendAlvoChanging(value)
				Me.SendPropertyChanging
				Me._RendAlvo = value
				Me.SendPropertyChanged("RendAlvo")
				Me.OnRendAlvoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TempoAfericao", DbType:="NVarChar(50)")>  _
	Public Property TempoAfericao() As String
		Get
			Return Me._TempoAfericao
		End Get
		Set
			If (String.Equals(Me._TempoAfericao, value) = false) Then
				Me.OnTempoAfericaoChanging(value)
				Me.SendPropertyChanging
				Me._TempoAfericao = value
				Me.SendPropertyChanged("TempoAfericao")
				Me.OnTempoAfericaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FtCorrecao", DbType:="NVarChar(50)")>  _
	Public Property FtCorrecao() As String
		Get
			Return Me._FtCorrecao
		End Get
		Set
			If (String.Equals(Me._FtCorrecao, value) = false) Then
				Me.OnFtCorrecaoChanging(value)
				Me.SendPropertyChanging
				Me._FtCorrecao = value
				Me.SendPropertyChanged("FtCorrecao")
				Me.OnFtCorrecaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TamMax", DbType:="NVarChar(50)")>  _
	Public Property TamMax() As String
		Get
			Return Me._TamMax
		End Get
		Set
			If (String.Equals(Me._TamMax, value) = false) Then
				Me.OnTamMaxChanging(value)
				Me.SendPropertyChanging
				Me._TamMax = value
				Me.SendPropertyChanged("TamMax")
				Me.OnTamMaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DensEspec", DbType:="NVarChar(50)")>  _
	Public Property DensEspec() As String
		Get
			Return Me._DensEspec
		End Get
		Set
			If (String.Equals(Me._DensEspec, value) = false) Then
				Me.OnDensEspecChanging(value)
				Me.SendPropertyChanging
				Me._DensEspec = value
				Me.SendPropertyChanged("DensEspec")
				Me.OnDensEspecChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CorrDens", DbType:="NVarChar(50)")>  _
	Public Property CorrDens() As String
		Get
			Return Me._CorrDens
		End Get
		Set
			If (String.Equals(Me._CorrDens, value) = false) Then
				Me.OnCorrDensChanging(value)
				Me.SendPropertyChanging
				Me._CorrDens = value
				Me.SendPropertyChanged("CorrDens")
				Me.OnCorrDensChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SdGleit")>  _
Partial Public Class SdGleit
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdSdGleit As Integer
	
	Private _IdArt As System.Nullable(Of Integer)
	
	Private _PesoRef As String
	
	Private _LimAlto As String
	
	Private _T1LimPos As String
	
	Private _T1LimNeg As String
	
	Private _LimBaixo As String
	
	Private _VarLim As String
	
	Private _QtdPcs As String
	
	Private _RangeTol As String
	
	Private _DataHora As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdSdGleitChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSdGleitChanged()
    End Sub
    Partial Private Sub OnIdArtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnPesoRefChanging(value As String)
    End Sub
    Partial Private Sub OnPesoRefChanged()
    End Sub
    Partial Private Sub OnLimAltoChanging(value As String)
    End Sub
    Partial Private Sub OnLimAltoChanged()
    End Sub
    Partial Private Sub OnT1LimPosChanging(value As String)
    End Sub
    Partial Private Sub OnT1LimPosChanged()
    End Sub
    Partial Private Sub OnT1LimNegChanging(value As String)
    End Sub
    Partial Private Sub OnT1LimNegChanged()
    End Sub
    Partial Private Sub OnLimBaixoChanging(value As String)
    End Sub
    Partial Private Sub OnLimBaixoChanged()
    End Sub
    Partial Private Sub OnVarLimChanging(value As String)
    End Sub
    Partial Private Sub OnVarLimChanged()
    End Sub
    Partial Private Sub OnQtdPcsChanging(value As String)
    End Sub
    Partial Private Sub OnQtdPcsChanged()
    End Sub
    Partial Private Sub OnRangeTolChanging(value As String)
    End Sub
    Partial Private Sub OnRangeTolChanged()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSdGleit", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdSdGleit() As Integer
		Get
			Return Me._IdSdGleit
		End Get
		Set
			If ((Me._IdSdGleit = value)  _
						= false) Then
				Me.OnIdSdGleitChanging(value)
				Me.SendPropertyChanging
				Me._IdSdGleit = value
				Me.SendPropertyChanged("IdSdGleit")
				Me.OnIdSdGleitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int")>  _
	Public Property IdArt() As System.Nullable(Of Integer)
		Get
			Return Me._IdArt
		End Get
		Set
			If (Me._IdArt.Equals(value) = false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PesoRef", DbType:="NVarChar(50)")>  _
	Public Property PesoRef() As String
		Get
			Return Me._PesoRef
		End Get
		Set
			If (String.Equals(Me._PesoRef, value) = false) Then
				Me.OnPesoRefChanging(value)
				Me.SendPropertyChanging
				Me._PesoRef = value
				Me.SendPropertyChanged("PesoRef")
				Me.OnPesoRefChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LimAlto", DbType:="NVarChar(50)")>  _
	Public Property LimAlto() As String
		Get
			Return Me._LimAlto
		End Get
		Set
			If (String.Equals(Me._LimAlto, value) = false) Then
				Me.OnLimAltoChanging(value)
				Me.SendPropertyChanging
				Me._LimAlto = value
				Me.SendPropertyChanged("LimAlto")
				Me.OnLimAltoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_T1LimPos", DbType:="NVarChar(50)")>  _
	Public Property T1LimPos() As String
		Get
			Return Me._T1LimPos
		End Get
		Set
			If (String.Equals(Me._T1LimPos, value) = false) Then
				Me.OnT1LimPosChanging(value)
				Me.SendPropertyChanging
				Me._T1LimPos = value
				Me.SendPropertyChanged("T1LimPos")
				Me.OnT1LimPosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_T1LimNeg", DbType:="NVarChar(50)")>  _
	Public Property T1LimNeg() As String
		Get
			Return Me._T1LimNeg
		End Get
		Set
			If (String.Equals(Me._T1LimNeg, value) = false) Then
				Me.OnT1LimNegChanging(value)
				Me.SendPropertyChanging
				Me._T1LimNeg = value
				Me.SendPropertyChanged("T1LimNeg")
				Me.OnT1LimNegChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LimBaixo", DbType:="NVarChar(50)")>  _
	Public Property LimBaixo() As String
		Get
			Return Me._LimBaixo
		End Get
		Set
			If (String.Equals(Me._LimBaixo, value) = false) Then
				Me.OnLimBaixoChanging(value)
				Me.SendPropertyChanging
				Me._LimBaixo = value
				Me.SendPropertyChanged("LimBaixo")
				Me.OnLimBaixoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VarLim", DbType:="NVarChar(50)")>  _
	Public Property VarLim() As String
		Get
			Return Me._VarLim
		End Get
		Set
			If (String.Equals(Me._VarLim, value) = false) Then
				Me.OnVarLimChanging(value)
				Me.SendPropertyChanging
				Me._VarLim = value
				Me.SendPropertyChanged("VarLim")
				Me.OnVarLimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdPcs", DbType:="NVarChar(50)")>  _
	Public Property QtdPcs() As String
		Get
			Return Me._QtdPcs
		End Get
		Set
			If (String.Equals(Me._QtdPcs, value) = false) Then
				Me.OnQtdPcsChanging(value)
				Me.SendPropertyChanging
				Me._QtdPcs = value
				Me.SendPropertyChanged("QtdPcs")
				Me.OnQtdPcsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RangeTol", DbType:="NVarChar(50)")>  _
	Public Property RangeTol() As String
		Get
			Return Me._RangeTol
		End Get
		Set
			If (String.Equals(Me._RangeTol, value) = false) Then
				Me.OnRangeTolChanging(value)
				Me.SendPropertyChanging
				Me._RangeTol = value
				Me.SendPropertyChanged("RangeTol")
				Me.OnRangeTolChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SdGrund")>  _
Partial Public Class SdGrund
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdGrund As Integer
	
	Private _IdArt As System.Nullable(Of Integer)
	
	Private _NumVersion As String
	
	Private _NomeArt As String
	
	Private _CodEAN As String
	
	Private _UnidPeso As String
	
	Private _DataHora As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdGrundChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdGrundChanged()
    End Sub
    Partial Private Sub OnIdArtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnNumVersionChanging(value As String)
    End Sub
    Partial Private Sub OnNumVersionChanged()
    End Sub
    Partial Private Sub OnNomeArtChanging(value As String)
    End Sub
    Partial Private Sub OnNomeArtChanged()
    End Sub
    Partial Private Sub OnCodEANChanging(value As String)
    End Sub
    Partial Private Sub OnCodEANChanged()
    End Sub
    Partial Private Sub OnUnidPesoChanging(value As String)
    End Sub
    Partial Private Sub OnUnidPesoChanged()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdGrund", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdGrund() As Integer
		Get
			Return Me._IdGrund
		End Get
		Set
			If ((Me._IdGrund = value)  _
						= false) Then
				Me.OnIdGrundChanging(value)
				Me.SendPropertyChanging
				Me._IdGrund = value
				Me.SendPropertyChanged("IdGrund")
				Me.OnIdGrundChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int")>  _
	Public Property IdArt() As System.Nullable(Of Integer)
		Get
			Return Me._IdArt
		End Get
		Set
			If (Me._IdArt.Equals(value) = false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumVersion", DbType:="NVarChar(50)")>  _
	Public Property NumVersion() As String
		Get
			Return Me._NumVersion
		End Get
		Set
			If (String.Equals(Me._NumVersion, value) = false) Then
				Me.OnNumVersionChanging(value)
				Me.SendPropertyChanging
				Me._NumVersion = value
				Me.SendPropertyChanged("NumVersion")
				Me.OnNumVersionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeArt", DbType:="NVarChar(50)")>  _
	Public Property NomeArt() As String
		Get
			Return Me._NomeArt
		End Get
		Set
			If (String.Equals(Me._NomeArt, value) = false) Then
				Me.OnNomeArtChanging(value)
				Me.SendPropertyChanging
				Me._NomeArt = value
				Me.SendPropertyChanged("NomeArt")
				Me.OnNomeArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodEAN", DbType:="NVarChar(50)")>  _
	Public Property CodEAN() As String
		Get
			Return Me._CodEAN
		End Get
		Set
			If (String.Equals(Me._CodEAN, value) = false) Then
				Me.OnCodEANChanging(value)
				Me.SendPropertyChanging
				Me._CodEAN = value
				Me.SendPropertyChanged("CodEAN")
				Me.OnCodEANChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnidPeso", DbType:="NVarChar(50)")>  _
	Public Property UnidPeso() As String
		Get
			Return Me._UnidPeso
		End Get
		Set
			If (String.Equals(Me._UnidPeso, value) = false) Then
				Me.OnUnidPesoChanging(value)
				Me.SendPropertyChanging
				Me._UnidPeso = value
				Me.SendPropertyChanged("UnidPeso")
				Me.OnUnidPesoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SdStat")>  _
Partial Public Class SdStat
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdSdStat As Integer
	
	Private _IdArt As System.Nullable(Of Integer)
	
	Private _NumBatch As String
	
	Private _LimTo2 As String
	
	Private _LimTo1 As String
	
	Private _LimTu1 As String
	
	Private _LimTu2 As String
	
	Private _TolerSys As String
	
	Private _Tu1Perc As String
	
	Private _TipoIntervalo As String
	
	Private _Escopo As String
	
	Private _Estat As String
	
	Private _DataHora As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdSdStatChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSdStatChanged()
    End Sub
    Partial Private Sub OnIdArtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnNumBatchChanging(value As String)
    End Sub
    Partial Private Sub OnNumBatchChanged()
    End Sub
    Partial Private Sub OnLimTo2Changing(value As String)
    End Sub
    Partial Private Sub OnLimTo2Changed()
    End Sub
    Partial Private Sub OnLimTo1Changing(value As String)
    End Sub
    Partial Private Sub OnLimTo1Changed()
    End Sub
    Partial Private Sub OnLimTu1Changing(value As String)
    End Sub
    Partial Private Sub OnLimTu1Changed()
    End Sub
    Partial Private Sub OnLimTu2Changing(value As String)
    End Sub
    Partial Private Sub OnLimTu2Changed()
    End Sub
    Partial Private Sub OnTolerSysChanging(value As String)
    End Sub
    Partial Private Sub OnTolerSysChanged()
    End Sub
    Partial Private Sub OnTu1PercChanging(value As String)
    End Sub
    Partial Private Sub OnTu1PercChanged()
    End Sub
    Partial Private Sub OnTipoIntervaloChanging(value As String)
    End Sub
    Partial Private Sub OnTipoIntervaloChanged()
    End Sub
    Partial Private Sub OnEscopoChanging(value As String)
    End Sub
    Partial Private Sub OnEscopoChanged()
    End Sub
    Partial Private Sub OnEstatChanging(value As String)
    End Sub
    Partial Private Sub OnEstatChanged()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSdStat", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdSdStat() As Integer
		Get
			Return Me._IdSdStat
		End Get
		Set
			If ((Me._IdSdStat = value)  _
						= false) Then
				Me.OnIdSdStatChanging(value)
				Me.SendPropertyChanging
				Me._IdSdStat = value
				Me.SendPropertyChanged("IdSdStat")
				Me.OnIdSdStatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int")>  _
	Public Property IdArt() As System.Nullable(Of Integer)
		Get
			Return Me._IdArt
		End Get
		Set
			If (Me._IdArt.Equals(value) = false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumBatch", DbType:="NVarChar(50)")>  _
	Public Property NumBatch() As String
		Get
			Return Me._NumBatch
		End Get
		Set
			If (String.Equals(Me._NumBatch, value) = false) Then
				Me.OnNumBatchChanging(value)
				Me.SendPropertyChanging
				Me._NumBatch = value
				Me.SendPropertyChanged("NumBatch")
				Me.OnNumBatchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LimTo2", DbType:="NVarChar(50)")>  _
	Public Property LimTo2() As String
		Get
			Return Me._LimTo2
		End Get
		Set
			If (String.Equals(Me._LimTo2, value) = false) Then
				Me.OnLimTo2Changing(value)
				Me.SendPropertyChanging
				Me._LimTo2 = value
				Me.SendPropertyChanged("LimTo2")
				Me.OnLimTo2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LimTo1", DbType:="NVarChar(50)")>  _
	Public Property LimTo1() As String
		Get
			Return Me._LimTo1
		End Get
		Set
			If (String.Equals(Me._LimTo1, value) = false) Then
				Me.OnLimTo1Changing(value)
				Me.SendPropertyChanging
				Me._LimTo1 = value
				Me.SendPropertyChanged("LimTo1")
				Me.OnLimTo1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LimTu1", DbType:="NVarChar(50)")>  _
	Public Property LimTu1() As String
		Get
			Return Me._LimTu1
		End Get
		Set
			If (String.Equals(Me._LimTu1, value) = false) Then
				Me.OnLimTu1Changing(value)
				Me.SendPropertyChanging
				Me._LimTu1 = value
				Me.SendPropertyChanged("LimTu1")
				Me.OnLimTu1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LimTu2", DbType:="NVarChar(50)")>  _
	Public Property LimTu2() As String
		Get
			Return Me._LimTu2
		End Get
		Set
			If (String.Equals(Me._LimTu2, value) = false) Then
				Me.OnLimTu2Changing(value)
				Me.SendPropertyChanging
				Me._LimTu2 = value
				Me.SendPropertyChanged("LimTu2")
				Me.OnLimTu2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TolerSys", DbType:="NVarChar(50)")>  _
	Public Property TolerSys() As String
		Get
			Return Me._TolerSys
		End Get
		Set
			If (String.Equals(Me._TolerSys, value) = false) Then
				Me.OnTolerSysChanging(value)
				Me.SendPropertyChanging
				Me._TolerSys = value
				Me.SendPropertyChanged("TolerSys")
				Me.OnTolerSysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tu1Perc", DbType:="NVarChar(50)")>  _
	Public Property Tu1Perc() As String
		Get
			Return Me._Tu1Perc
		End Get
		Set
			If (String.Equals(Me._Tu1Perc, value) = false) Then
				Me.OnTu1PercChanging(value)
				Me.SendPropertyChanging
				Me._Tu1Perc = value
				Me.SendPropertyChanged("Tu1Perc")
				Me.OnTu1PercChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoIntervalo", DbType:="NVarChar(50)")>  _
	Public Property TipoIntervalo() As String
		Get
			Return Me._TipoIntervalo
		End Get
		Set
			If (String.Equals(Me._TipoIntervalo, value) = false) Then
				Me.OnTipoIntervaloChanging(value)
				Me.SendPropertyChanging
				Me._TipoIntervalo = value
				Me.SendPropertyChanged("TipoIntervalo")
				Me.OnTipoIntervaloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Escopo", DbType:="NVarChar(50)")>  _
	Public Property Escopo() As String
		Get
			Return Me._Escopo
		End Get
		Set
			If (String.Equals(Me._Escopo, value) = false) Then
				Me.OnEscopoChanging(value)
				Me.SendPropertyChanging
				Me._Escopo = value
				Me.SendPropertyChanged("Escopo")
				Me.OnEscopoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estat", DbType:="NVarChar(50)")>  _
	Public Property Estat() As String
		Get
			Return Me._Estat
		End Get
		Set
			If (String.Equals(Me._Estat, value) = false) Then
				Me.OnEstatChanging(value)
				Me.SendPropertyChanging
				Me._Estat = value
				Me.SendPropertyChanged("Estat")
				Me.OnEstatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SdStat2")>  _
Partial Public Class SdStat2
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdSdStat2 As Integer
	
	Private _IdArt As System.Nullable(Of Integer)
	
	Private _Tu1PercMax As String
	
	Private _QtdProdNokTu1 As String
	
	Private _QtdProdNokTu2 As String
	
	Private _VlMedioProNok As String
	
	Private _VlMedioRef As String
	
	Private _PrintAuto As String
	
	Private _PrintHora As String
	
	Private _PrintBatchHora As String
	
	Private _DataHora As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdSdStat2Changing(value As Integer)
    End Sub
    Partial Private Sub OnIdSdStat2Changed()
    End Sub
    Partial Private Sub OnIdArtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArtChanged()
    End Sub
    Partial Private Sub OnTu1PercMaxChanging(value As String)
    End Sub
    Partial Private Sub OnTu1PercMaxChanged()
    End Sub
    Partial Private Sub OnQtdProdNokTu1Changing(value As String)
    End Sub
    Partial Private Sub OnQtdProdNokTu1Changed()
    End Sub
    Partial Private Sub OnQtdProdNokTu2Changing(value As String)
    End Sub
    Partial Private Sub OnQtdProdNokTu2Changed()
    End Sub
    Partial Private Sub OnVlMedioProNokChanging(value As String)
    End Sub
    Partial Private Sub OnVlMedioProNokChanged()
    End Sub
    Partial Private Sub OnVlMedioRefChanging(value As String)
    End Sub
    Partial Private Sub OnVlMedioRefChanged()
    End Sub
    Partial Private Sub OnPrintAutoChanging(value As String)
    End Sub
    Partial Private Sub OnPrintAutoChanged()
    End Sub
    Partial Private Sub OnPrintHoraChanging(value As String)
    End Sub
    Partial Private Sub OnPrintHoraChanged()
    End Sub
    Partial Private Sub OnPrintBatchHoraChanging(value As String)
    End Sub
    Partial Private Sub OnPrintBatchHoraChanged()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSdStat2", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IdSdStat2() As Integer
		Get
			Return Me._IdSdStat2
		End Get
		Set
			If ((Me._IdSdStat2 = value)  _
						= false) Then
				Me.OnIdSdStat2Changing(value)
				Me.SendPropertyChanging
				Me._IdSdStat2 = value
				Me.SendPropertyChanged("IdSdStat2")
				Me.OnIdSdStat2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArt", DbType:="Int")>  _
	Public Property IdArt() As System.Nullable(Of Integer)
		Get
			Return Me._IdArt
		End Get
		Set
			If (Me._IdArt.Equals(value) = false) Then
				Me.OnIdArtChanging(value)
				Me.SendPropertyChanging
				Me._IdArt = value
				Me.SendPropertyChanged("IdArt")
				Me.OnIdArtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tu1PercMax", DbType:="NVarChar(50)")>  _
	Public Property Tu1PercMax() As String
		Get
			Return Me._Tu1PercMax
		End Get
		Set
			If (String.Equals(Me._Tu1PercMax, value) = false) Then
				Me.OnTu1PercMaxChanging(value)
				Me.SendPropertyChanging
				Me._Tu1PercMax = value
				Me.SendPropertyChanged("Tu1PercMax")
				Me.OnTu1PercMaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdNokTu1", DbType:="NVarChar(50)")>  _
	Public Property QtdProdNokTu1() As String
		Get
			Return Me._QtdProdNokTu1
		End Get
		Set
			If (String.Equals(Me._QtdProdNokTu1, value) = false) Then
				Me.OnQtdProdNokTu1Changing(value)
				Me.SendPropertyChanging
				Me._QtdProdNokTu1 = value
				Me.SendPropertyChanged("QtdProdNokTu1")
				Me.OnQtdProdNokTu1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QtdProdNokTu2", DbType:="NVarChar(50)")>  _
	Public Property QtdProdNokTu2() As String
		Get
			Return Me._QtdProdNokTu2
		End Get
		Set
			If (String.Equals(Me._QtdProdNokTu2, value) = false) Then
				Me.OnQtdProdNokTu2Changing(value)
				Me.SendPropertyChanging
				Me._QtdProdNokTu2 = value
				Me.SendPropertyChanged("QtdProdNokTu2")
				Me.OnQtdProdNokTu2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VlMedioProNok", DbType:="NVarChar(50)")>  _
	Public Property VlMedioProNok() As String
		Get
			Return Me._VlMedioProNok
		End Get
		Set
			If (String.Equals(Me._VlMedioProNok, value) = false) Then
				Me.OnVlMedioProNokChanging(value)
				Me.SendPropertyChanging
				Me._VlMedioProNok = value
				Me.SendPropertyChanged("VlMedioProNok")
				Me.OnVlMedioProNokChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VlMedioRef", DbType:="NVarChar(50)")>  _
	Public Property VlMedioRef() As String
		Get
			Return Me._VlMedioRef
		End Get
		Set
			If (String.Equals(Me._VlMedioRef, value) = false) Then
				Me.OnVlMedioRefChanging(value)
				Me.SendPropertyChanging
				Me._VlMedioRef = value
				Me.SendPropertyChanged("VlMedioRef")
				Me.OnVlMedioRefChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrintAuto", DbType:="NVarChar(50)")>  _
	Public Property PrintAuto() As String
		Get
			Return Me._PrintAuto
		End Get
		Set
			If (String.Equals(Me._PrintAuto, value) = false) Then
				Me.OnPrintAutoChanging(value)
				Me.SendPropertyChanging
				Me._PrintAuto = value
				Me.SendPropertyChanged("PrintAuto")
				Me.OnPrintAutoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrintHora", DbType:="NVarChar(50)")>  _
	Public Property PrintHora() As String
		Get
			Return Me._PrintHora
		End Get
		Set
			If (String.Equals(Me._PrintHora, value) = false) Then
				Me.OnPrintHoraChanging(value)
				Me.SendPropertyChanging
				Me._PrintHora = value
				Me.SendPropertyChanged("PrintHora")
				Me.OnPrintHoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrintBatchHora", DbType:="NVarChar(50)")>  _
	Public Property PrintBatchHora() As String
		Get
			Return Me._PrintBatchHora
		End Get
		Set
			If (String.Equals(Me._PrintBatchHora, value) = false) Then
				Me.OnPrintBatchHoraChanging(value)
				Me.SendPropertyChanging
				Me._PrintBatchHora = value
				Me.SendPropertyChanged("PrintBatchHora")
				Me.OnPrintBatchHoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="DateTime")>  _
	Public Property DataHora() As System.Nullable(Of Date)
		Get
			Return Me._DataHora
		End Get
		Set
			If (Me._DataHora.Equals(value) = false) Then
				Me.OnDataHoraChanging(value)
				Me.SendPropertyChanging
				Me._DataHora = value
				Me.SendPropertyChanged("DataHora")
				Me.OnDataHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
