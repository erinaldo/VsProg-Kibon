'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace nsReceitas
	
	<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Receitas")>  _
	Partial Public Class dcReceitas
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertAreas(instance As Areas)
    End Sub
    Partial Private Sub UpdateAreas(instance As Areas)
    End Sub
    Partial Private Sub DeleteAreas(instance As Areas)
    End Sub
    Partial Private Sub InsertUsers(instance As Users)
    End Sub
    Partial Private Sub UpdateUsers(instance As Users)
    End Sub
    Partial Private Sub DeleteUsers(instance As Users)
    End Sub
    Partial Private Sub InsertBlocosItens(instance As BlocosItens)
    End Sub
    Partial Private Sub UpdateBlocosItens(instance As BlocosItens)
    End Sub
    Partial Private Sub DeleteBlocosItens(instance As BlocosItens)
    End Sub
    Partial Private Sub InsertCadAlergenicos(instance As CadAlergenicos)
    End Sub
    Partial Private Sub UpdateCadAlergenicos(instance As CadAlergenicos)
    End Sub
    Partial Private Sub DeleteCadAlergenicos(instance As CadAlergenicos)
    End Sub
    Partial Private Sub InsertConfigGeral(instance As ConfigGeral)
    End Sub
    Partial Private Sub UpdateConfigGeral(instance As ConfigGeral)
    End Sub
    Partial Private Sub DeleteConfigGeral(instance As ConfigGeral)
    End Sub
    Partial Private Sub InsertRecBlocos(instance As RecBlocos)
    End Sub
    Partial Private Sub UpdateRecBlocos(instance As RecBlocos)
    End Sub
    Partial Private Sub DeleteRecBlocos(instance As RecBlocos)
    End Sub
    Partial Private Sub InsertRecTeste(instance As RecTeste)
    End Sub
    Partial Private Sub UpdateRecTeste(instance As RecTeste)
    End Sub
    Partial Private Sub DeleteRecTeste(instance As RecTeste)
    End Sub
    Partial Private Sub InsertBlocos(instance As Blocos)
    End Sub
    Partial Private Sub UpdateBlocos(instance As Blocos)
    End Sub
    Partial Private Sub DeleteBlocos(instance As Blocos)
    End Sub
    Partial Private Sub InsertRecIngred(instance As RecIngred)
    End Sub
    Partial Private Sub UpdateRecIngred(instance As RecIngred)
    End Sub
    Partial Private Sub DeleteRecIngred(instance As RecIngred)
    End Sub
    Partial Private Sub InsertRecIngredMat(instance As RecIngredMat)
    End Sub
    Partial Private Sub UpdateRecIngredMat(instance As RecIngredMat)
    End Sub
    Partial Private Sub DeleteRecIngredMat(instance As RecIngredMat)
    End Sub
    Partial Private Sub InsertAlergenico(instance As Alergenico)
    End Sub
    Partial Private Sub UpdateAlergenico(instance As Alergenico)
    End Sub
    Partial Private Sub DeleteAlergenico(instance As Alergenico)
    End Sub
    Partial Private Sub InsertAlergenicosRec(instance As AlergenicosRec)
    End Sub
    Partial Private Sub UpdateAlergenicosRec(instance As AlergenicosRec)
    End Sub
    Partial Private Sub DeleteAlergenicosRec(instance As AlergenicosRec)
    End Sub
    Partial Private Sub InsertDestTqs(instance As DestTqs)
    End Sub
    Partial Private Sub UpdateDestTqs(instance As DestTqs)
    End Sub
    Partial Private Sub DeleteDestTqs(instance As DestTqs)
    End Sub
    Partial Private Sub InsertRec(instance As Rec)
    End Sub
    Partial Private Sub UpdateRec(instance As Rec)
    End Sub
    Partial Private Sub DeleteRec(instance As Rec)
    End Sub
    Partial Private Sub Inserttb_MTA_Mistura(instance As tb_MTA_Mistura)
    End Sub
    Partial Private Sub Updatetb_MTA_Mistura(instance As tb_MTA_Mistura)
    End Sub
    Partial Private Sub Deletetb_MTA_Mistura(instance As tb_MTA_Mistura)
    End Sub
    Partial Private Sub Inserttb_PCT_Pacotes(instance As tb_PCT_Pacotes)
    End Sub
    Partial Private Sub Updatetb_PCT_Pacotes(instance As tb_PCT_Pacotes)
    End Sub
    Partial Private Sub Deletetb_PCT_Pacotes(instance As tb_PCT_Pacotes)
    End Sub
    Partial Private Sub Inserttb_PPC_PesagemPacote(instance As tb_PPC_PesagemPacote)
    End Sub
    Partial Private Sub Updatetb_PPC_PesagemPacote(instance As tb_PPC_PesagemPacote)
    End Sub
    Partial Private Sub Deletetb_PPC_PesagemPacote(instance As tb_PPC_PesagemPacote)
    End Sub
    Partial Private Sub Inserttb_PBD_PesagemBalde(instance As tb_PBD_PesagemBalde)
    End Sub
    Partial Private Sub Updatetb_PBD_PesagemBalde(instance As tb_PBD_PesagemBalde)
    End Sub
    Partial Private Sub Deletetb_PBD_PesagemBalde(instance As tb_PBD_PesagemBalde)
    End Sub
    Partial Private Sub Inserttb_BLD_Baldes(instance As tb_BLD_Baldes)
    End Sub
    Partial Private Sub Updatetb_BLD_Baldes(instance As tb_BLD_Baldes)
    End Sub
    Partial Private Sub Deletetb_BLD_Baldes(instance As tb_BLD_Baldes)
    End Sub
    Partial Private Sub Inserttb_PIN_PequenoIngrediente(instance As tb_PIN_PequenoIngrediente)
    End Sub
    Partial Private Sub Updatetb_PIN_PequenoIngrediente(instance As tb_PIN_PequenoIngrediente)
    End Sub
    Partial Private Sub Deletetb_PIN_PequenoIngrediente(instance As tb_PIN_PequenoIngrediente)
    End Sub
    Partial Private Sub Inserttb_PPI_PesagemPequenoIngr(instance As tb_PPI_PesagemPequenoIngr)
    End Sub
    Partial Private Sub Updatetb_PPI_PesagemPequenoIngr(instance As tb_PPI_PesagemPequenoIngr)
    End Sub
    Partial Private Sub Deletetb_PPI_PesagemPequenoIngr(instance As tb_PPI_PesagemPequenoIngr)
    End Sub
    Partial Private Sub Inserttb_TPM_TipoMistura(instance As tb_TPM_TipoMistura)
    End Sub
    Partial Private Sub Updatetb_TPM_TipoMistura(instance As tb_TPM_TipoMistura)
    End Sub
    Partial Private Sub Deletetb_TPM_TipoMistura(instance As tb_TPM_TipoMistura)
    End Sub
    Partial Private Sub Inserttb_CBT_CadastroBatch(instance As tb_CBT_CadastroBatch)
    End Sub
    Partial Private Sub Updatetb_CBT_CadastroBatch(instance As tb_CBT_CadastroBatch)
    End Sub
    Partial Private Sub Deletetb_CBT_CadastroBatch(instance As tb_CBT_CadastroBatch)
    End Sub
    Partial Private Sub Inserttb_CPI_CadastroPequenoIngrediente(instance As tb_CPI_CadastroPequenoIngrediente)
    End Sub
    Partial Private Sub Updatetb_CPI_CadastroPequenoIngrediente(instance As tb_CPI_CadastroPequenoIngrediente)
    End Sub
    Partial Private Sub Deletetb_CPI_CadastroPequenoIngrediente(instance As tb_CPI_CadastroPequenoIngrediente)
    End Sub
    Partial Private Sub Inserttb_CBM_CadastroBatchMaturacao(instance As tb_CBM_CadastroBatchMaturacao)
    End Sub
    Partial Private Sub Updatetb_CBM_CadastroBatchMaturacao(instance As tb_CBM_CadastroBatchMaturacao)
    End Sub
    Partial Private Sub Deletetb_CBM_CadastroBatchMaturacao(instance As tb_CBM_CadastroBatchMaturacao)
    End Sub
    Partial Private Sub InsertIngred(instance As Ingred)
    End Sub
    Partial Private Sub UpdateIngred(instance As Ingred)
    End Sub
    Partial Private Sub DeleteIngred(instance As Ingred)
    End Sub
    Partial Private Sub Inserttb_CTL_ControleBatch(instance As tb_CTL_ControleBatch)
    End Sub
    Partial Private Sub Updatetb_CTL_ControleBatch(instance As tb_CTL_ControleBatch)
    End Sub
    Partial Private Sub Deletetb_CTL_ControleBatch(instance As tb_CTL_ControleBatch)
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New(Global.Geral.My.MySettings.Default.csReceitas, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property Areas() As System.Data.Linq.Table(Of Areas)
			Get
				Return Me.GetTable(Of Areas)
			End Get
		End Property
		
		Public ReadOnly Property Users() As System.Data.Linq.Table(Of Users)
			Get
				Return Me.GetTable(Of Users)
			End Get
		End Property
		
		Public ReadOnly Property BlocosItens() As System.Data.Linq.Table(Of BlocosItens)
			Get
				Return Me.GetTable(Of BlocosItens)
			End Get
		End Property
		
		Public ReadOnly Property CadAlergenicos() As System.Data.Linq.Table(Of CadAlergenicos)
			Get
				Return Me.GetTable(Of CadAlergenicos)
			End Get
		End Property
		
		Public ReadOnly Property ConfigGeral() As System.Data.Linq.Table(Of ConfigGeral)
			Get
				Return Me.GetTable(Of ConfigGeral)
			End Get
		End Property
		
		Public ReadOnly Property RecBlocos() As System.Data.Linq.Table(Of RecBlocos)
			Get
				Return Me.GetTable(Of RecBlocos)
			End Get
		End Property
		
		Public ReadOnly Property RecTeste() As System.Data.Linq.Table(Of RecTeste)
			Get
				Return Me.GetTable(Of RecTeste)
			End Get
		End Property
		
		Public ReadOnly Property Blocos() As System.Data.Linq.Table(Of Blocos)
			Get
				Return Me.GetTable(Of Blocos)
			End Get
		End Property
		
		Public ReadOnly Property RecIngred() As System.Data.Linq.Table(Of RecIngred)
			Get
				Return Me.GetTable(Of RecIngred)
			End Get
		End Property
		
		Public ReadOnly Property RecIngredMat() As System.Data.Linq.Table(Of RecIngredMat)
			Get
				Return Me.GetTable(Of RecIngredMat)
			End Get
		End Property
		
		Public ReadOnly Property Alergenico() As System.Data.Linq.Table(Of Alergenico)
			Get
				Return Me.GetTable(Of Alergenico)
			End Get
		End Property
		
		Public ReadOnly Property AlergenicosRec() As System.Data.Linq.Table(Of AlergenicosRec)
			Get
				Return Me.GetTable(Of AlergenicosRec)
			End Get
		End Property
		
		Public ReadOnly Property DestTqs() As System.Data.Linq.Table(Of DestTqs)
			Get
				Return Me.GetTable(Of DestTqs)
			End Get
		End Property
		
		Public ReadOnly Property Rec() As System.Data.Linq.Table(Of Rec)
			Get
				Return Me.GetTable(Of Rec)
			End Get
		End Property
		
		Public ReadOnly Property tb_MTA_Mistura() As System.Data.Linq.Table(Of tb_MTA_Mistura)
			Get
				Return Me.GetTable(Of tb_MTA_Mistura)
			End Get
		End Property
		
		Public ReadOnly Property tb_PCT_Pacotes() As System.Data.Linq.Table(Of tb_PCT_Pacotes)
			Get
				Return Me.GetTable(Of tb_PCT_Pacotes)
			End Get
		End Property
		
		Public ReadOnly Property tb_PPC_PesagemPacote() As System.Data.Linq.Table(Of tb_PPC_PesagemPacote)
			Get
				Return Me.GetTable(Of tb_PPC_PesagemPacote)
			End Get
		End Property
		
		Public ReadOnly Property tb_PBD_PesagemBalde() As System.Data.Linq.Table(Of tb_PBD_PesagemBalde)
			Get
				Return Me.GetTable(Of tb_PBD_PesagemBalde)
			End Get
		End Property
		
		Public ReadOnly Property tb_BLD_Baldes() As System.Data.Linq.Table(Of tb_BLD_Baldes)
			Get
				Return Me.GetTable(Of tb_BLD_Baldes)
			End Get
		End Property
		
		Public ReadOnly Property tb_PIN_PequenoIngrediente() As System.Data.Linq.Table(Of tb_PIN_PequenoIngrediente)
			Get
				Return Me.GetTable(Of tb_PIN_PequenoIngrediente)
			End Get
		End Property
		
		Public ReadOnly Property tb_PPI_PesagemPequenoIngr() As System.Data.Linq.Table(Of tb_PPI_PesagemPequenoIngr)
			Get
				Return Me.GetTable(Of tb_PPI_PesagemPequenoIngr)
			End Get
		End Property
		
		Public ReadOnly Property tb_TPM_TipoMistura() As System.Data.Linq.Table(Of tb_TPM_TipoMistura)
			Get
				Return Me.GetTable(Of tb_TPM_TipoMistura)
			End Get
		End Property
		
		Public ReadOnly Property tb_CBT_CadastroBatch() As System.Data.Linq.Table(Of tb_CBT_CadastroBatch)
			Get
				Return Me.GetTable(Of tb_CBT_CadastroBatch)
			End Get
		End Property
		
		Public ReadOnly Property tb_CPI_CadastroPequenoIngrediente() As System.Data.Linq.Table(Of tb_CPI_CadastroPequenoIngrediente)
			Get
				Return Me.GetTable(Of tb_CPI_CadastroPequenoIngrediente)
			End Get
		End Property
		
		Public ReadOnly Property tb_CBM_CadastroBatchMaturacao() As System.Data.Linq.Table(Of tb_CBM_CadastroBatchMaturacao)
			Get
				Return Me.GetTable(Of tb_CBM_CadastroBatchMaturacao)
			End Get
		End Property
		
		Public ReadOnly Property Ingred() As System.Data.Linq.Table(Of Ingred)
			Get
				Return Me.GetTable(Of Ingred)
			End Get
		End Property
		
		Public ReadOnly Property tb_CTL_ControleBatch() As System.Data.Linq.Table(Of tb_CTL_ControleBatch)
			Get
				Return Me.GetTable(Of tb_CTL_ControleBatch)
			End Get
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Areas")>  _
	Partial Public Class Areas
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _Descr As String
		
		Private _UsaPlanejBrix As System.Nullable(Of Integer)
		
		Private _UsaIngredMan As System.Nullable(Of Integer)
		
		Private _UsaPesoRef As System.Nullable(Of Integer)
		
		Private _RsLinxTopic As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnDescrChanging(value As String)
    End Sub
    Partial Private Sub OnDescrChanged()
    End Sub
    Partial Private Sub OnUsaPlanejBrixChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUsaPlanejBrixChanged()
    End Sub
    Partial Private Sub OnUsaIngredManChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUsaIngredManChanged()
    End Sub
    Partial Private Sub OnUsaPesoRefChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUsaPesoRefChanged()
    End Sub
    Partial Private Sub OnRsLinxTopicChanging(value As String)
    End Sub
    Partial Private Sub OnRsLinxTopicChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descr", DbType:="NVarChar(80)")>  _
		Public Property Descr() As String
			Get
				Return Me._Descr
			End Get
			Set
				If (String.Equals(Me._Descr, value) = false) Then
					Me.OnDescrChanging(value)
					Me.SendPropertyChanging
					Me._Descr = value
					Me.SendPropertyChanged("Descr")
					Me.OnDescrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsaPlanejBrix", DbType:="Int")>  _
		Public Property UsaPlanejBrix() As System.Nullable(Of Integer)
			Get
				Return Me._UsaPlanejBrix
			End Get
			Set
				If (Me._UsaPlanejBrix.Equals(value) = false) Then
					Me.OnUsaPlanejBrixChanging(value)
					Me.SendPropertyChanging
					Me._UsaPlanejBrix = value
					Me.SendPropertyChanged("UsaPlanejBrix")
					Me.OnUsaPlanejBrixChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsaIngredMan", DbType:="Int")>  _
		Public Property UsaIngredMan() As System.Nullable(Of Integer)
			Get
				Return Me._UsaIngredMan
			End Get
			Set
				If (Me._UsaIngredMan.Equals(value) = false) Then
					Me.OnUsaIngredManChanging(value)
					Me.SendPropertyChanging
					Me._UsaIngredMan = value
					Me.SendPropertyChanged("UsaIngredMan")
					Me.OnUsaIngredManChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsaPesoRef", DbType:="Int")>  _
		Public Property UsaPesoRef() As System.Nullable(Of Integer)
			Get
				Return Me._UsaPesoRef
			End Get
			Set
				If (Me._UsaPesoRef.Equals(value) = false) Then
					Me.OnUsaPesoRefChanging(value)
					Me.SendPropertyChanging
					Me._UsaPesoRef = value
					Me.SendPropertyChanged("UsaPesoRef")
					Me.OnUsaPesoRefChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RsLinxTopic", DbType:="NVarChar(20)")>  _
		Public Property RsLinxTopic() As String
			Get
				Return Me._RsLinxTopic
			End Get
			Set
				If (String.Equals(Me._RsLinxTopic, value) = false) Then
					Me.OnRsLinxTopicChanging(value)
					Me.SendPropertyChanging
					Me._RsLinxTopic = value
					Me.SendPropertyChanged("RsLinxTopic")
					Me.OnRsLinxTopicChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Users")>  _
	Partial Public Class Users
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Login As String
		
		Private _Pwd As String
		
		Private _Area As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLoginChanging(value As String)
    End Sub
    Partial Private Sub OnLoginChanged()
    End Sub
    Partial Private Sub OnPwdChanging(value As String)
    End Sub
    Partial Private Sub OnPwdChanged()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Login", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Login() As String
			Get
				Return Me._Login
			End Get
			Set
				If (String.Equals(Me._Login, value) = false) Then
					Me.OnLoginChanging(value)
					Me.SendPropertyChanging
					Me._Login = value
					Me.SendPropertyChanged("Login")
					Me.OnLoginChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pwd", DbType:="NVarChar(50)")>  _
		Public Property Pwd() As String
			Get
				Return Me._Pwd
			End Get
			Set
				If (String.Equals(Me._Pwd, value) = false) Then
					Me.OnPwdChanging(value)
					Me.SendPropertyChanging
					Me._Pwd = value
					Me.SendPropertyChanged("Pwd")
					Me.OnPwdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(50)")>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BlocosItens")>  _
	Partial Public Class BlocosItens
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _BlkNum As Integer
		
		Private _ItemSeq As Integer
		
		Private _ItemDescr As String
		
		Private _UEng As String
		
		Private _ValorDefault As System.Nullable(Of Double)
		
		Private _Multiplic As System.Nullable(Of Double)
		
		Private _FlagPeso As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnBlkNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnBlkNumChanged()
    End Sub
    Partial Private Sub OnItemSeqChanging(value As Integer)
    End Sub
    Partial Private Sub OnItemSeqChanged()
    End Sub
    Partial Private Sub OnItemDescrChanging(value As String)
    End Sub
    Partial Private Sub OnItemDescrChanged()
    End Sub
    Partial Private Sub OnUEngChanging(value As String)
    End Sub
    Partial Private Sub OnUEngChanged()
    End Sub
    Partial Private Sub OnValorDefaultChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorDefaultChanged()
    End Sub
    Partial Private Sub OnMultiplicChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMultiplicChanged()
    End Sub
    Partial Private Sub OnFlagPesoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFlagPesoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BlkNum", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property BlkNum() As Integer
			Get
				Return Me._BlkNum
			End Get
			Set
				If ((Me._BlkNum = value)  _
							= false) Then
					Me.OnBlkNumChanging(value)
					Me.SendPropertyChanging
					Me._BlkNum = value
					Me.SendPropertyChanged("BlkNum")
					Me.OnBlkNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemSeq", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property ItemSeq() As Integer
			Get
				Return Me._ItemSeq
			End Get
			Set
				If ((Me._ItemSeq = value)  _
							= false) Then
					Me.OnItemSeqChanging(value)
					Me.SendPropertyChanging
					Me._ItemSeq = value
					Me.SendPropertyChanged("ItemSeq")
					Me.OnItemSeqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemDescr", DbType:="NVarChar(30)")>  _
		Public Property ItemDescr() As String
			Get
				Return Me._ItemDescr
			End Get
			Set
				If (String.Equals(Me._ItemDescr, value) = false) Then
					Me.OnItemDescrChanging(value)
					Me.SendPropertyChanging
					Me._ItemDescr = value
					Me.SendPropertyChanged("ItemDescr")
					Me.OnItemDescrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UEng", DbType:="NVarChar(10)")>  _
		Public Property UEng() As String
			Get
				Return Me._UEng
			End Get
			Set
				If (String.Equals(Me._UEng, value) = false) Then
					Me.OnUEngChanging(value)
					Me.SendPropertyChanging
					Me._UEng = value
					Me.SendPropertyChanged("UEng")
					Me.OnUEngChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValorDefault", DbType:="Float")>  _
		Public Property ValorDefault() As System.Nullable(Of Double)
			Get
				Return Me._ValorDefault
			End Get
			Set
				If (Me._ValorDefault.Equals(value) = false) Then
					Me.OnValorDefaultChanging(value)
					Me.SendPropertyChanging
					Me._ValorDefault = value
					Me.SendPropertyChanged("ValorDefault")
					Me.OnValorDefaultChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Multiplic", DbType:="Float")>  _
		Public Property Multiplic() As System.Nullable(Of Double)
			Get
				Return Me._Multiplic
			End Get
			Set
				If (Me._Multiplic.Equals(value) = false) Then
					Me.OnMultiplicChanging(value)
					Me.SendPropertyChanging
					Me._Multiplic = value
					Me.SendPropertyChanged("Multiplic")
					Me.OnMultiplicChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FlagPeso", DbType:="Int")>  _
		Public Property FlagPeso() As System.Nullable(Of Integer)
			Get
				Return Me._FlagPeso
			End Get
			Set
				If (Me._FlagPeso.Equals(value) = false) Then
					Me.OnFlagPesoChanging(value)
					Me.SendPropertyChanging
					Me._FlagPeso = value
					Me.SendPropertyChanged("FlagPeso")
					Me.OnFlagPesoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CadAlergenicos")>  _
	Partial Public Class CadAlergenicos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AlergId As Integer
		
		Private _Codigo As String
		
		Private _Hab175 As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAlergIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnAlergIdChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnHab175Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHab175Changed()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlergId", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property AlergId() As Integer
			Get
				Return Me._AlergId
			End Get
			Set
				If ((Me._AlergId = value)  _
							= false) Then
					Me.OnAlergIdChanging(value)
					Me.SendPropertyChanging
					Me._AlergId = value
					Me.SendPropertyChanged("AlergId")
					Me.OnAlergIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="NVarChar(50)")>  _
		Public Property Codigo() As String
			Get
				Return Me._Codigo
			End Get
			Set
				If (String.Equals(Me._Codigo, value) = false) Then
					Me.OnCodigoChanging(value)
					Me.SendPropertyChanging
					Me._Codigo = value
					Me.SendPropertyChanged("Codigo")
					Me.OnCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hab175", DbType:="Int")>  _
		Public Property Hab175() As System.Nullable(Of Integer)
			Get
				Return Me._Hab175
			End Get
			Set
				If (Me._Hab175.Equals(value) = false) Then
					Me.OnHab175Changing(value)
					Me.SendPropertyChanging
					Me._Hab175 = value
					Me.SendPropertyChanged("Hab175")
					Me.OnHab175Changed
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ConfigGeral")>  _
	Partial Public Class ConfigGeral
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Item As String
		
		Private _Valor As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnItemChanging(value As String)
    End Sub
    Partial Private Sub OnItemChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As String)
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Item", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Item() As String
			Get
				Return Me._Item
			End Get
			Set
				If (String.Equals(Me._Item, value) = false) Then
					Me.OnItemChanging(value)
					Me.SendPropertyChanging
					Me._Item = value
					Me.SendPropertyChanged("Item")
					Me.OnItemChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Valor", DbType:="NVarChar(50)")>  _
		Public Property Valor() As String
			Get
				Return Me._Valor
			End Get
			Set
				If (String.Equals(Me._Valor, value) = false) Then
					Me.OnValorChanging(value)
					Me.SendPropertyChanging
					Me._Valor = value
					Me.SendPropertyChanged("Valor")
					Me.OnValorChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RecBlocos")>  _
	Partial Public Class RecBlocos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _RecNum As Integer
		
		Private _ItemSeq As Integer
		
		Private _BlkNum As System.Nullable(Of Integer)
		
		Private _Param01 As System.Nullable(Of Double)
		
		Private _Param02 As System.Nullable(Of Double)
		
		Private _Param03 As System.Nullable(Of Double)
		
		Private _Param04 As System.Nullable(Of Double)
		
		Private _Param05 As System.Nullable(Of Double)
		
		Private _Param06 As System.Nullable(Of Double)
		
		Private _Param07 As System.Nullable(Of Double)
		
		Private _Param08 As System.Nullable(Of Double)
		
		Private _Param09 As System.Nullable(Of Double)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnItemSeqChanging(value As Integer)
    End Sub
    Partial Private Sub OnItemSeqChanged()
    End Sub
    Partial Private Sub OnBlkNumChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBlkNumChanged()
    End Sub
    Partial Private Sub OnParam01Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam01Changed()
    End Sub
    Partial Private Sub OnParam02Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam02Changed()
    End Sub
    Partial Private Sub OnParam03Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam03Changed()
    End Sub
    Partial Private Sub OnParam04Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam04Changed()
    End Sub
    Partial Private Sub OnParam05Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam05Changed()
    End Sub
    Partial Private Sub OnParam06Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam06Changed()
    End Sub
    Partial Private Sub OnParam07Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam07Changed()
    End Sub
    Partial Private Sub OnParam08Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam08Changed()
    End Sub
    Partial Private Sub OnParam09Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam09Changed()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property RecNum() As Integer
			Get
				Return Me._RecNum
			End Get
			Set
				If ((Me._RecNum = value)  _
							= false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemSeq", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property ItemSeq() As Integer
			Get
				Return Me._ItemSeq
			End Get
			Set
				If ((Me._ItemSeq = value)  _
							= false) Then
					Me.OnItemSeqChanging(value)
					Me.SendPropertyChanging
					Me._ItemSeq = value
					Me.SendPropertyChanged("ItemSeq")
					Me.OnItemSeqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BlkNum", DbType:="Int")>  _
		Public Property BlkNum() As System.Nullable(Of Integer)
			Get
				Return Me._BlkNum
			End Get
			Set
				If (Me._BlkNum.Equals(value) = false) Then
					Me.OnBlkNumChanging(value)
					Me.SendPropertyChanging
					Me._BlkNum = value
					Me.SendPropertyChanged("BlkNum")
					Me.OnBlkNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param01", DbType:="Float")>  _
		Public Property Param01() As System.Nullable(Of Double)
			Get
				Return Me._Param01
			End Get
			Set
				If (Me._Param01.Equals(value) = false) Then
					Me.OnParam01Changing(value)
					Me.SendPropertyChanging
					Me._Param01 = value
					Me.SendPropertyChanged("Param01")
					Me.OnParam01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param02", DbType:="Float")>  _
		Public Property Param02() As System.Nullable(Of Double)
			Get
				Return Me._Param02
			End Get
			Set
				If (Me._Param02.Equals(value) = false) Then
					Me.OnParam02Changing(value)
					Me.SendPropertyChanging
					Me._Param02 = value
					Me.SendPropertyChanged("Param02")
					Me.OnParam02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param03", DbType:="Float")>  _
		Public Property Param03() As System.Nullable(Of Double)
			Get
				Return Me._Param03
			End Get
			Set
				If (Me._Param03.Equals(value) = false) Then
					Me.OnParam03Changing(value)
					Me.SendPropertyChanging
					Me._Param03 = value
					Me.SendPropertyChanged("Param03")
					Me.OnParam03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param04", DbType:="Float")>  _
		Public Property Param04() As System.Nullable(Of Double)
			Get
				Return Me._Param04
			End Get
			Set
				If (Me._Param04.Equals(value) = false) Then
					Me.OnParam04Changing(value)
					Me.SendPropertyChanging
					Me._Param04 = value
					Me.SendPropertyChanged("Param04")
					Me.OnParam04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param05", DbType:="Float")>  _
		Public Property Param05() As System.Nullable(Of Double)
			Get
				Return Me._Param05
			End Get
			Set
				If (Me._Param05.Equals(value) = false) Then
					Me.OnParam05Changing(value)
					Me.SendPropertyChanging
					Me._Param05 = value
					Me.SendPropertyChanged("Param05")
					Me.OnParam05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param06", DbType:="Float")>  _
		Public Property Param06() As System.Nullable(Of Double)
			Get
				Return Me._Param06
			End Get
			Set
				If (Me._Param06.Equals(value) = false) Then
					Me.OnParam06Changing(value)
					Me.SendPropertyChanging
					Me._Param06 = value
					Me.SendPropertyChanged("Param06")
					Me.OnParam06Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param07", DbType:="Float")>  _
		Public Property Param07() As System.Nullable(Of Double)
			Get
				Return Me._Param07
			End Get
			Set
				If (Me._Param07.Equals(value) = false) Then
					Me.OnParam07Changing(value)
					Me.SendPropertyChanging
					Me._Param07 = value
					Me.SendPropertyChanged("Param07")
					Me.OnParam07Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param08", DbType:="Float")>  _
		Public Property Param08() As System.Nullable(Of Double)
			Get
				Return Me._Param08
			End Get
			Set
				If (Me._Param08.Equals(value) = false) Then
					Me.OnParam08Changing(value)
					Me.SendPropertyChanging
					Me._Param08 = value
					Me.SendPropertyChanged("Param08")
					Me.OnParam08Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param09", DbType:="Float")>  _
		Public Property Param09() As System.Nullable(Of Double)
			Get
				Return Me._Param09
			End Get
			Set
				If (Me._Param09.Equals(value) = false) Then
					Me.OnParam09Changing(value)
					Me.SendPropertyChanging
					Me._Param09 = value
					Me.SendPropertyChanged("Param09")
					Me.OnParam09Changed
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RecTeste")>  _
	Partial Public Class RecTeste
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _RecNum As Integer
		
		Private _RecNome As String
		
		Private _RecDescr As String
		
		Private _Codigo As String
		
		Private _PesoRefer As System.Nullable(Of Double)
		
		Private _Pasta As String
		
		Private _SubPasta As String
		
		Private _Densidade As System.Nullable(Of Double)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnRecNomeChanging(value As String)
    End Sub
    Partial Private Sub OnRecNomeChanged()
    End Sub
    Partial Private Sub OnRecDescrChanging(value As String)
    End Sub
    Partial Private Sub OnRecDescrChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnPesoReferChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPesoReferChanged()
    End Sub
    Partial Private Sub OnPastaChanging(value As String)
    End Sub
    Partial Private Sub OnPastaChanged()
    End Sub
    Partial Private Sub OnSubPastaChanging(value As String)
    End Sub
    Partial Private Sub OnSubPastaChanged()
    End Sub
    Partial Private Sub OnDensidadeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDensidadeChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property RecNum() As Integer
			Get
				Return Me._RecNum
			End Get
			Set
				If ((Me._RecNum = value)  _
							= false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNome", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property RecNome() As String
			Get
				Return Me._RecNome
			End Get
			Set
				If (String.Equals(Me._RecNome, value) = false) Then
					Me.OnRecNomeChanging(value)
					Me.SendPropertyChanging
					Me._RecNome = value
					Me.SendPropertyChanged("RecNome")
					Me.OnRecNomeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecDescr", DbType:="VarChar(50)")>  _
		Public Property RecDescr() As String
			Get
				Return Me._RecDescr
			End Get
			Set
				If (String.Equals(Me._RecDescr, value) = false) Then
					Me.OnRecDescrChanging(value)
					Me.SendPropertyChanging
					Me._RecDescr = value
					Me.SendPropertyChanged("RecDescr")
					Me.OnRecDescrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="VarChar(6) NOT NULL", CanBeNull:=false)>  _
		Public Property Codigo() As String
			Get
				Return Me._Codigo
			End Get
			Set
				If (String.Equals(Me._Codigo, value) = false) Then
					Me.OnCodigoChanging(value)
					Me.SendPropertyChanging
					Me._Codigo = value
					Me.SendPropertyChanged("Codigo")
					Me.OnCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PesoRefer", DbType:="Float")>  _
		Public Property PesoRefer() As System.Nullable(Of Double)
			Get
				Return Me._PesoRefer
			End Get
			Set
				If (Me._PesoRefer.Equals(value) = false) Then
					Me.OnPesoReferChanging(value)
					Me.SendPropertyChanging
					Me._PesoRefer = value
					Me.SendPropertyChanged("PesoRefer")
					Me.OnPesoReferChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pasta", DbType:="VarChar(50)")>  _
		Public Property Pasta() As String
			Get
				Return Me._Pasta
			End Get
			Set
				If (String.Equals(Me._Pasta, value) = false) Then
					Me.OnPastaChanging(value)
					Me.SendPropertyChanging
					Me._Pasta = value
					Me.SendPropertyChanged("Pasta")
					Me.OnPastaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubPasta", DbType:="VarChar(50)")>  _
		Public Property SubPasta() As String
			Get
				Return Me._SubPasta
			End Get
			Set
				If (String.Equals(Me._SubPasta, value) = false) Then
					Me.OnSubPastaChanging(value)
					Me.SendPropertyChanging
					Me._SubPasta = value
					Me.SendPropertyChanged("SubPasta")
					Me.OnSubPastaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Densidade", DbType:="Float")>  _
		Public Property Densidade() As System.Nullable(Of Double)
			Get
				Return Me._Densidade
			End Get
			Set
				If (Me._Densidade.Equals(value) = false) Then
					Me.OnDensidadeChanging(value)
					Me.SendPropertyChanging
					Me._Densidade = value
					Me.SendPropertyChanged("Densidade")
					Me.OnDensidadeChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Blocos")>  _
	Partial Public Class Blocos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _BlkNum As Integer
		
		Private _BlkDescr As String
		
		Private _Mnemonico As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnBlkNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnBlkNumChanged()
    End Sub
    Partial Private Sub OnBlkDescrChanging(value As String)
    End Sub
    Partial Private Sub OnBlkDescrChanged()
    End Sub
    Partial Private Sub OnMnemonicoChanging(value As String)
    End Sub
    Partial Private Sub OnMnemonicoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BlkNum", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property BlkNum() As Integer
			Get
				Return Me._BlkNum
			End Get
			Set
				If ((Me._BlkNum = value)  _
							= false) Then
					Me.OnBlkNumChanging(value)
					Me.SendPropertyChanging
					Me._BlkNum = value
					Me.SendPropertyChanged("BlkNum")
					Me.OnBlkNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BlkDescr", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property BlkDescr() As String
			Get
				Return Me._BlkDescr
			End Get
			Set
				If (String.Equals(Me._BlkDescr, value) = false) Then
					Me.OnBlkDescrChanging(value)
					Me.SendPropertyChanging
					Me._BlkDescr = value
					Me.SendPropertyChanged("BlkDescr")
					Me.OnBlkDescrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mnemonico", DbType:="NVarChar(20)")>  _
		Public Property Mnemonico() As String
			Get
				Return Me._Mnemonico
			End Get
			Set
				If (String.Equals(Me._Mnemonico, value) = false) Then
					Me.OnMnemonicoChanging(value)
					Me.SendPropertyChanging
					Me._Mnemonico = value
					Me.SendPropertyChanged("Mnemonico")
					Me.OnMnemonicoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RecIngred")>  _
	Partial Public Class RecIngred
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _RecNum As Integer
		
		Private _ItemSeq As Integer
		
		Private _IngrCodigo As String
		
		Private _Peso As System.Nullable(Of Double)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnItemSeqChanging(value As Integer)
    End Sub
    Partial Private Sub OnItemSeqChanged()
    End Sub
    Partial Private Sub OnIngrCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnIngrCodigoChanged()
    End Sub
    Partial Private Sub OnPesoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPesoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property RecNum() As Integer
			Get
				Return Me._RecNum
			End Get
			Set
				If ((Me._RecNum = value)  _
							= false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemSeq", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property ItemSeq() As Integer
			Get
				Return Me._ItemSeq
			End Get
			Set
				If ((Me._ItemSeq = value)  _
							= false) Then
					Me.OnItemSeqChanging(value)
					Me.SendPropertyChanging
					Me._ItemSeq = value
					Me.SendPropertyChanged("ItemSeq")
					Me.OnItemSeqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngrCodigo", DbType:="NVarChar(10)")>  _
		Public Property IngrCodigo() As String
			Get
				Return Me._IngrCodigo
			End Get
			Set
				If (String.Equals(Me._IngrCodigo, value) = false) Then
					Me.OnIngrCodigoChanging(value)
					Me.SendPropertyChanging
					Me._IngrCodigo = value
					Me.SendPropertyChanged("IngrCodigo")
					Me.OnIngrCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Peso", DbType:="Float")>  _
		Public Property Peso() As System.Nullable(Of Double)
			Get
				Return Me._Peso
			End Get
			Set
				If (Me._Peso.Equals(value) = false) Then
					Me.OnPesoChanging(value)
					Me.SendPropertyChanging
					Me._Peso = value
					Me.SendPropertyChanged("Peso")
					Me.OnPesoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RecIngredMat")>  _
	Partial Public Class RecIngredMat
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _RecNum As Integer
		
		Private _ItemSeq As Integer
		
		Private _IngrCodigo As String
		
		Private _Peso As System.Nullable(Of Double)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnItemSeqChanging(value As Integer)
    End Sub
    Partial Private Sub OnItemSeqChanged()
    End Sub
    Partial Private Sub OnIngrCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnIngrCodigoChanged()
    End Sub
    Partial Private Sub OnPesoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPesoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property RecNum() As Integer
			Get
				Return Me._RecNum
			End Get
			Set
				If ((Me._RecNum = value)  _
							= false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemSeq", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property ItemSeq() As Integer
			Get
				Return Me._ItemSeq
			End Get
			Set
				If ((Me._ItemSeq = value)  _
							= false) Then
					Me.OnItemSeqChanging(value)
					Me.SendPropertyChanging
					Me._ItemSeq = value
					Me.SendPropertyChanged("ItemSeq")
					Me.OnItemSeqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngrCodigo", DbType:="NVarChar(10)")>  _
		Public Property IngrCodigo() As String
			Get
				Return Me._IngrCodigo
			End Get
			Set
				If (String.Equals(Me._IngrCodigo, value) = false) Then
					Me.OnIngrCodigoChanging(value)
					Me.SendPropertyChanging
					Me._IngrCodigo = value
					Me.SendPropertyChanged("IngrCodigo")
					Me.OnIngrCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Peso", DbType:="Float")>  _
		Public Property Peso() As System.Nullable(Of Double)
			Get
				Return Me._Peso
			End Get
			Set
				If (Me._Peso.Equals(value) = false) Then
					Me.OnPesoChanging(value)
					Me.SendPropertyChanging
					Me._Peso = value
					Me.SendPropertyChanged("Peso")
					Me.OnPesoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Alergenico")>  _
	Partial Public Class Alergenico
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CodAlergenico As Integer
		
		Private _Nome As String
		
		Private _Descr As String
		
		Private _Letra As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodAlergenicoChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodAlergenicoChanged()
    End Sub
    Partial Private Sub OnNomeChanging(value As String)
    End Sub
    Partial Private Sub OnNomeChanged()
    End Sub
    Partial Private Sub OnDescrChanging(value As String)
    End Sub
    Partial Private Sub OnDescrChanged()
    End Sub
    Partial Private Sub OnLetraChanging(value As String)
    End Sub
    Partial Private Sub OnLetraChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodAlergenico", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property CodAlergenico() As Integer
			Get
				Return Me._CodAlergenico
			End Get
			Set
				If ((Me._CodAlergenico = value)  _
							= false) Then
					Me.OnCodAlergenicoChanging(value)
					Me.SendPropertyChanging
					Me._CodAlergenico = value
					Me.SendPropertyChanged("CodAlergenico")
					Me.OnCodAlergenicoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nome", DbType:="NVarChar(250)")>  _
		Public Property Nome() As String
			Get
				Return Me._Nome
			End Get
			Set
				If (String.Equals(Me._Nome, value) = false) Then
					Me.OnNomeChanging(value)
					Me.SendPropertyChanging
					Me._Nome = value
					Me.SendPropertyChanged("Nome")
					Me.OnNomeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descr", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
		Public Property Descr() As String
			Get
				Return Me._Descr
			End Get
			Set
				If (String.Equals(Me._Descr, value) = false) Then
					Me.OnDescrChanging(value)
					Me.SendPropertyChanging
					Me._Descr = value
					Me.SendPropertyChanged("Descr")
					Me.OnDescrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Letra", DbType:="NVarChar(2)")>  _
		Public Property Letra() As String
			Get
				Return Me._Letra
			End Get
			Set
				If (String.Equals(Me._Letra, value) = false) Then
					Me.OnLetraChanging(value)
					Me.SendPropertyChanging
					Me._Letra = value
					Me.SendPropertyChanged("Letra")
					Me.OnLetraChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AlergenicosRec")>  _
	Partial Public Class AlergenicosRec
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CodAlergenico As Integer
		
		Private _Area As String
		
		Private _RecNum As Integer
		
		Private _CodigoRec As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodAlergenicoChanging(value As Integer)
    End Sub
    Partial Private Sub OnCodAlergenicoChanged()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnCodigoRecChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoRecChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodAlergenico", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property CodAlergenico() As Integer
			Get
				Return Me._CodAlergenico
			End Get
			Set
				If ((Me._CodAlergenico = value)  _
							= false) Then
					Me.OnCodAlergenicoChanging(value)
					Me.SendPropertyChanging
					Me._CodAlergenico = value
					Me.SendPropertyChanged("CodAlergenico")
					Me.OnCodAlergenicoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property RecNum() As Integer
			Get
				Return Me._RecNum
			End Get
			Set
				If ((Me._RecNum = value)  _
							= false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodigoRec", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property CodigoRec() As String
			Get
				Return Me._CodigoRec
			End Get
			Set
				If (String.Equals(Me._CodigoRec, value) = false) Then
					Me.OnCodigoRecChanging(value)
					Me.SendPropertyChanging
					Me._CodigoRec = value
					Me.SendPropertyChanged("CodigoRec")
					Me.OnCodigoRecChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DestTqs")>  _
	Partial Public Class DestTqs
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _TqNome As String
		
		Private _TqDescr As String
		
		Private _EndStatus As String
		
		Private _EndPlanejamento As String
		
		Private _EndProduzido As String
		
		Private _EndAlergenico As String
		
		Private _EndPressao01 As String
		
		Private _EndPressao02 As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnTqNomeChanging(value As String)
    End Sub
    Partial Private Sub OnTqNomeChanged()
    End Sub
    Partial Private Sub OnTqDescrChanging(value As String)
    End Sub
    Partial Private Sub OnTqDescrChanged()
    End Sub
    Partial Private Sub OnEndStatusChanging(value As String)
    End Sub
    Partial Private Sub OnEndStatusChanged()
    End Sub
    Partial Private Sub OnEndPlanejamentoChanging(value As String)
    End Sub
    Partial Private Sub OnEndPlanejamentoChanged()
    End Sub
    Partial Private Sub OnEndProduzidoChanging(value As String)
    End Sub
    Partial Private Sub OnEndProduzidoChanged()
    End Sub
    Partial Private Sub OnEndAlergenicoChanging(value As String)
    End Sub
    Partial Private Sub OnEndAlergenicoChanged()
    End Sub
    Partial Private Sub OnEndPressao01Changing(value As String)
    End Sub
    Partial Private Sub OnEndPressao01Changed()
    End Sub
    Partial Private Sub OnEndPressao02Changing(value As String)
    End Sub
    Partial Private Sub OnEndPressao02Changed()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TqNome", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property TqNome() As String
			Get
				Return Me._TqNome
			End Get
			Set
				If (String.Equals(Me._TqNome, value) = false) Then
					Me.OnTqNomeChanging(value)
					Me.SendPropertyChanging
					Me._TqNome = value
					Me.SendPropertyChanged("TqNome")
					Me.OnTqNomeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TqDescr", DbType:="NVarChar(50)")>  _
		Public Property TqDescr() As String
			Get
				Return Me._TqDescr
			End Get
			Set
				If (String.Equals(Me._TqDescr, value) = false) Then
					Me.OnTqDescrChanging(value)
					Me.SendPropertyChanging
					Me._TqDescr = value
					Me.SendPropertyChanged("TqDescr")
					Me.OnTqDescrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndStatus", DbType:="NVarChar(80)")>  _
		Public Property EndStatus() As String
			Get
				Return Me._EndStatus
			End Get
			Set
				If (String.Equals(Me._EndStatus, value) = false) Then
					Me.OnEndStatusChanging(value)
					Me.SendPropertyChanging
					Me._EndStatus = value
					Me.SendPropertyChanged("EndStatus")
					Me.OnEndStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndPlanejamento", DbType:="NVarChar(80)")>  _
		Public Property EndPlanejamento() As String
			Get
				Return Me._EndPlanejamento
			End Get
			Set
				If (String.Equals(Me._EndPlanejamento, value) = false) Then
					Me.OnEndPlanejamentoChanging(value)
					Me.SendPropertyChanging
					Me._EndPlanejamento = value
					Me.SendPropertyChanged("EndPlanejamento")
					Me.OnEndPlanejamentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndProduzido", DbType:="NVarChar(80)")>  _
		Public Property EndProduzido() As String
			Get
				Return Me._EndProduzido
			End Get
			Set
				If (String.Equals(Me._EndProduzido, value) = false) Then
					Me.OnEndProduzidoChanging(value)
					Me.SendPropertyChanging
					Me._EndProduzido = value
					Me.SendPropertyChanged("EndProduzido")
					Me.OnEndProduzidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndAlergenico", DbType:="NVarChar(80)")>  _
		Public Property EndAlergenico() As String
			Get
				Return Me._EndAlergenico
			End Get
			Set
				If (String.Equals(Me._EndAlergenico, value) = false) Then
					Me.OnEndAlergenicoChanging(value)
					Me.SendPropertyChanging
					Me._EndAlergenico = value
					Me.SendPropertyChanged("EndAlergenico")
					Me.OnEndAlergenicoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndPressao01", DbType:="NVarChar(80)")>  _
		Public Property EndPressao01() As String
			Get
				Return Me._EndPressao01
			End Get
			Set
				If (String.Equals(Me._EndPressao01, value) = false) Then
					Me.OnEndPressao01Changing(value)
					Me.SendPropertyChanging
					Me._EndPressao01 = value
					Me.SendPropertyChanged("EndPressao01")
					Me.OnEndPressao01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndPressao02", DbType:="NVarChar(80)")>  _
		Public Property EndPressao02() As String
			Get
				Return Me._EndPressao02
			End Get
			Set
				If (String.Equals(Me._EndPressao02, value) = false) Then
					Me.OnEndPressao02Changing(value)
					Me.SendPropertyChanging
					Me._EndPressao02 = value
					Me.SendPropertyChanged("EndPressao02")
					Me.OnEndPressao02Changed
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Rec")>  _
	Partial Public Class Rec
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _RecNum As Integer
		
		Private _RecNome As String
		
		Private _RecDescr As String
		
		Private _Codigo As String
		
		Private _PesoRefer As System.Nullable(Of Double)
		
		Private _Pasta As String
		
		Private _Subpasta As String
		
		Private _Densidade As System.Nullable(Of Double)
		
		Private _Pressao01 As System.Nullable(Of Integer)
		
		Private _Pressao02 As System.Nullable(Of Integer)
		
		Private _Habilita As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnRecNomeChanging(value As String)
    End Sub
    Partial Private Sub OnRecNomeChanged()
    End Sub
    Partial Private Sub OnRecDescrChanging(value As String)
    End Sub
    Partial Private Sub OnRecDescrChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnPesoReferChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPesoReferChanged()
    End Sub
    Partial Private Sub OnPastaChanging(value As String)
    End Sub
    Partial Private Sub OnPastaChanged()
    End Sub
    Partial Private Sub OnSubpastaChanging(value As String)
    End Sub
    Partial Private Sub OnSubpastaChanged()
    End Sub
    Partial Private Sub OnDensidadeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDensidadeChanged()
    End Sub
    Partial Private Sub OnPressao01Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPressao01Changed()
    End Sub
    Partial Private Sub OnPressao02Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPressao02Changed()
    End Sub
    Partial Private Sub OnHabilitaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHabilitaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property RecNum() As Integer
			Get
				Return Me._RecNum
			End Get
			Set
				If ((Me._RecNum = value)  _
							= false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNome", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property RecNome() As String
			Get
				Return Me._RecNome
			End Get
			Set
				If (String.Equals(Me._RecNome, value) = false) Then
					Me.OnRecNomeChanging(value)
					Me.SendPropertyChanging
					Me._RecNome = value
					Me.SendPropertyChanged("RecNome")
					Me.OnRecNomeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecDescr", DbType:="VarChar(50)")>  _
		Public Property RecDescr() As String
			Get
				Return Me._RecDescr
			End Get
			Set
				If (String.Equals(Me._RecDescr, value) = false) Then
					Me.OnRecDescrChanging(value)
					Me.SendPropertyChanging
					Me._RecDescr = value
					Me.SendPropertyChanged("RecDescr")
					Me.OnRecDescrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property Codigo() As String
			Get
				Return Me._Codigo
			End Get
			Set
				If (String.Equals(Me._Codigo, value) = false) Then
					Me.OnCodigoChanging(value)
					Me.SendPropertyChanging
					Me._Codigo = value
					Me.SendPropertyChanged("Codigo")
					Me.OnCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PesoRefer", DbType:="Float")>  _
		Public Property PesoRefer() As System.Nullable(Of Double)
			Get
				Return Me._PesoRefer
			End Get
			Set
				If (Me._PesoRefer.Equals(value) = false) Then
					Me.OnPesoReferChanging(value)
					Me.SendPropertyChanging
					Me._PesoRefer = value
					Me.SendPropertyChanged("PesoRefer")
					Me.OnPesoReferChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pasta", DbType:="VarChar(50)")>  _
		Public Property Pasta() As String
			Get
				Return Me._Pasta
			End Get
			Set
				If (String.Equals(Me._Pasta, value) = false) Then
					Me.OnPastaChanging(value)
					Me.SendPropertyChanging
					Me._Pasta = value
					Me.SendPropertyChanged("Pasta")
					Me.OnPastaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subpasta", DbType:="VarChar(50)")>  _
		Public Property Subpasta() As String
			Get
				Return Me._Subpasta
			End Get
			Set
				If (String.Equals(Me._Subpasta, value) = false) Then
					Me.OnSubpastaChanging(value)
					Me.SendPropertyChanging
					Me._Subpasta = value
					Me.SendPropertyChanged("Subpasta")
					Me.OnSubpastaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Densidade", DbType:="Float")>  _
		Public Property Densidade() As System.Nullable(Of Double)
			Get
				Return Me._Densidade
			End Get
			Set
				If (Me._Densidade.Equals(value) = false) Then
					Me.OnDensidadeChanging(value)
					Me.SendPropertyChanging
					Me._Densidade = value
					Me.SendPropertyChanged("Densidade")
					Me.OnDensidadeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pressao01", DbType:="Int")>  _
		Public Property Pressao01() As System.Nullable(Of Integer)
			Get
				Return Me._Pressao01
			End Get
			Set
				If (Me._Pressao01.Equals(value) = false) Then
					Me.OnPressao01Changing(value)
					Me.SendPropertyChanging
					Me._Pressao01 = value
					Me.SendPropertyChanged("Pressao01")
					Me.OnPressao01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pressao02", DbType:="Int")>  _
		Public Property Pressao02() As System.Nullable(Of Integer)
			Get
				Return Me._Pressao02
			End Get
			Set
				If (Me._Pressao02.Equals(value) = false) Then
					Me.OnPressao02Changing(value)
					Me.SendPropertyChanging
					Me._Pressao02 = value
					Me.SendPropertyChanged("Pressao02")
					Me.OnPressao02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Habilita", DbType:="Int")>  _
		Public Property Habilita() As System.Nullable(Of Integer)
			Get
				Return Me._Habilita
			End Get
			Set
				If (Me._Habilita.Equals(value) = false) Then
					Me.OnHabilitaChanging(value)
					Me.SendPropertyChanging
					Me._Habilita = value
					Me.SendPropertyChanged("Habilita")
					Me.OnHabilitaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_MTA_Mistura")>  _
	Partial Public Class tb_MTA_Mistura
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _MTA_ID As Integer
		
		Private _TPM_ID As System.Nullable(Of Integer)
		
		Private _MTA_Sequencia As System.Nullable(Of Integer)
		
		Private _IngrCodigo As String
		
		Private _MTA_Peso As System.Nullable(Of Double)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnMTA_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnMTA_IDChanged()
    End Sub
    Partial Private Sub OnTPM_IDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTPM_IDChanged()
    End Sub
    Partial Private Sub OnMTA_SequenciaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMTA_SequenciaChanged()
    End Sub
    Partial Private Sub OnIngrCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnIngrCodigoChanged()
    End Sub
    Partial Private Sub OnMTA_PesoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMTA_PesoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTA_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property MTA_ID() As Integer
			Get
				Return Me._MTA_ID
			End Get
			Set
				If ((Me._MTA_ID = value)  _
							= false) Then
					Me.OnMTA_IDChanging(value)
					Me.SendPropertyChanging
					Me._MTA_ID = value
					Me.SendPropertyChanged("MTA_ID")
					Me.OnMTA_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPM_ID", DbType:="Int")>  _
		Public Property TPM_ID() As System.Nullable(Of Integer)
			Get
				Return Me._TPM_ID
			End Get
			Set
				If (Me._TPM_ID.Equals(value) = false) Then
					Me.OnTPM_IDChanging(value)
					Me.SendPropertyChanging
					Me._TPM_ID = value
					Me.SendPropertyChanged("TPM_ID")
					Me.OnTPM_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTA_Sequencia", DbType:="Int")>  _
		Public Property MTA_Sequencia() As System.Nullable(Of Integer)
			Get
				Return Me._MTA_Sequencia
			End Get
			Set
				If (Me._MTA_Sequencia.Equals(value) = false) Then
					Me.OnMTA_SequenciaChanging(value)
					Me.SendPropertyChanging
					Me._MTA_Sequencia = value
					Me.SendPropertyChanged("MTA_Sequencia")
					Me.OnMTA_SequenciaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngrCodigo", DbType:="NVarChar(10)")>  _
		Public Property IngrCodigo() As String
			Get
				Return Me._IngrCodigo
			End Get
			Set
				If (String.Equals(Me._IngrCodigo, value) = false) Then
					Me.OnIngrCodigoChanging(value)
					Me.SendPropertyChanging
					Me._IngrCodigo = value
					Me.SendPropertyChanged("IngrCodigo")
					Me.OnIngrCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MTA_Peso", DbType:="Float")>  _
		Public Property MTA_Peso() As System.Nullable(Of Double)
			Get
				Return Me._MTA_Peso
			End Get
			Set
				If (Me._MTA_Peso.Equals(value) = false) Then
					Me.OnMTA_PesoChanging(value)
					Me.SendPropertyChanging
					Me._MTA_Peso = value
					Me.SendPropertyChanged("MTA_Peso")
					Me.OnMTA_PesoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_PCT_Pacotes")>  _
	Partial Public Class tb_PCT_Pacotes
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PCT_ID As Integer
		
		Private _CBT_ID As Integer
		
		Private _TPM_ID As Integer
		
		Private _PCT_Pacote As Integer
		
		Private _PCT_DataInicio As System.Nullable(Of Date)
		
		Private _PCT_DataFim As System.Nullable(Of Date)
		
		Private _PCT_UsuarioOperador As String
		
		Private _PCT_Utilizado As Boolean
		
		Private _PCT_Excluido As Boolean
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPCT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPCT_IDChanged()
    End Sub
    Partial Private Sub OnCBT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCBT_IDChanged()
    End Sub
    Partial Private Sub OnTPM_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTPM_IDChanged()
    End Sub
    Partial Private Sub OnPCT_PacoteChanging(value As Integer)
    End Sub
    Partial Private Sub OnPCT_PacoteChanged()
    End Sub
    Partial Private Sub OnPCT_DataInicioChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPCT_DataInicioChanged()
    End Sub
    Partial Private Sub OnPCT_DataFimChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPCT_DataFimChanged()
    End Sub
    Partial Private Sub OnPCT_UsuarioOperadorChanging(value As String)
    End Sub
    Partial Private Sub OnPCT_UsuarioOperadorChanged()
    End Sub
    Partial Private Sub OnPCT_UtilizadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPCT_UtilizadoChanged()
    End Sub
    Partial Private Sub OnPCT_ExcluidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPCT_ExcluidoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PCT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property PCT_ID() As Integer
			Get
				Return Me._PCT_ID
			End Get
			Set
				If ((Me._PCT_ID = value)  _
							= false) Then
					Me.OnPCT_IDChanging(value)
					Me.SendPropertyChanging
					Me._PCT_ID = value
					Me.SendPropertyChanged("PCT_ID")
					Me.OnPCT_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBT_ID", DbType:="Int NOT NULL")>  _
		Public Property CBT_ID() As Integer
			Get
				Return Me._CBT_ID
			End Get
			Set
				If ((Me._CBT_ID = value)  _
							= false) Then
					Me.OnCBT_IDChanging(value)
					Me.SendPropertyChanging
					Me._CBT_ID = value
					Me.SendPropertyChanged("CBT_ID")
					Me.OnCBT_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPM_ID", DbType:="Int NOT NULL")>  _
		Public Property TPM_ID() As Integer
			Get
				Return Me._TPM_ID
			End Get
			Set
				If ((Me._TPM_ID = value)  _
							= false) Then
					Me.OnTPM_IDChanging(value)
					Me.SendPropertyChanging
					Me._TPM_ID = value
					Me.SendPropertyChanged("TPM_ID")
					Me.OnTPM_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PCT_Pacote", DbType:="Int NOT NULL")>  _
		Public Property PCT_Pacote() As Integer
			Get
				Return Me._PCT_Pacote
			End Get
			Set
				If ((Me._PCT_Pacote = value)  _
							= false) Then
					Me.OnPCT_PacoteChanging(value)
					Me.SendPropertyChanging
					Me._PCT_Pacote = value
					Me.SendPropertyChanged("PCT_Pacote")
					Me.OnPCT_PacoteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PCT_DataInicio", DbType:="DateTime")>  _
		Public Property PCT_DataInicio() As System.Nullable(Of Date)
			Get
				Return Me._PCT_DataInicio
			End Get
			Set
				If (Me._PCT_DataInicio.Equals(value) = false) Then
					Me.OnPCT_DataInicioChanging(value)
					Me.SendPropertyChanging
					Me._PCT_DataInicio = value
					Me.SendPropertyChanged("PCT_DataInicio")
					Me.OnPCT_DataInicioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PCT_DataFim", DbType:="DateTime")>  _
		Public Property PCT_DataFim() As System.Nullable(Of Date)
			Get
				Return Me._PCT_DataFim
			End Get
			Set
				If (Me._PCT_DataFim.Equals(value) = false) Then
					Me.OnPCT_DataFimChanging(value)
					Me.SendPropertyChanging
					Me._PCT_DataFim = value
					Me.SendPropertyChanged("PCT_DataFim")
					Me.OnPCT_DataFimChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PCT_UsuarioOperador", DbType:="NVarChar(50)")>  _
		Public Property PCT_UsuarioOperador() As String
			Get
				Return Me._PCT_UsuarioOperador
			End Get
			Set
				If (String.Equals(Me._PCT_UsuarioOperador, value) = false) Then
					Me.OnPCT_UsuarioOperadorChanging(value)
					Me.SendPropertyChanging
					Me._PCT_UsuarioOperador = value
					Me.SendPropertyChanged("PCT_UsuarioOperador")
					Me.OnPCT_UsuarioOperadorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PCT_Utilizado", DbType:="Bit NOT NULL")>  _
		Public Property PCT_Utilizado() As Boolean
			Get
				Return Me._PCT_Utilizado
			End Get
			Set
				If ((Me._PCT_Utilizado = value)  _
							= false) Then
					Me.OnPCT_UtilizadoChanging(value)
					Me.SendPropertyChanging
					Me._PCT_Utilizado = value
					Me.SendPropertyChanged("PCT_Utilizado")
					Me.OnPCT_UtilizadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PCT_Excluido", DbType:="Bit NOT NULL")>  _
		Public Property PCT_Excluido() As Boolean
			Get
				Return Me._PCT_Excluido
			End Get
			Set
				If ((Me._PCT_Excluido = value)  _
							= false) Then
					Me.OnPCT_ExcluidoChanging(value)
					Me.SendPropertyChanging
					Me._PCT_Excluido = value
					Me.SendPropertyChanged("PCT_Excluido")
					Me.OnPCT_ExcluidoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_PPC_PesagemPacote")>  _
	Partial Public Class tb_PPC_PesagemPacote
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PPC_ID As Integer
		
		Private _PCT_ID As Integer
		
		Private _IngrCodigo As String
		
		Private _PPC_Peso As Double
		
		Private _PPC_Lote As String
		
		Private _PPC_DataValidade As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPPC_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPPC_IDChanged()
    End Sub
    Partial Private Sub OnPCT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPCT_IDChanged()
    End Sub
    Partial Private Sub OnIngrCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnIngrCodigoChanged()
    End Sub
    Partial Private Sub OnPPC_PesoChanging(value As Double)
    End Sub
    Partial Private Sub OnPPC_PesoChanged()
    End Sub
    Partial Private Sub OnPPC_LoteChanging(value As String)
    End Sub
    Partial Private Sub OnPPC_LoteChanged()
    End Sub
    Partial Private Sub OnPPC_DataValidadeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPPC_DataValidadeChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PPC_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property PPC_ID() As Integer
			Get
				Return Me._PPC_ID
			End Get
			Set
				If ((Me._PPC_ID = value)  _
							= false) Then
					Me.OnPPC_IDChanging(value)
					Me.SendPropertyChanging
					Me._PPC_ID = value
					Me.SendPropertyChanged("PPC_ID")
					Me.OnPPC_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PCT_ID", DbType:="Int NOT NULL")>  _
		Public Property PCT_ID() As Integer
			Get
				Return Me._PCT_ID
			End Get
			Set
				If ((Me._PCT_ID = value)  _
							= false) Then
					Me.OnPCT_IDChanging(value)
					Me.SendPropertyChanging
					Me._PCT_ID = value
					Me.SendPropertyChanged("PCT_ID")
					Me.OnPCT_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngrCodigo", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property IngrCodigo() As String
			Get
				Return Me._IngrCodigo
			End Get
			Set
				If (String.Equals(Me._IngrCodigo, value) = false) Then
					Me.OnIngrCodigoChanging(value)
					Me.SendPropertyChanging
					Me._IngrCodigo = value
					Me.SendPropertyChanged("IngrCodigo")
					Me.OnIngrCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PPC_Peso", DbType:="Float NOT NULL")>  _
		Public Property PPC_Peso() As Double
			Get
				Return Me._PPC_Peso
			End Get
			Set
				If ((Me._PPC_Peso = value)  _
							= false) Then
					Me.OnPPC_PesoChanging(value)
					Me.SendPropertyChanging
					Me._PPC_Peso = value
					Me.SendPropertyChanged("PPC_Peso")
					Me.OnPPC_PesoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PPC_Lote", DbType:="NVarChar(50)")>  _
		Public Property PPC_Lote() As String
			Get
				Return Me._PPC_Lote
			End Get
			Set
				If (String.Equals(Me._PPC_Lote, value) = false) Then
					Me.OnPPC_LoteChanging(value)
					Me.SendPropertyChanging
					Me._PPC_Lote = value
					Me.SendPropertyChanged("PPC_Lote")
					Me.OnPPC_LoteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PPC_DataValidade", DbType:="DateTime2")>  _
		Public Property PPC_DataValidade() As System.Nullable(Of Date)
			Get
				Return Me._PPC_DataValidade
			End Get
			Set
				If (Me._PPC_DataValidade.Equals(value) = false) Then
					Me.OnPPC_DataValidadeChanging(value)
					Me.SendPropertyChanging
					Me._PPC_DataValidade = value
					Me.SendPropertyChanged("PPC_DataValidade")
					Me.OnPPC_DataValidadeChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_PBD_PesagemBalde")>  _
	Partial Public Class tb_PBD_PesagemBalde
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PBD_ID As Integer
		
		Private _BLD_ID As Integer
		
		Private _IngrCodigo As String
		
		Private _PBD_Peso As Double
		
		Private _PBD_Lote As String
		
		Private _PBD_DataValidade As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPBD_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPBD_IDChanged()
    End Sub
    Partial Private Sub OnBLD_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBLD_IDChanged()
    End Sub
    Partial Private Sub OnIngrCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnIngrCodigoChanged()
    End Sub
    Partial Private Sub OnPBD_PesoChanging(value As Double)
    End Sub
    Partial Private Sub OnPBD_PesoChanged()
    End Sub
    Partial Private Sub OnPBD_LoteChanging(value As String)
    End Sub
    Partial Private Sub OnPBD_LoteChanged()
    End Sub
    Partial Private Sub OnPBD_DataValidadeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPBD_DataValidadeChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PBD_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property PBD_ID() As Integer
			Get
				Return Me._PBD_ID
			End Get
			Set
				If ((Me._PBD_ID = value)  _
							= false) Then
					Me.OnPBD_IDChanging(value)
					Me.SendPropertyChanging
					Me._PBD_ID = value
					Me.SendPropertyChanged("PBD_ID")
					Me.OnPBD_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BLD_ID", DbType:="Int NOT NULL")>  _
		Public Property BLD_ID() As Integer
			Get
				Return Me._BLD_ID
			End Get
			Set
				If ((Me._BLD_ID = value)  _
							= false) Then
					Me.OnBLD_IDChanging(value)
					Me.SendPropertyChanging
					Me._BLD_ID = value
					Me.SendPropertyChanged("BLD_ID")
					Me.OnBLD_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngrCodigo", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property IngrCodigo() As String
			Get
				Return Me._IngrCodigo
			End Get
			Set
				If (String.Equals(Me._IngrCodigo, value) = false) Then
					Me.OnIngrCodigoChanging(value)
					Me.SendPropertyChanging
					Me._IngrCodigo = value
					Me.SendPropertyChanged("IngrCodigo")
					Me.OnIngrCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PBD_Peso", DbType:="Float NOT NULL")>  _
		Public Property PBD_Peso() As Double
			Get
				Return Me._PBD_Peso
			End Get
			Set
				If ((Me._PBD_Peso = value)  _
							= false) Then
					Me.OnPBD_PesoChanging(value)
					Me.SendPropertyChanging
					Me._PBD_Peso = value
					Me.SendPropertyChanged("PBD_Peso")
					Me.OnPBD_PesoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PBD_Lote", DbType:="NVarChar(50)")>  _
		Public Property PBD_Lote() As String
			Get
				Return Me._PBD_Lote
			End Get
			Set
				If (String.Equals(Me._PBD_Lote, value) = false) Then
					Me.OnPBD_LoteChanging(value)
					Me.SendPropertyChanging
					Me._PBD_Lote = value
					Me.SendPropertyChanged("PBD_Lote")
					Me.OnPBD_LoteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PBD_DataValidade", DbType:="DateTime2")>  _
		Public Property PBD_DataValidade() As System.Nullable(Of Date)
			Get
				Return Me._PBD_DataValidade
			End Get
			Set
				If (Me._PBD_DataValidade.Equals(value) = false) Then
					Me.OnPBD_DataValidadeChanging(value)
					Me.SendPropertyChanging
					Me._PBD_DataValidade = value
					Me.SendPropertyChanged("PBD_DataValidade")
					Me.OnPBD_DataValidadeChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_BLD_Baldes")>  _
	Partial Public Class tb_BLD_Baldes
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _BLD_ID As Integer
		
		Private _CBM_ID As Integer
		
		Private _BLD_Balde As Integer
		
		Private _BLD_DataInicio As System.Nullable(Of Date)
		
		Private _BLD_DataFim As System.Nullable(Of Date)
		
		Private _BLD_UsuarioOperador As String
		
		Private _BLD_Utilizado As Boolean
		
		Private _BLD_Excluido As Boolean
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBLD_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBLD_IDChanged()
    End Sub
    Partial Private Sub OnCBM_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCBM_IDChanged()
    End Sub
    Partial Private Sub OnBLD_BaldeChanging(value As Integer)
    End Sub
    Partial Private Sub OnBLD_BaldeChanged()
    End Sub
    Partial Private Sub OnBLD_DataInicioChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBLD_DataInicioChanged()
    End Sub
    Partial Private Sub OnBLD_DataFimChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBLD_DataFimChanged()
    End Sub
    Partial Private Sub OnBLD_UsuarioOperadorChanging(value As String)
    End Sub
    Partial Private Sub OnBLD_UsuarioOperadorChanged()
    End Sub
    Partial Private Sub OnBLD_UtilizadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnBLD_UtilizadoChanged()
    End Sub
    Partial Private Sub OnBLD_ExcluidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnBLD_ExcluidoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BLD_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property BLD_ID() As Integer
			Get
				Return Me._BLD_ID
			End Get
			Set
				If ((Me._BLD_ID = value)  _
							= false) Then
					Me.OnBLD_IDChanging(value)
					Me.SendPropertyChanging
					Me._BLD_ID = value
					Me.SendPropertyChanged("BLD_ID")
					Me.OnBLD_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_ID", DbType:="Int NOT NULL")>  _
		Public Property CBM_ID() As Integer
			Get
				Return Me._CBM_ID
			End Get
			Set
				If ((Me._CBM_ID = value)  _
							= false) Then
					Me.OnCBM_IDChanging(value)
					Me.SendPropertyChanging
					Me._CBM_ID = value
					Me.SendPropertyChanged("CBM_ID")
					Me.OnCBM_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BLD_Balde", DbType:="Int NOT NULL")>  _
		Public Property BLD_Balde() As Integer
			Get
				Return Me._BLD_Balde
			End Get
			Set
				If ((Me._BLD_Balde = value)  _
							= false) Then
					Me.OnBLD_BaldeChanging(value)
					Me.SendPropertyChanging
					Me._BLD_Balde = value
					Me.SendPropertyChanged("BLD_Balde")
					Me.OnBLD_BaldeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BLD_DataInicio", DbType:="DateTime2")>  _
		Public Property BLD_DataInicio() As System.Nullable(Of Date)
			Get
				Return Me._BLD_DataInicio
			End Get
			Set
				If (Me._BLD_DataInicio.Equals(value) = false) Then
					Me.OnBLD_DataInicioChanging(value)
					Me.SendPropertyChanging
					Me._BLD_DataInicio = value
					Me.SendPropertyChanged("BLD_DataInicio")
					Me.OnBLD_DataInicioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BLD_DataFim", DbType:="DateTime2")>  _
		Public Property BLD_DataFim() As System.Nullable(Of Date)
			Get
				Return Me._BLD_DataFim
			End Get
			Set
				If (Me._BLD_DataFim.Equals(value) = false) Then
					Me.OnBLD_DataFimChanging(value)
					Me.SendPropertyChanging
					Me._BLD_DataFim = value
					Me.SendPropertyChanged("BLD_DataFim")
					Me.OnBLD_DataFimChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BLD_UsuarioOperador", DbType:="NVarChar(50)")>  _
		Public Property BLD_UsuarioOperador() As String
			Get
				Return Me._BLD_UsuarioOperador
			End Get
			Set
				If (String.Equals(Me._BLD_UsuarioOperador, value) = false) Then
					Me.OnBLD_UsuarioOperadorChanging(value)
					Me.SendPropertyChanging
					Me._BLD_UsuarioOperador = value
					Me.SendPropertyChanged("BLD_UsuarioOperador")
					Me.OnBLD_UsuarioOperadorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BLD_Utilizado", DbType:="Bit NOT NULL")>  _
		Public Property BLD_Utilizado() As Boolean
			Get
				Return Me._BLD_Utilizado
			End Get
			Set
				If ((Me._BLD_Utilizado = value)  _
							= false) Then
					Me.OnBLD_UtilizadoChanging(value)
					Me.SendPropertyChanging
					Me._BLD_Utilizado = value
					Me.SendPropertyChanged("BLD_Utilizado")
					Me.OnBLD_UtilizadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BLD_Excluido", DbType:="Bit NOT NULL")>  _
		Public Property BLD_Excluido() As Boolean
			Get
				Return Me._BLD_Excluido
			End Get
			Set
				If ((Me._BLD_Excluido = value)  _
							= false) Then
					Me.OnBLD_ExcluidoChanging(value)
					Me.SendPropertyChanging
					Me._BLD_Excluido = value
					Me.SendPropertyChanged("BLD_Excluido")
					Me.OnBLD_ExcluidoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_PIN_PequenoIngrediente")>  _
	Partial Public Class tb_PIN_PequenoIngrediente
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PIN_ID As Integer
		
		Private _CPI_IDBlend As Integer
		
		Private _PIN_IngredienteSAP As Integer
		
		Private _CPI_ID As Integer
		
		Private _PIN_DataInicio As System.Nullable(Of Date)
		
		Private _PIN_DataFim As System.Nullable(Of Date)
		
		Private _PIN_UsuarioOperador As String
		
		Private _PIN_Utilizado As Boolean
		
		Private _PIN_Excluido As Boolean
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPIN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPIN_IDChanged()
    End Sub
    Partial Private Sub OnCPI_IDBlendChanging(value As Integer)
    End Sub
    Partial Private Sub OnCPI_IDBlendChanged()
    End Sub
    Partial Private Sub OnPIN_IngredienteSAPChanging(value As Integer)
    End Sub
    Partial Private Sub OnPIN_IngredienteSAPChanged()
    End Sub
    Partial Private Sub OnCPI_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCPI_IDChanged()
    End Sub
    Partial Private Sub OnPIN_DataInicioChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPIN_DataInicioChanged()
    End Sub
    Partial Private Sub OnPIN_DataFimChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPIN_DataFimChanged()
    End Sub
    Partial Private Sub OnPIN_UsuarioOperadorChanging(value As String)
    End Sub
    Partial Private Sub OnPIN_UsuarioOperadorChanged()
    End Sub
    Partial Private Sub OnPIN_UtilizadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPIN_UtilizadoChanged()
    End Sub
    Partial Private Sub OnPIN_ExcluidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPIN_ExcluidoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIN_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property PIN_ID() As Integer
			Get
				Return Me._PIN_ID
			End Get
			Set
				If ((Me._PIN_ID = value)  _
							= false) Then
					Me.OnPIN_IDChanging(value)
					Me.SendPropertyChanging
					Me._PIN_ID = value
					Me.SendPropertyChanged("PIN_ID")
					Me.OnPIN_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPI_IDBlend", DbType:="Int NOT NULL")>  _
		Public Property CPI_IDBlend() As Integer
			Get
				Return Me._CPI_IDBlend
			End Get
			Set
				If ((Me._CPI_IDBlend = value)  _
							= false) Then
					Me.OnCPI_IDBlendChanging(value)
					Me.SendPropertyChanging
					Me._CPI_IDBlend = value
					Me.SendPropertyChanged("CPI_IDBlend")
					Me.OnCPI_IDBlendChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIN_IngredienteSAP", DbType:="Int NOT NULL")>  _
		Public Property PIN_IngredienteSAP() As Integer
			Get
				Return Me._PIN_IngredienteSAP
			End Get
			Set
				If ((Me._PIN_IngredienteSAP = value)  _
							= false) Then
					Me.OnPIN_IngredienteSAPChanging(value)
					Me.SendPropertyChanging
					Me._PIN_IngredienteSAP = value
					Me.SendPropertyChanged("PIN_IngredienteSAP")
					Me.OnPIN_IngredienteSAPChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPI_ID", DbType:="Int NOT NULL")>  _
		Public Property CPI_ID() As Integer
			Get
				Return Me._CPI_ID
			End Get
			Set
				If ((Me._CPI_ID = value)  _
							= false) Then
					Me.OnCPI_IDChanging(value)
					Me.SendPropertyChanging
					Me._CPI_ID = value
					Me.SendPropertyChanged("CPI_ID")
					Me.OnCPI_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIN_DataInicio", DbType:="DateTime2")>  _
		Public Property PIN_DataInicio() As System.Nullable(Of Date)
			Get
				Return Me._PIN_DataInicio
			End Get
			Set
				If (Me._PIN_DataInicio.Equals(value) = false) Then
					Me.OnPIN_DataInicioChanging(value)
					Me.SendPropertyChanging
					Me._PIN_DataInicio = value
					Me.SendPropertyChanged("PIN_DataInicio")
					Me.OnPIN_DataInicioChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIN_DataFim", DbType:="DateTime2")>  _
		Public Property PIN_DataFim() As System.Nullable(Of Date)
			Get
				Return Me._PIN_DataFim
			End Get
			Set
				If (Me._PIN_DataFim.Equals(value) = false) Then
					Me.OnPIN_DataFimChanging(value)
					Me.SendPropertyChanging
					Me._PIN_DataFim = value
					Me.SendPropertyChanged("PIN_DataFim")
					Me.OnPIN_DataFimChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIN_UsuarioOperador", DbType:="NVarChar(50)")>  _
		Public Property PIN_UsuarioOperador() As String
			Get
				Return Me._PIN_UsuarioOperador
			End Get
			Set
				If (String.Equals(Me._PIN_UsuarioOperador, value) = false) Then
					Me.OnPIN_UsuarioOperadorChanging(value)
					Me.SendPropertyChanging
					Me._PIN_UsuarioOperador = value
					Me.SendPropertyChanged("PIN_UsuarioOperador")
					Me.OnPIN_UsuarioOperadorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIN_Utilizado", DbType:="Bit NOT NULL")>  _
		Public Property PIN_Utilizado() As Boolean
			Get
				Return Me._PIN_Utilizado
			End Get
			Set
				If ((Me._PIN_Utilizado = value)  _
							= false) Then
					Me.OnPIN_UtilizadoChanging(value)
					Me.SendPropertyChanging
					Me._PIN_Utilizado = value
					Me.SendPropertyChanged("PIN_Utilizado")
					Me.OnPIN_UtilizadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIN_Excluido", DbType:="Bit NOT NULL")>  _
		Public Property PIN_Excluido() As Boolean
			Get
				Return Me._PIN_Excluido
			End Get
			Set
				If ((Me._PIN_Excluido = value)  _
							= false) Then
					Me.OnPIN_ExcluidoChanging(value)
					Me.SendPropertyChanging
					Me._PIN_Excluido = value
					Me.SendPropertyChanged("PIN_Excluido")
					Me.OnPIN_ExcluidoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_PPI_PesagemPequenoIngr")>  _
	Partial Public Class tb_PPI_PesagemPequenoIngr
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PPI_ID As Integer
		
		Private _PIN_ID As Integer
		
		Private _IngrCodigo As String
		
		Private _PPI_Peso As Double
		
		Private _PPI_Lote As String
		
		Private _PPI_DataValidade As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPPI_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPPI_IDChanged()
    End Sub
    Partial Private Sub OnPIN_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPIN_IDChanged()
    End Sub
    Partial Private Sub OnIngrCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnIngrCodigoChanged()
    End Sub
    Partial Private Sub OnPPI_PesoChanging(value As Double)
    End Sub
    Partial Private Sub OnPPI_PesoChanged()
    End Sub
    Partial Private Sub OnPPI_LoteChanging(value As String)
    End Sub
    Partial Private Sub OnPPI_LoteChanged()
    End Sub
    Partial Private Sub OnPPI_DataValidadeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPPI_DataValidadeChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PPI_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property PPI_ID() As Integer
			Get
				Return Me._PPI_ID
			End Get
			Set
				If ((Me._PPI_ID = value)  _
							= false) Then
					Me.OnPPI_IDChanging(value)
					Me.SendPropertyChanging
					Me._PPI_ID = value
					Me.SendPropertyChanged("PPI_ID")
					Me.OnPPI_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PIN_ID", DbType:="Int NOT NULL")>  _
		Public Property PIN_ID() As Integer
			Get
				Return Me._PIN_ID
			End Get
			Set
				If ((Me._PIN_ID = value)  _
							= false) Then
					Me.OnPIN_IDChanging(value)
					Me.SendPropertyChanging
					Me._PIN_ID = value
					Me.SendPropertyChanged("PIN_ID")
					Me.OnPIN_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngrCodigo", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property IngrCodigo() As String
			Get
				Return Me._IngrCodigo
			End Get
			Set
				If (String.Equals(Me._IngrCodigo, value) = false) Then
					Me.OnIngrCodigoChanging(value)
					Me.SendPropertyChanging
					Me._IngrCodigo = value
					Me.SendPropertyChanged("IngrCodigo")
					Me.OnIngrCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PPI_Peso", DbType:="Float NOT NULL")>  _
		Public Property PPI_Peso() As Double
			Get
				Return Me._PPI_Peso
			End Get
			Set
				If ((Me._PPI_Peso = value)  _
							= false) Then
					Me.OnPPI_PesoChanging(value)
					Me.SendPropertyChanging
					Me._PPI_Peso = value
					Me.SendPropertyChanged("PPI_Peso")
					Me.OnPPI_PesoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PPI_Lote", DbType:="NVarChar(50)")>  _
		Public Property PPI_Lote() As String
			Get
				Return Me._PPI_Lote
			End Get
			Set
				If (String.Equals(Me._PPI_Lote, value) = false) Then
					Me.OnPPI_LoteChanging(value)
					Me.SendPropertyChanging
					Me._PPI_Lote = value
					Me.SendPropertyChanged("PPI_Lote")
					Me.OnPPI_LoteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PPI_DataValidade", DbType:="DateTime2")>  _
		Public Property PPI_DataValidade() As System.Nullable(Of Date)
			Get
				Return Me._PPI_DataValidade
			End Get
			Set
				If (Me._PPI_DataValidade.Equals(value) = false) Then
					Me.OnPPI_DataValidadeChanging(value)
					Me.SendPropertyChanging
					Me._PPI_DataValidade = value
					Me.SendPropertyChanged("PPI_DataValidade")
					Me.OnPPI_DataValidadeChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_TPM_TipoMistura")>  _
	Partial Public Class tb_TPM_TipoMistura
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _TPM_ID As Integer
		
		Private _TPM_TipoMistura As String
		
		Private _TPM_Descricao As String
		
		Private _TPM_Percentual As System.Nullable(Of Double)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTPM_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTPM_IDChanged()
    End Sub
    Partial Private Sub OnTPM_TipoMisturaChanging(value As String)
    End Sub
    Partial Private Sub OnTPM_TipoMisturaChanged()
    End Sub
    Partial Private Sub OnTPM_DescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnTPM_DescricaoChanged()
    End Sub
    Partial Private Sub OnTPM_PercentualChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTPM_PercentualChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPM_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property TPM_ID() As Integer
			Get
				Return Me._TPM_ID
			End Get
			Set
				If ((Me._TPM_ID = value)  _
							= false) Then
					Me.OnTPM_IDChanging(value)
					Me.SendPropertyChanging
					Me._TPM_ID = value
					Me.SendPropertyChanged("TPM_ID")
					Me.OnTPM_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPM_TipoMistura", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property TPM_TipoMistura() As String
			Get
				Return Me._TPM_TipoMistura
			End Get
			Set
				If (String.Equals(Me._TPM_TipoMistura, value) = false) Then
					Me.OnTPM_TipoMisturaChanging(value)
					Me.SendPropertyChanging
					Me._TPM_TipoMistura = value
					Me.SendPropertyChanged("TPM_TipoMistura")
					Me.OnTPM_TipoMisturaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPM_Descricao", DbType:="NVarChar(50)")>  _
		Public Property TPM_Descricao() As String
			Get
				Return Me._TPM_Descricao
			End Get
			Set
				If (String.Equals(Me._TPM_Descricao, value) = false) Then
					Me.OnTPM_DescricaoChanging(value)
					Me.SendPropertyChanging
					Me._TPM_Descricao = value
					Me.SendPropertyChanged("TPM_Descricao")
					Me.OnTPM_DescricaoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPM_Percentual", DbType:="Float")>  _
		Public Property TPM_Percentual() As System.Nullable(Of Double)
			Get
				Return Me._TPM_Percentual
			End Get
			Set
				If (Me._TPM_Percentual.Equals(value) = false) Then
					Me.OnTPM_PercentualChanging(value)
					Me.SendPropertyChanging
					Me._TPM_Percentual = value
					Me.SendPropertyChanged("TPM_Percentual")
					Me.OnTPM_PercentualChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_CBT_CadastroBatch")>  _
	Partial Public Class tb_CBT_CadastroBatch
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CBT_ID As Integer
		
		Private _CBT_IDBatch As Integer
		
		Private _RecNum As Integer
		
		Private _TPM_ID As Integer
		
		Private _CBT_VolumeBatch As System.Nullable(Of Integer)
		
		Private _CBT_QtdPacotes As Integer
		
		Private _CBT_DataSolicitacao As System.Nullable(Of Date)
		
		Private _CBT_UsuarioSolicitacao As String
		
		Private _CBT_DataInicioBatch As System.Nullable(Of Date)
		
		Private _CBT_DataFimBatch As System.Nullable(Of Date)
		
		Private _CBT_UsuarioOperador As String
		
		Private _CBT_Finalizado As Boolean
		
		Private _CBT_Excluido As Boolean
		
		Private _CBT_Tanque As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCBT_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCBT_IDChanged()
    End Sub
    Partial Private Sub OnCBT_IDBatchChanging(value As Integer)
    End Sub
    Partial Private Sub OnCBT_IDBatchChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnTPM_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTPM_IDChanged()
    End Sub
    Partial Private Sub OnCBT_VolumeBatchChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCBT_VolumeBatchChanged()
    End Sub
    Partial Private Sub OnCBT_QtdPacotesChanging(value As Integer)
    End Sub
    Partial Private Sub OnCBT_QtdPacotesChanged()
    End Sub
    Partial Private Sub OnCBT_DataSolicitacaoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCBT_DataSolicitacaoChanged()
    End Sub
    Partial Private Sub OnCBT_UsuarioSolicitacaoChanging(value As String)
    End Sub
    Partial Private Sub OnCBT_UsuarioSolicitacaoChanged()
    End Sub
    Partial Private Sub OnCBT_DataInicioBatchChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCBT_DataInicioBatchChanged()
    End Sub
    Partial Private Sub OnCBT_DataFimBatchChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCBT_DataFimBatchChanged()
    End Sub
    Partial Private Sub OnCBT_UsuarioOperadorChanging(value As String)
    End Sub
    Partial Private Sub OnCBT_UsuarioOperadorChanged()
    End Sub
    Partial Private Sub OnCBT_FinalizadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCBT_FinalizadoChanged()
    End Sub
    Partial Private Sub OnCBT_ExcluidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCBT_ExcluidoChanged()
    End Sub
    Partial Private Sub OnCBT_TanqueChanging(value As String)
    End Sub
    Partial Private Sub OnCBT_TanqueChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBT_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property CBT_ID() As Integer
			Get
				Return Me._CBT_ID
			End Get
			Set
				If ((Me._CBT_ID = value)  _
							= false) Then
					Me.OnCBT_IDChanging(value)
					Me.SendPropertyChanging
					Me._CBT_ID = value
					Me.SendPropertyChanged("CBT_ID")
					Me.OnCBT_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBT_IDBatch", DbType:="Int NOT NULL")>  _
		Public Property CBT_IDBatch() As Integer
			Get
				Return Me._CBT_IDBatch
			End Get
			Set
				If ((Me._CBT_IDBatch = value)  _
							= false) Then
					Me.OnCBT_IDBatchChanging(value)
					Me.SendPropertyChanging
					Me._CBT_IDBatch = value
					Me.SendPropertyChanged("CBT_IDBatch")
					Me.OnCBT_IDBatchChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int NOT NULL")>  _
		Public Property RecNum() As Integer
			Get
				Return Me._RecNum
			End Get
			Set
				If ((Me._RecNum = value)  _
							= false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TPM_ID", DbType:="Int NOT NULL")>  _
		Public Property TPM_ID() As Integer
			Get
				Return Me._TPM_ID
			End Get
			Set
				If ((Me._TPM_ID = value)  _
							= false) Then
					Me.OnTPM_IDChanging(value)
					Me.SendPropertyChanging
					Me._TPM_ID = value
					Me.SendPropertyChanged("TPM_ID")
					Me.OnTPM_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBT_VolumeBatch", DbType:="Int")>  _
		Public Property CBT_VolumeBatch() As System.Nullable(Of Integer)
			Get
				Return Me._CBT_VolumeBatch
			End Get
			Set
				If (Me._CBT_VolumeBatch.Equals(value) = false) Then
					Me.OnCBT_VolumeBatchChanging(value)
					Me.SendPropertyChanging
					Me._CBT_VolumeBatch = value
					Me.SendPropertyChanged("CBT_VolumeBatch")
					Me.OnCBT_VolumeBatchChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBT_QtdPacotes", DbType:="Int NOT NULL")>  _
		Public Property CBT_QtdPacotes() As Integer
			Get
				Return Me._CBT_QtdPacotes
			End Get
			Set
				If ((Me._CBT_QtdPacotes = value)  _
							= false) Then
					Me.OnCBT_QtdPacotesChanging(value)
					Me.SendPropertyChanging
					Me._CBT_QtdPacotes = value
					Me.SendPropertyChanged("CBT_QtdPacotes")
					Me.OnCBT_QtdPacotesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBT_DataSolicitacao", DbType:="DateTime2")>  _
		Public Property CBT_DataSolicitacao() As System.Nullable(Of Date)
			Get
				Return Me._CBT_DataSolicitacao
			End Get
			Set
				If (Me._CBT_DataSolicitacao.Equals(value) = false) Then
					Me.OnCBT_DataSolicitacaoChanging(value)
					Me.SendPropertyChanging
					Me._CBT_DataSolicitacao = value
					Me.SendPropertyChanged("CBT_DataSolicitacao")
					Me.OnCBT_DataSolicitacaoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBT_UsuarioSolicitacao", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property CBT_UsuarioSolicitacao() As String
			Get
				Return Me._CBT_UsuarioSolicitacao
			End Get
			Set
				If (String.Equals(Me._CBT_UsuarioSolicitacao, value) = false) Then
					Me.OnCBT_UsuarioSolicitacaoChanging(value)
					Me.SendPropertyChanging
					Me._CBT_UsuarioSolicitacao = value
					Me.SendPropertyChanged("CBT_UsuarioSolicitacao")
					Me.OnCBT_UsuarioSolicitacaoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBT_DataInicioBatch", DbType:="DateTime2")>  _
		Public Property CBT_DataInicioBatch() As System.Nullable(Of Date)
			Get
				Return Me._CBT_DataInicioBatch
			End Get
			Set
				If (Me._CBT_DataInicioBatch.Equals(value) = false) Then
					Me.OnCBT_DataInicioBatchChanging(value)
					Me.SendPropertyChanging
					Me._CBT_DataInicioBatch = value
					Me.SendPropertyChanged("CBT_DataInicioBatch")
					Me.OnCBT_DataInicioBatchChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBT_DataFimBatch", DbType:="DateTime2")>  _
		Public Property CBT_DataFimBatch() As System.Nullable(Of Date)
			Get
				Return Me._CBT_DataFimBatch
			End Get
			Set
				If (Me._CBT_DataFimBatch.Equals(value) = false) Then
					Me.OnCBT_DataFimBatchChanging(value)
					Me.SendPropertyChanging
					Me._CBT_DataFimBatch = value
					Me.SendPropertyChanged("CBT_DataFimBatch")
					Me.OnCBT_DataFimBatchChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBT_UsuarioOperador", DbType:="NVarChar(50)")>  _
		Public Property CBT_UsuarioOperador() As String
			Get
				Return Me._CBT_UsuarioOperador
			End Get
			Set
				If (String.Equals(Me._CBT_UsuarioOperador, value) = false) Then
					Me.OnCBT_UsuarioOperadorChanging(value)
					Me.SendPropertyChanging
					Me._CBT_UsuarioOperador = value
					Me.SendPropertyChanged("CBT_UsuarioOperador")
					Me.OnCBT_UsuarioOperadorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBT_Finalizado", DbType:="Bit NOT NULL")>  _
		Public Property CBT_Finalizado() As Boolean
			Get
				Return Me._CBT_Finalizado
			End Get
			Set
				If ((Me._CBT_Finalizado = value)  _
							= false) Then
					Me.OnCBT_FinalizadoChanging(value)
					Me.SendPropertyChanging
					Me._CBT_Finalizado = value
					Me.SendPropertyChanged("CBT_Finalizado")
					Me.OnCBT_FinalizadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBT_Excluido", DbType:="Bit NOT NULL")>  _
		Public Property CBT_Excluido() As Boolean
			Get
				Return Me._CBT_Excluido
			End Get
			Set
				If ((Me._CBT_Excluido = value)  _
							= false) Then
					Me.OnCBT_ExcluidoChanging(value)
					Me.SendPropertyChanging
					Me._CBT_Excluido = value
					Me.SendPropertyChanged("CBT_Excluido")
					Me.OnCBT_ExcluidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBT_Tanque", DbType:="NVarChar(50)")>  _
		Public Property CBT_Tanque() As String
			Get
				Return Me._CBT_Tanque
			End Get
			Set
				If (String.Equals(Me._CBT_Tanque, value) = false) Then
					Me.OnCBT_TanqueChanging(value)
					Me.SendPropertyChanging
					Me._CBT_Tanque = value
					Me.SendPropertyChanged("CBT_Tanque")
					Me.OnCBT_TanqueChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_CPI_CadastroPequenoIngrediente")>  _
	Partial Public Class tb_CPI_CadastroPequenoIngrediente
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CPI_ID As Integer
		
		Private _CPI_IDBlend As Integer
		
		Private _RecNum As Integer
		
		Private _CPI_VolumeBatch As Double
		
		Private _CPI_QtdPacotes As Integer
		
		Private _CPI_SeqPequenoIngr As Integer
		
		Private _CPI_DataSolicitacao As System.Nullable(Of Date)
		
		Private _CPI_UsuarioSolicitacao As String
		
		Private _CPI_DataInicioBlend As System.Nullable(Of Date)
		
		Private _CPI_DataFimBlend As System.Nullable(Of Date)
		
		Private _CPI_UsuarioOperador As String
		
		Private _CPI_Finalizado As Boolean
		
		Private _CPI_Excluido As Boolean
		
		Private _CPI_Tanque As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCPI_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCPI_IDChanged()
    End Sub
    Partial Private Sub OnCPI_IDBlendChanging(value As Integer)
    End Sub
    Partial Private Sub OnCPI_IDBlendChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnCPI_VolumeBatchChanging(value As Double)
    End Sub
    Partial Private Sub OnCPI_VolumeBatchChanged()
    End Sub
    Partial Private Sub OnCPI_QtdPacotesChanging(value As Integer)
    End Sub
    Partial Private Sub OnCPI_QtdPacotesChanged()
    End Sub
    Partial Private Sub OnCPI_SeqPequenoIngrChanging(value As Integer)
    End Sub
    Partial Private Sub OnCPI_SeqPequenoIngrChanged()
    End Sub
    Partial Private Sub OnCPI_DataSolicitacaoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCPI_DataSolicitacaoChanged()
    End Sub
    Partial Private Sub OnCPI_UsuarioSolicitacaoChanging(value As String)
    End Sub
    Partial Private Sub OnCPI_UsuarioSolicitacaoChanged()
    End Sub
    Partial Private Sub OnCPI_DataInicioBlendChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCPI_DataInicioBlendChanged()
    End Sub
    Partial Private Sub OnCPI_DataFimBlendChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCPI_DataFimBlendChanged()
    End Sub
    Partial Private Sub OnCPI_UsuarioOperadorChanging(value As String)
    End Sub
    Partial Private Sub OnCPI_UsuarioOperadorChanged()
    End Sub
    Partial Private Sub OnCPI_FinalizadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCPI_FinalizadoChanged()
    End Sub
    Partial Private Sub OnCPI_ExcluidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCPI_ExcluidoChanged()
    End Sub
    Partial Private Sub OnCPI_TanqueChanging(value As String)
    End Sub
    Partial Private Sub OnCPI_TanqueChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPI_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property CPI_ID() As Integer
			Get
				Return Me._CPI_ID
			End Get
			Set
				If ((Me._CPI_ID = value)  _
							= false) Then
					Me.OnCPI_IDChanging(value)
					Me.SendPropertyChanging
					Me._CPI_ID = value
					Me.SendPropertyChanged("CPI_ID")
					Me.OnCPI_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPI_IDBlend", DbType:="Int NOT NULL")>  _
		Public Property CPI_IDBlend() As Integer
			Get
				Return Me._CPI_IDBlend
			End Get
			Set
				If ((Me._CPI_IDBlend = value)  _
							= false) Then
					Me.OnCPI_IDBlendChanging(value)
					Me.SendPropertyChanging
					Me._CPI_IDBlend = value
					Me.SendPropertyChanged("CPI_IDBlend")
					Me.OnCPI_IDBlendChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int NOT NULL")>  _
		Public Property RecNum() As Integer
			Get
				Return Me._RecNum
			End Get
			Set
				If ((Me._RecNum = value)  _
							= false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPI_VolumeBatch", DbType:="Float NOT NULL")>  _
		Public Property CPI_VolumeBatch() As Double
			Get
				Return Me._CPI_VolumeBatch
			End Get
			Set
				If ((Me._CPI_VolumeBatch = value)  _
							= false) Then
					Me.OnCPI_VolumeBatchChanging(value)
					Me.SendPropertyChanging
					Me._CPI_VolumeBatch = value
					Me.SendPropertyChanged("CPI_VolumeBatch")
					Me.OnCPI_VolumeBatchChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPI_QtdPacotes", DbType:="Int NOT NULL")>  _
		Public Property CPI_QtdPacotes() As Integer
			Get
				Return Me._CPI_QtdPacotes
			End Get
			Set
				If ((Me._CPI_QtdPacotes = value)  _
							= false) Then
					Me.OnCPI_QtdPacotesChanging(value)
					Me.SendPropertyChanging
					Me._CPI_QtdPacotes = value
					Me.SendPropertyChanged("CPI_QtdPacotes")
					Me.OnCPI_QtdPacotesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPI_SeqPequenoIngr", DbType:="Int NOT NULL")>  _
		Public Property CPI_SeqPequenoIngr() As Integer
			Get
				Return Me._CPI_SeqPequenoIngr
			End Get
			Set
				If ((Me._CPI_SeqPequenoIngr = value)  _
							= false) Then
					Me.OnCPI_SeqPequenoIngrChanging(value)
					Me.SendPropertyChanging
					Me._CPI_SeqPequenoIngr = value
					Me.SendPropertyChanged("CPI_SeqPequenoIngr")
					Me.OnCPI_SeqPequenoIngrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPI_DataSolicitacao", DbType:="DateTime2")>  _
		Public Property CPI_DataSolicitacao() As System.Nullable(Of Date)
			Get
				Return Me._CPI_DataSolicitacao
			End Get
			Set
				If (Me._CPI_DataSolicitacao.Equals(value) = false) Then
					Me.OnCPI_DataSolicitacaoChanging(value)
					Me.SendPropertyChanging
					Me._CPI_DataSolicitacao = value
					Me.SendPropertyChanged("CPI_DataSolicitacao")
					Me.OnCPI_DataSolicitacaoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPI_UsuarioSolicitacao", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property CPI_UsuarioSolicitacao() As String
			Get
				Return Me._CPI_UsuarioSolicitacao
			End Get
			Set
				If (String.Equals(Me._CPI_UsuarioSolicitacao, value) = false) Then
					Me.OnCPI_UsuarioSolicitacaoChanging(value)
					Me.SendPropertyChanging
					Me._CPI_UsuarioSolicitacao = value
					Me.SendPropertyChanged("CPI_UsuarioSolicitacao")
					Me.OnCPI_UsuarioSolicitacaoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPI_DataInicioBlend", DbType:="DateTime2")>  _
		Public Property CPI_DataInicioBlend() As System.Nullable(Of Date)
			Get
				Return Me._CPI_DataInicioBlend
			End Get
			Set
				If (Me._CPI_DataInicioBlend.Equals(value) = false) Then
					Me.OnCPI_DataInicioBlendChanging(value)
					Me.SendPropertyChanging
					Me._CPI_DataInicioBlend = value
					Me.SendPropertyChanged("CPI_DataInicioBlend")
					Me.OnCPI_DataInicioBlendChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPI_DataFimBlend", DbType:="DateTime2")>  _
		Public Property CPI_DataFimBlend() As System.Nullable(Of Date)
			Get
				Return Me._CPI_DataFimBlend
			End Get
			Set
				If (Me._CPI_DataFimBlend.Equals(value) = false) Then
					Me.OnCPI_DataFimBlendChanging(value)
					Me.SendPropertyChanging
					Me._CPI_DataFimBlend = value
					Me.SendPropertyChanged("CPI_DataFimBlend")
					Me.OnCPI_DataFimBlendChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPI_UsuarioOperador", DbType:="NVarChar(50)")>  _
		Public Property CPI_UsuarioOperador() As String
			Get
				Return Me._CPI_UsuarioOperador
			End Get
			Set
				If (String.Equals(Me._CPI_UsuarioOperador, value) = false) Then
					Me.OnCPI_UsuarioOperadorChanging(value)
					Me.SendPropertyChanging
					Me._CPI_UsuarioOperador = value
					Me.SendPropertyChanged("CPI_UsuarioOperador")
					Me.OnCPI_UsuarioOperadorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPI_Finalizado", DbType:="Bit NOT NULL")>  _
		Public Property CPI_Finalizado() As Boolean
			Get
				Return Me._CPI_Finalizado
			End Get
			Set
				If ((Me._CPI_Finalizado = value)  _
							= false) Then
					Me.OnCPI_FinalizadoChanging(value)
					Me.SendPropertyChanging
					Me._CPI_Finalizado = value
					Me.SendPropertyChanged("CPI_Finalizado")
					Me.OnCPI_FinalizadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPI_Excluido", DbType:="Bit NOT NULL")>  _
		Public Property CPI_Excluido() As Boolean
			Get
				Return Me._CPI_Excluido
			End Get
			Set
				If ((Me._CPI_Excluido = value)  _
							= false) Then
					Me.OnCPI_ExcluidoChanging(value)
					Me.SendPropertyChanging
					Me._CPI_Excluido = value
					Me.SendPropertyChanged("CPI_Excluido")
					Me.OnCPI_ExcluidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CPI_Tanque", DbType:="NVarChar(50)")>  _
		Public Property CPI_Tanque() As String
			Get
				Return Me._CPI_Tanque
			End Get
			Set
				If (String.Equals(Me._CPI_Tanque, value) = false) Then
					Me.OnCPI_TanqueChanging(value)
					Me.SendPropertyChanging
					Me._CPI_Tanque = value
					Me.SendPropertyChanged("CPI_Tanque")
					Me.OnCPI_TanqueChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_CBM_CadastroBatchMaturacao")>  _
	Partial Public Class tb_CBM_CadastroBatchMaturacao
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CBM_ID As Integer
		
		Private _CBM_IDBatch As Integer
		
		Private _RecNum As Integer
		
		Private _CBM_Densidade As Double
		
		Private _CBM_VolumeBatch As System.Nullable(Of Double)
		
		Private _CBM_VolumeFinal As System.Nullable(Of Double)
		
		Private _CBM_Solidos As System.Nullable(Of Double)
		
		Private _CBM_Gordura As System.Nullable(Of Double)
		
		Private _CBM_Remonte As System.Nullable(Of Double)
		
		Private _CBM_PH As System.Nullable(Of Double)
		
		Private _CBM_Reprocesso As System.Nullable(Of Double)
		
		Private _CBM_QtdPacotes As System.Nullable(Of Integer)
		
		Private _CBM_DataSolicitacao As System.Nullable(Of Date)
		
		Private _CBM_UsuarioSolicitacao As String
		
		Private _CBM_DataInicioBatch As System.Nullable(Of Date)
		
		Private _CBM_DataFimBatch As System.Nullable(Of Date)
		
		Private _CBM_UsuarioOperador As String
		
		Private _CBM_Finalizado As Boolean
		
		Private _CBM_Excluido As Boolean
		
		Private _CBM_Tanque As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCBM_IDChanging(value As Integer)
    End Sub
    Partial Private Sub OnCBM_IDChanged()
    End Sub
    Partial Private Sub OnCBM_IDBatchChanging(value As Integer)
    End Sub
    Partial Private Sub OnCBM_IDBatchChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnCBM_DensidadeChanging(value As Double)
    End Sub
    Partial Private Sub OnCBM_DensidadeChanged()
    End Sub
    Partial Private Sub OnCBM_VolumeBatchChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCBM_VolumeBatchChanged()
    End Sub
    Partial Private Sub OnCBM_VolumeFinalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCBM_VolumeFinalChanged()
    End Sub
    Partial Private Sub OnCBM_SolidosChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCBM_SolidosChanged()
    End Sub
    Partial Private Sub OnCBM_GorduraChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCBM_GorduraChanged()
    End Sub
    Partial Private Sub OnCBM_RemonteChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCBM_RemonteChanged()
    End Sub
    Partial Private Sub OnCBM_PHChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCBM_PHChanged()
    End Sub
    Partial Private Sub OnCBM_ReprocessoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCBM_ReprocessoChanged()
    End Sub
    Partial Private Sub OnCBM_QtdPacotesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCBM_QtdPacotesChanged()
    End Sub
    Partial Private Sub OnCBM_DataSolicitacaoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCBM_DataSolicitacaoChanged()
    End Sub
    Partial Private Sub OnCBM_UsuarioSolicitacaoChanging(value As String)
    End Sub
    Partial Private Sub OnCBM_UsuarioSolicitacaoChanged()
    End Sub
    Partial Private Sub OnCBM_DataInicioBatchChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCBM_DataInicioBatchChanged()
    End Sub
    Partial Private Sub OnCBM_DataFimBatchChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnCBM_DataFimBatchChanged()
    End Sub
    Partial Private Sub OnCBM_UsuarioOperadorChanging(value As String)
    End Sub
    Partial Private Sub OnCBM_UsuarioOperadorChanged()
    End Sub
    Partial Private Sub OnCBM_FinalizadoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCBM_FinalizadoChanged()
    End Sub
    Partial Private Sub OnCBM_ExcluidoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnCBM_ExcluidoChanged()
    End Sub
    Partial Private Sub OnCBM_TanqueChanging(value As String)
    End Sub
    Partial Private Sub OnCBM_TanqueChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property CBM_ID() As Integer
			Get
				Return Me._CBM_ID
			End Get
			Set
				If ((Me._CBM_ID = value)  _
							= false) Then
					Me.OnCBM_IDChanging(value)
					Me.SendPropertyChanging
					Me._CBM_ID = value
					Me.SendPropertyChanged("CBM_ID")
					Me.OnCBM_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_IDBatch", DbType:="Int NOT NULL")>  _
		Public Property CBM_IDBatch() As Integer
			Get
				Return Me._CBM_IDBatch
			End Get
			Set
				If ((Me._CBM_IDBatch = value)  _
							= false) Then
					Me.OnCBM_IDBatchChanging(value)
					Me.SendPropertyChanging
					Me._CBM_IDBatch = value
					Me.SendPropertyChanged("CBM_IDBatch")
					Me.OnCBM_IDBatchChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int NOT NULL")>  _
		Public Property RecNum() As Integer
			Get
				Return Me._RecNum
			End Get
			Set
				If ((Me._RecNum = value)  _
							= false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_Densidade", DbType:="Float NOT NULL")>  _
		Public Property CBM_Densidade() As Double
			Get
				Return Me._CBM_Densidade
			End Get
			Set
				If ((Me._CBM_Densidade = value)  _
							= false) Then
					Me.OnCBM_DensidadeChanging(value)
					Me.SendPropertyChanging
					Me._CBM_Densidade = value
					Me.SendPropertyChanged("CBM_Densidade")
					Me.OnCBM_DensidadeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_VolumeBatch", DbType:="Float")>  _
		Public Property CBM_VolumeBatch() As System.Nullable(Of Double)
			Get
				Return Me._CBM_VolumeBatch
			End Get
			Set
				If (Me._CBM_VolumeBatch.Equals(value) = false) Then
					Me.OnCBM_VolumeBatchChanging(value)
					Me.SendPropertyChanging
					Me._CBM_VolumeBatch = value
					Me.SendPropertyChanged("CBM_VolumeBatch")
					Me.OnCBM_VolumeBatchChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_VolumeFinal", DbType:="Float")>  _
		Public Property CBM_VolumeFinal() As System.Nullable(Of Double)
			Get
				Return Me._CBM_VolumeFinal
			End Get
			Set
				If (Me._CBM_VolumeFinal.Equals(value) = false) Then
					Me.OnCBM_VolumeFinalChanging(value)
					Me.SendPropertyChanging
					Me._CBM_VolumeFinal = value
					Me.SendPropertyChanged("CBM_VolumeFinal")
					Me.OnCBM_VolumeFinalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_Solidos", DbType:="Float")>  _
		Public Property CBM_Solidos() As System.Nullable(Of Double)
			Get
				Return Me._CBM_Solidos
			End Get
			Set
				If (Me._CBM_Solidos.Equals(value) = false) Then
					Me.OnCBM_SolidosChanging(value)
					Me.SendPropertyChanging
					Me._CBM_Solidos = value
					Me.SendPropertyChanged("CBM_Solidos")
					Me.OnCBM_SolidosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_Gordura", DbType:="Float")>  _
		Public Property CBM_Gordura() As System.Nullable(Of Double)
			Get
				Return Me._CBM_Gordura
			End Get
			Set
				If (Me._CBM_Gordura.Equals(value) = false) Then
					Me.OnCBM_GorduraChanging(value)
					Me.SendPropertyChanging
					Me._CBM_Gordura = value
					Me.SendPropertyChanged("CBM_Gordura")
					Me.OnCBM_GorduraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_Remonte", DbType:="Float")>  _
		Public Property CBM_Remonte() As System.Nullable(Of Double)
			Get
				Return Me._CBM_Remonte
			End Get
			Set
				If (Me._CBM_Remonte.Equals(value) = false) Then
					Me.OnCBM_RemonteChanging(value)
					Me.SendPropertyChanging
					Me._CBM_Remonte = value
					Me.SendPropertyChanged("CBM_Remonte")
					Me.OnCBM_RemonteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_PH", DbType:="Float")>  _
		Public Property CBM_PH() As System.Nullable(Of Double)
			Get
				Return Me._CBM_PH
			End Get
			Set
				If (Me._CBM_PH.Equals(value) = false) Then
					Me.OnCBM_PHChanging(value)
					Me.SendPropertyChanging
					Me._CBM_PH = value
					Me.SendPropertyChanged("CBM_PH")
					Me.OnCBM_PHChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_Reprocesso", DbType:="Float")>  _
		Public Property CBM_Reprocesso() As System.Nullable(Of Double)
			Get
				Return Me._CBM_Reprocesso
			End Get
			Set
				If (Me._CBM_Reprocesso.Equals(value) = false) Then
					Me.OnCBM_ReprocessoChanging(value)
					Me.SendPropertyChanging
					Me._CBM_Reprocesso = value
					Me.SendPropertyChanged("CBM_Reprocesso")
					Me.OnCBM_ReprocessoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_QtdPacotes", DbType:="Int")>  _
		Public Property CBM_QtdPacotes() As System.Nullable(Of Integer)
			Get
				Return Me._CBM_QtdPacotes
			End Get
			Set
				If (Me._CBM_QtdPacotes.Equals(value) = false) Then
					Me.OnCBM_QtdPacotesChanging(value)
					Me.SendPropertyChanging
					Me._CBM_QtdPacotes = value
					Me.SendPropertyChanged("CBM_QtdPacotes")
					Me.OnCBM_QtdPacotesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_DataSolicitacao", DbType:="DateTime2")>  _
		Public Property CBM_DataSolicitacao() As System.Nullable(Of Date)
			Get
				Return Me._CBM_DataSolicitacao
			End Get
			Set
				If (Me._CBM_DataSolicitacao.Equals(value) = false) Then
					Me.OnCBM_DataSolicitacaoChanging(value)
					Me.SendPropertyChanging
					Me._CBM_DataSolicitacao = value
					Me.SendPropertyChanged("CBM_DataSolicitacao")
					Me.OnCBM_DataSolicitacaoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_UsuarioSolicitacao", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property CBM_UsuarioSolicitacao() As String
			Get
				Return Me._CBM_UsuarioSolicitacao
			End Get
			Set
				If (String.Equals(Me._CBM_UsuarioSolicitacao, value) = false) Then
					Me.OnCBM_UsuarioSolicitacaoChanging(value)
					Me.SendPropertyChanging
					Me._CBM_UsuarioSolicitacao = value
					Me.SendPropertyChanged("CBM_UsuarioSolicitacao")
					Me.OnCBM_UsuarioSolicitacaoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_DataInicioBatch", DbType:="DateTime2")>  _
		Public Property CBM_DataInicioBatch() As System.Nullable(Of Date)
			Get
				Return Me._CBM_DataInicioBatch
			End Get
			Set
				If (Me._CBM_DataInicioBatch.Equals(value) = false) Then
					Me.OnCBM_DataInicioBatchChanging(value)
					Me.SendPropertyChanging
					Me._CBM_DataInicioBatch = value
					Me.SendPropertyChanged("CBM_DataInicioBatch")
					Me.OnCBM_DataInicioBatchChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_DataFimBatch", DbType:="DateTime2")>  _
		Public Property CBM_DataFimBatch() As System.Nullable(Of Date)
			Get
				Return Me._CBM_DataFimBatch
			End Get
			Set
				If (Me._CBM_DataFimBatch.Equals(value) = false) Then
					Me.OnCBM_DataFimBatchChanging(value)
					Me.SendPropertyChanging
					Me._CBM_DataFimBatch = value
					Me.SendPropertyChanged("CBM_DataFimBatch")
					Me.OnCBM_DataFimBatchChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_UsuarioOperador", DbType:="NVarChar(50)")>  _
		Public Property CBM_UsuarioOperador() As String
			Get
				Return Me._CBM_UsuarioOperador
			End Get
			Set
				If (String.Equals(Me._CBM_UsuarioOperador, value) = false) Then
					Me.OnCBM_UsuarioOperadorChanging(value)
					Me.SendPropertyChanging
					Me._CBM_UsuarioOperador = value
					Me.SendPropertyChanged("CBM_UsuarioOperador")
					Me.OnCBM_UsuarioOperadorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_Finalizado", DbType:="Bit NOT NULL")>  _
		Public Property CBM_Finalizado() As Boolean
			Get
				Return Me._CBM_Finalizado
			End Get
			Set
				If ((Me._CBM_Finalizado = value)  _
							= false) Then
					Me.OnCBM_FinalizadoChanging(value)
					Me.SendPropertyChanging
					Me._CBM_Finalizado = value
					Me.SendPropertyChanged("CBM_Finalizado")
					Me.OnCBM_FinalizadoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_Excluido", DbType:="Bit NOT NULL")>  _
		Public Property CBM_Excluido() As Boolean
			Get
				Return Me._CBM_Excluido
			End Get
			Set
				If ((Me._CBM_Excluido = value)  _
							= false) Then
					Me.OnCBM_ExcluidoChanging(value)
					Me.SendPropertyChanging
					Me._CBM_Excluido = value
					Me.SendPropertyChanged("CBM_Excluido")
					Me.OnCBM_ExcluidoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CBM_Tanque", DbType:="NVarChar(50)")>  _
		Public Property CBM_Tanque() As String
			Get
				Return Me._CBM_Tanque
			End Get
			Set
				If (String.Equals(Me._CBM_Tanque, value) = false) Then
					Me.OnCBM_TanqueChanging(value)
					Me.SendPropertyChanging
					Me._CBM_Tanque = value
					Me.SendPropertyChanged("CBM_Tanque")
					Me.OnCBM_TanqueChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Ingred")>  _
	Partial Public Class Ingred
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As Integer
		
		Private _Area As String
		
		Private _IngrCodigo As String
		
		Private _IngrNome As String
		
		Private _IngrPesar As Boolean
		
		Private _IngrMultiplaPesagem As System.Nullable(Of Boolean)
		
		Private _IngrPct25 As System.Nullable(Of Boolean)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnIngrCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnIngrCodigoChanged()
    End Sub
    Partial Private Sub OnIngrNomeChanging(value As String)
    End Sub
    Partial Private Sub OnIngrNomeChanged()
    End Sub
    Partial Private Sub OnIngrPesarChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIngrPesarChanged()
    End Sub
    Partial Private Sub OnIngrMultiplaPesagemChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIngrMultiplaPesagemChanged()
    End Sub
    Partial Private Sub OnIngrPct25Changing(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIngrPct25Changed()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property ID() As Integer
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngrCodigo", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property IngrCodigo() As String
			Get
				Return Me._IngrCodigo
			End Get
			Set
				If (String.Equals(Me._IngrCodigo, value) = false) Then
					Me.OnIngrCodigoChanging(value)
					Me.SendPropertyChanging
					Me._IngrCodigo = value
					Me.SendPropertyChanged("IngrCodigo")
					Me.OnIngrCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngrNome", DbType:="NVarChar(40)")>  _
		Public Property IngrNome() As String
			Get
				Return Me._IngrNome
			End Get
			Set
				If (String.Equals(Me._IngrNome, value) = false) Then
					Me.OnIngrNomeChanging(value)
					Me.SendPropertyChanging
					Me._IngrNome = value
					Me.SendPropertyChanged("IngrNome")
					Me.OnIngrNomeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngrPesar", DbType:="Bit NOT NULL")>  _
		Public Property IngrPesar() As Boolean
			Get
				Return Me._IngrPesar
			End Get
			Set
				If ((Me._IngrPesar = value)  _
							= false) Then
					Me.OnIngrPesarChanging(value)
					Me.SendPropertyChanging
					Me._IngrPesar = value
					Me.SendPropertyChanged("IngrPesar")
					Me.OnIngrPesarChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngrMultiplaPesagem", DbType:="Bit")>  _
		Public Property IngrMultiplaPesagem() As System.Nullable(Of Boolean)
			Get
				Return Me._IngrMultiplaPesagem
			End Get
			Set
				If (Me._IngrMultiplaPesagem.Equals(value) = false) Then
					Me.OnIngrMultiplaPesagemChanging(value)
					Me.SendPropertyChanging
					Me._IngrMultiplaPesagem = value
					Me.SendPropertyChanged("IngrMultiplaPesagem")
					Me.OnIngrMultiplaPesagemChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngrPct25", DbType:="Bit")>  _
		Public Property IngrPct25() As System.Nullable(Of Boolean)
			Get
				Return Me._IngrPct25
			End Get
			Set
				If (Me._IngrPct25.Equals(value) = false) Then
					Me.OnIngrPct25Changing(value)
					Me.SendPropertyChanging
					Me._IngrPct25 = value
					Me.SendPropertyChanged("IngrPct25")
					Me.OnIngrPct25Changed
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tb_CTL_ControleBatch")>  _
	Partial Public Class tb_CTL_ControleBatch
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ctl_ID As Decimal
		
		Private _ctl_Tanque As String
		
		Private _ctl_Batch As System.Nullable(Of Decimal)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onctl_IDChanging(value As Decimal)
    End Sub
    Partial Private Sub Onctl_IDChanged()
    End Sub
    Partial Private Sub Onctl_TanqueChanging(value As String)
    End Sub
    Partial Private Sub Onctl_TanqueChanged()
    End Sub
    Partial Private Sub Onctl_BatchChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onctl_BatchChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctl_ID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ctl_ID() As Decimal
			Get
				Return Me._ctl_ID
			End Get
			Set
				If ((Me._ctl_ID = value)  _
							= false) Then
					Me.Onctl_IDChanging(value)
					Me.SendPropertyChanging
					Me._ctl_ID = value
					Me.SendPropertyChanged("ctl_ID")
					Me.Onctl_IDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctl_Tanque", DbType:="NVarChar(50)")>  _
		Public Property ctl_Tanque() As String
			Get
				Return Me._ctl_Tanque
			End Get
			Set
				If (String.Equals(Me._ctl_Tanque, value) = false) Then
					Me.Onctl_TanqueChanging(value)
					Me.SendPropertyChanging
					Me._ctl_Tanque = value
					Me.SendPropertyChanged("ctl_Tanque")
					Me.Onctl_TanqueChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ctl_Batch", DbType:="Decimal(18,0)")>  _
		Public Property ctl_Batch() As System.Nullable(Of Decimal)
			Get
				Return Me._ctl_Batch
			End Get
			Set
				If (Me._ctl_Batch.Equals(value) = false) Then
					Me.Onctl_BatchChanging(value)
					Me.SendPropertyChanging
					Me._ctl_Batch = value
					Me.SendPropertyChanged("ctl_Batch")
					Me.Onctl_BatchChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
End Namespace
