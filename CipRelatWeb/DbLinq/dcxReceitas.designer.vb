'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace nsReceitas
	
	<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Receitas")>  _
	Partial Public Class dcReceitas
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertAreas(instance As Areas)
    End Sub
    Partial Private Sub UpdateAreas(instance As Areas)
    End Sub
    Partial Private Sub DeleteAreas(instance As Areas)
    End Sub
    Partial Private Sub InsertUsers(instance As Users)
    End Sub
    Partial Private Sub UpdateUsers(instance As Users)
    End Sub
    Partial Private Sub DeleteUsers(instance As Users)
    End Sub
    Partial Private Sub InsertBlocos(instance As Blocos)
    End Sub
    Partial Private Sub UpdateBlocos(instance As Blocos)
    End Sub
    Partial Private Sub DeleteBlocos(instance As Blocos)
    End Sub
    Partial Private Sub InsertBlocosItens(instance As BlocosItens)
    End Sub
    Partial Private Sub UpdateBlocosItens(instance As BlocosItens)
    End Sub
    Partial Private Sub DeleteBlocosItens(instance As BlocosItens)
    End Sub
    Partial Private Sub InsertCadAlergenicos(instance As CadAlergenicos)
    End Sub
    Partial Private Sub UpdateCadAlergenicos(instance As CadAlergenicos)
    End Sub
    Partial Private Sub DeleteCadAlergenicos(instance As CadAlergenicos)
    End Sub
    Partial Private Sub InsertConfigGeral(instance As ConfigGeral)
    End Sub
    Partial Private Sub UpdateConfigGeral(instance As ConfigGeral)
    End Sub
    Partial Private Sub DeleteConfigGeral(instance As ConfigGeral)
    End Sub
    Partial Private Sub InsertDestTqs(instance As DestTqs)
    End Sub
    Partial Private Sub UpdateDestTqs(instance As DestTqs)
    End Sub
    Partial Private Sub DeleteDestTqs(instance As DestTqs)
    End Sub
    Partial Private Sub InsertIngred(instance As Ingred)
    End Sub
    Partial Private Sub UpdateIngred(instance As Ingred)
    End Sub
    Partial Private Sub DeleteIngred(instance As Ingred)
    End Sub
    Partial Private Sub InsertRec(instance As Rec)
    End Sub
    Partial Private Sub UpdateRec(instance As Rec)
    End Sub
    Partial Private Sub DeleteRec(instance As Rec)
    End Sub
    Partial Private Sub InsertRecBlocos(instance As RecBlocos)
    End Sub
    Partial Private Sub UpdateRecBlocos(instance As RecBlocos)
    End Sub
    Partial Private Sub DeleteRecBlocos(instance As RecBlocos)
    End Sub
    Partial Private Sub InsertRecIngred(instance As RecIngred)
    End Sub
    Partial Private Sub UpdateRecIngred(instance As RecIngred)
    End Sub
    Partial Private Sub DeleteRecIngred(instance As RecIngred)
    End Sub
    Partial Private Sub InsertRecIngredMat(instance As RecIngredMat)
    End Sub
    Partial Private Sub UpdateRecIngredMat(instance As RecIngredMat)
    End Sub
    Partial Private Sub DeleteRecIngredMat(instance As RecIngredMat)
    End Sub
    Partial Private Sub InsertRecTeste(instance As RecTeste)
    End Sub
    Partial Private Sub UpdateRecTeste(instance As RecTeste)
    End Sub
    Partial Private Sub DeleteRecTeste(instance As RecTeste)
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("csReceitas").ConnectionString, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property Areas() As System.Data.Linq.Table(Of Areas)
			Get
				Return Me.GetTable(Of Areas)
			End Get
		End Property
		
		Public ReadOnly Property Users() As System.Data.Linq.Table(Of Users)
			Get
				Return Me.GetTable(Of Users)
			End Get
		End Property
		
		Public ReadOnly Property Blocos() As System.Data.Linq.Table(Of Blocos)
			Get
				Return Me.GetTable(Of Blocos)
			End Get
		End Property
		
		Public ReadOnly Property BlocosItens() As System.Data.Linq.Table(Of BlocosItens)
			Get
				Return Me.GetTable(Of BlocosItens)
			End Get
		End Property
		
		Public ReadOnly Property CadAlergenicos() As System.Data.Linq.Table(Of CadAlergenicos)
			Get
				Return Me.GetTable(Of CadAlergenicos)
			End Get
		End Property
		
		Public ReadOnly Property ConfigGeral() As System.Data.Linq.Table(Of ConfigGeral)
			Get
				Return Me.GetTable(Of ConfigGeral)
			End Get
		End Property
		
		Public ReadOnly Property DestTqs() As System.Data.Linq.Table(Of DestTqs)
			Get
				Return Me.GetTable(Of DestTqs)
			End Get
		End Property
		
		Public ReadOnly Property Ingred() As System.Data.Linq.Table(Of Ingred)
			Get
				Return Me.GetTable(Of Ingred)
			End Get
		End Property
		
		Public ReadOnly Property Rec() As System.Data.Linq.Table(Of Rec)
			Get
				Return Me.GetTable(Of Rec)
			End Get
		End Property
		
		Public ReadOnly Property RecBlocos() As System.Data.Linq.Table(Of RecBlocos)
			Get
				Return Me.GetTable(Of RecBlocos)
			End Get
		End Property
		
		Public ReadOnly Property RecIngred() As System.Data.Linq.Table(Of RecIngred)
			Get
				Return Me.GetTable(Of RecIngred)
			End Get
		End Property
		
		Public ReadOnly Property RecIngredMat() As System.Data.Linq.Table(Of RecIngredMat)
			Get
				Return Me.GetTable(Of RecIngredMat)
			End Get
		End Property
		
		Public ReadOnly Property RecTeste() As System.Data.Linq.Table(Of RecTeste)
			Get
				Return Me.GetTable(Of RecTeste)
			End Get
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Areas")>  _
	Partial Public Class Areas
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _Descr As String
		
		Private _UsaPlanejBrix As System.Nullable(Of Integer)
		
		Private _UsaIngredMan As System.Nullable(Of Integer)
		
		Private _UsaPesoRef As System.Nullable(Of Integer)
		
		Private _RsLinxTopic As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnDescrChanging(value As String)
    End Sub
    Partial Private Sub OnDescrChanged()
    End Sub
    Partial Private Sub OnUsaPlanejBrixChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUsaPlanejBrixChanged()
    End Sub
    Partial Private Sub OnUsaIngredManChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUsaIngredManChanged()
    End Sub
    Partial Private Sub OnUsaPesoRefChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUsaPesoRefChanged()
    End Sub
    Partial Private Sub OnRsLinxTopicChanging(value As String)
    End Sub
    Partial Private Sub OnRsLinxTopicChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descr", DbType:="NVarChar(80)")>  _
		Public Property Descr() As String
			Get
				Return Me._Descr
			End Get
			Set
				If (String.Equals(Me._Descr, value) = false) Then
					Me.OnDescrChanging(value)
					Me.SendPropertyChanging
					Me._Descr = value
					Me.SendPropertyChanged("Descr")
					Me.OnDescrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsaPlanejBrix", DbType:="Int")>  _
		Public Property UsaPlanejBrix() As System.Nullable(Of Integer)
			Get
				Return Me._UsaPlanejBrix
			End Get
			Set
				If (Me._UsaPlanejBrix.Equals(value) = false) Then
					Me.OnUsaPlanejBrixChanging(value)
					Me.SendPropertyChanging
					Me._UsaPlanejBrix = value
					Me.SendPropertyChanged("UsaPlanejBrix")
					Me.OnUsaPlanejBrixChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsaIngredMan", DbType:="Int")>  _
		Public Property UsaIngredMan() As System.Nullable(Of Integer)
			Get
				Return Me._UsaIngredMan
			End Get
			Set
				If (Me._UsaIngredMan.Equals(value) = false) Then
					Me.OnUsaIngredManChanging(value)
					Me.SendPropertyChanging
					Me._UsaIngredMan = value
					Me.SendPropertyChanged("UsaIngredMan")
					Me.OnUsaIngredManChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsaPesoRef", DbType:="Int")>  _
		Public Property UsaPesoRef() As System.Nullable(Of Integer)
			Get
				Return Me._UsaPesoRef
			End Get
			Set
				If (Me._UsaPesoRef.Equals(value) = false) Then
					Me.OnUsaPesoRefChanging(value)
					Me.SendPropertyChanging
					Me._UsaPesoRef = value
					Me.SendPropertyChanged("UsaPesoRef")
					Me.OnUsaPesoRefChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RsLinxTopic", DbType:="NVarChar(20)")>  _
		Public Property RsLinxTopic() As String
			Get
				Return Me._RsLinxTopic
			End Get
			Set
				If (String.Equals(Me._RsLinxTopic, value) = false) Then
					Me.OnRsLinxTopicChanging(value)
					Me.SendPropertyChanging
					Me._RsLinxTopic = value
					Me.SendPropertyChanged("RsLinxTopic")
					Me.OnRsLinxTopicChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Users")>  _
	Partial Public Class Users
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Login As String
		
		Private _Pwd As String
		
		Private _Area As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLoginChanging(value As String)
    End Sub
    Partial Private Sub OnLoginChanged()
    End Sub
    Partial Private Sub OnPwdChanging(value As String)
    End Sub
    Partial Private Sub OnPwdChanged()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Login", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Login() As String
			Get
				Return Me._Login
			End Get
			Set
				If (String.Equals(Me._Login, value) = false) Then
					Me.OnLoginChanging(value)
					Me.SendPropertyChanging
					Me._Login = value
					Me.SendPropertyChanged("Login")
					Me.OnLoginChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pwd", DbType:="NVarChar(50)")>  _
		Public Property Pwd() As String
			Get
				Return Me._Pwd
			End Get
			Set
				If (String.Equals(Me._Pwd, value) = false) Then
					Me.OnPwdChanging(value)
					Me.SendPropertyChanging
					Me._Pwd = value
					Me.SendPropertyChanged("Pwd")
					Me.OnPwdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(50)")>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Blocos")>  _
	Partial Public Class Blocos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _BlkNum As Integer
		
		Private _BlkDescr As String
		
		Private _Mnemonico As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnBlkNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnBlkNumChanged()
    End Sub
    Partial Private Sub OnBlkDescrChanging(value As String)
    End Sub
    Partial Private Sub OnBlkDescrChanged()
    End Sub
    Partial Private Sub OnMnemonicoChanging(value As String)
    End Sub
    Partial Private Sub OnMnemonicoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BlkNum", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property BlkNum() As Integer
			Get
				Return Me._BlkNum
			End Get
			Set
				If ((Me._BlkNum = value)  _
							= false) Then
					Me.OnBlkNumChanging(value)
					Me.SendPropertyChanging
					Me._BlkNum = value
					Me.SendPropertyChanged("BlkNum")
					Me.OnBlkNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BlkDescr", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property BlkDescr() As String
			Get
				Return Me._BlkDescr
			End Get
			Set
				If (String.Equals(Me._BlkDescr, value) = false) Then
					Me.OnBlkDescrChanging(value)
					Me.SendPropertyChanging
					Me._BlkDescr = value
					Me.SendPropertyChanged("BlkDescr")
					Me.OnBlkDescrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mnemonico", DbType:="NVarChar(20)")>  _
		Public Property Mnemonico() As String
			Get
				Return Me._Mnemonico
			End Get
			Set
				If (String.Equals(Me._Mnemonico, value) = false) Then
					Me.OnMnemonicoChanging(value)
					Me.SendPropertyChanging
					Me._Mnemonico = value
					Me.SendPropertyChanged("Mnemonico")
					Me.OnMnemonicoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BlocosItens")>  _
	Partial Public Class BlocosItens
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _BlkNum As Integer
		
		Private _ItemSeq As Integer
		
		Private _ItemDescr As String
		
		Private _UEng As String
		
		Private _ValorDefault As System.Nullable(Of Double)
		
		Private _Multiplic As System.Nullable(Of Double)
		
		Private _FlagPeso As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnBlkNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnBlkNumChanged()
    End Sub
    Partial Private Sub OnItemSeqChanging(value As Integer)
    End Sub
    Partial Private Sub OnItemSeqChanged()
    End Sub
    Partial Private Sub OnItemDescrChanging(value As String)
    End Sub
    Partial Private Sub OnItemDescrChanged()
    End Sub
    Partial Private Sub OnUEngChanging(value As String)
    End Sub
    Partial Private Sub OnUEngChanged()
    End Sub
    Partial Private Sub OnValorDefaultChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnValorDefaultChanged()
    End Sub
    Partial Private Sub OnMultiplicChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMultiplicChanged()
    End Sub
    Partial Private Sub OnFlagPesoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFlagPesoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BlkNum", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property BlkNum() As Integer
			Get
				Return Me._BlkNum
			End Get
			Set
				If ((Me._BlkNum = value)  _
							= false) Then
					Me.OnBlkNumChanging(value)
					Me.SendPropertyChanging
					Me._BlkNum = value
					Me.SendPropertyChanged("BlkNum")
					Me.OnBlkNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemSeq", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property ItemSeq() As Integer
			Get
				Return Me._ItemSeq
			End Get
			Set
				If ((Me._ItemSeq = value)  _
							= false) Then
					Me.OnItemSeqChanging(value)
					Me.SendPropertyChanging
					Me._ItemSeq = value
					Me.SendPropertyChanged("ItemSeq")
					Me.OnItemSeqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemDescr", DbType:="NVarChar(30)")>  _
		Public Property ItemDescr() As String
			Get
				Return Me._ItemDescr
			End Get
			Set
				If (String.Equals(Me._ItemDescr, value) = false) Then
					Me.OnItemDescrChanging(value)
					Me.SendPropertyChanging
					Me._ItemDescr = value
					Me.SendPropertyChanged("ItemDescr")
					Me.OnItemDescrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UEng", DbType:="NVarChar(10)")>  _
		Public Property UEng() As String
			Get
				Return Me._UEng
			End Get
			Set
				If (String.Equals(Me._UEng, value) = false) Then
					Me.OnUEngChanging(value)
					Me.SendPropertyChanging
					Me._UEng = value
					Me.SendPropertyChanged("UEng")
					Me.OnUEngChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValorDefault", DbType:="Float")>  _
		Public Property ValorDefault() As System.Nullable(Of Double)
			Get
				Return Me._ValorDefault
			End Get
			Set
				If (Me._ValorDefault.Equals(value) = false) Then
					Me.OnValorDefaultChanging(value)
					Me.SendPropertyChanging
					Me._ValorDefault = value
					Me.SendPropertyChanged("ValorDefault")
					Me.OnValorDefaultChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Multiplic", DbType:="Float")>  _
		Public Property Multiplic() As System.Nullable(Of Double)
			Get
				Return Me._Multiplic
			End Get
			Set
				If (Me._Multiplic.Equals(value) = false) Then
					Me.OnMultiplicChanging(value)
					Me.SendPropertyChanging
					Me._Multiplic = value
					Me.SendPropertyChanged("Multiplic")
					Me.OnMultiplicChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FlagPeso", DbType:="Int")>  _
		Public Property FlagPeso() As System.Nullable(Of Integer)
			Get
				Return Me._FlagPeso
			End Get
			Set
				If (Me._FlagPeso.Equals(value) = false) Then
					Me.OnFlagPesoChanging(value)
					Me.SendPropertyChanging
					Me._FlagPeso = value
					Me.SendPropertyChanged("FlagPeso")
					Me.OnFlagPesoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CadAlergenicos")>  _
	Partial Public Class CadAlergenicos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AlergId As Integer
		
		Private _Codigo As String
		
		Private _Hab175 As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAlergIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnAlergIdChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnHab175Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHab175Changed()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlergId", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property AlergId() As Integer
			Get
				Return Me._AlergId
			End Get
			Set
				If ((Me._AlergId = value)  _
							= false) Then
					Me.OnAlergIdChanging(value)
					Me.SendPropertyChanging
					Me._AlergId = value
					Me.SendPropertyChanged("AlergId")
					Me.OnAlergIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="NVarChar(50)")>  _
		Public Property Codigo() As String
			Get
				Return Me._Codigo
			End Get
			Set
				If (String.Equals(Me._Codigo, value) = false) Then
					Me.OnCodigoChanging(value)
					Me.SendPropertyChanging
					Me._Codigo = value
					Me.SendPropertyChanged("Codigo")
					Me.OnCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hab175", DbType:="Int")>  _
		Public Property Hab175() As System.Nullable(Of Integer)
			Get
				Return Me._Hab175
			End Get
			Set
				If (Me._Hab175.Equals(value) = false) Then
					Me.OnHab175Changing(value)
					Me.SendPropertyChanging
					Me._Hab175 = value
					Me.SendPropertyChanged("Hab175")
					Me.OnHab175Changed
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ConfigGeral")>  _
	Partial Public Class ConfigGeral
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Item As String
		
		Private _Valor As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnItemChanging(value As String)
    End Sub
    Partial Private Sub OnItemChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As String)
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Item", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Item() As String
			Get
				Return Me._Item
			End Get
			Set
				If (String.Equals(Me._Item, value) = false) Then
					Me.OnItemChanging(value)
					Me.SendPropertyChanging
					Me._Item = value
					Me.SendPropertyChanged("Item")
					Me.OnItemChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Valor", DbType:="NVarChar(50)")>  _
		Public Property Valor() As String
			Get
				Return Me._Valor
			End Get
			Set
				If (String.Equals(Me._Valor, value) = false) Then
					Me.OnValorChanging(value)
					Me.SendPropertyChanging
					Me._Valor = value
					Me.SendPropertyChanged("Valor")
					Me.OnValorChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DestTqs")>  _
	Partial Public Class DestTqs
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _TqNome As String
		
		Private _TqDescr As String
		
		Private _EndStatus As String
		
		Private _EndPlanejamento As String
		
		Private _EndProduzido As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnTqNomeChanging(value As String)
    End Sub
    Partial Private Sub OnTqNomeChanged()
    End Sub
    Partial Private Sub OnTqDescrChanging(value As String)
    End Sub
    Partial Private Sub OnTqDescrChanged()
    End Sub
    Partial Private Sub OnEndStatusChanging(value As String)
    End Sub
    Partial Private Sub OnEndStatusChanged()
    End Sub
    Partial Private Sub OnEndPlanejamentoChanging(value As String)
    End Sub
    Partial Private Sub OnEndPlanejamentoChanged()
    End Sub
    Partial Private Sub OnEndProduzidoChanging(value As String)
    End Sub
    Partial Private Sub OnEndProduzidoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TqNome", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property TqNome() As String
			Get
				Return Me._TqNome
			End Get
			Set
				If (String.Equals(Me._TqNome, value) = false) Then
					Me.OnTqNomeChanging(value)
					Me.SendPropertyChanging
					Me._TqNome = value
					Me.SendPropertyChanged("TqNome")
					Me.OnTqNomeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TqDescr", DbType:="NVarChar(50)")>  _
		Public Property TqDescr() As String
			Get
				Return Me._TqDescr
			End Get
			Set
				If (String.Equals(Me._TqDescr, value) = false) Then
					Me.OnTqDescrChanging(value)
					Me.SendPropertyChanging
					Me._TqDescr = value
					Me.SendPropertyChanged("TqDescr")
					Me.OnTqDescrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndStatus", DbType:="NVarChar(80)")>  _
		Public Property EndStatus() As String
			Get
				Return Me._EndStatus
			End Get
			Set
				If (String.Equals(Me._EndStatus, value) = false) Then
					Me.OnEndStatusChanging(value)
					Me.SendPropertyChanging
					Me._EndStatus = value
					Me.SendPropertyChanged("EndStatus")
					Me.OnEndStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndPlanejamento", DbType:="NVarChar(80)")>  _
		Public Property EndPlanejamento() As String
			Get
				Return Me._EndPlanejamento
			End Get
			Set
				If (String.Equals(Me._EndPlanejamento, value) = false) Then
					Me.OnEndPlanejamentoChanging(value)
					Me.SendPropertyChanging
					Me._EndPlanejamento = value
					Me.SendPropertyChanged("EndPlanejamento")
					Me.OnEndPlanejamentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndProduzido", DbType:="NVarChar(80)")>  _
		Public Property EndProduzido() As String
			Get
				Return Me._EndProduzido
			End Get
			Set
				If (String.Equals(Me._EndProduzido, value) = false) Then
					Me.OnEndProduzidoChanging(value)
					Me.SendPropertyChanging
					Me._EndProduzido = value
					Me.SendPropertyChanged("EndProduzido")
					Me.OnEndProduzidoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Ingred")>  _
	Partial Public Class Ingred
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _IngrCodigo As String
		
		Private _IngrNome As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnIngrCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnIngrCodigoChanged()
    End Sub
    Partial Private Sub OnIngrNomeChanging(value As String)
    End Sub
    Partial Private Sub OnIngrNomeChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngrCodigo", DbType:="NVarChar(6) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property IngrCodigo() As String
			Get
				Return Me._IngrCodigo
			End Get
			Set
				If (String.Equals(Me._IngrCodigo, value) = false) Then
					Me.OnIngrCodigoChanging(value)
					Me.SendPropertyChanging
					Me._IngrCodigo = value
					Me.SendPropertyChanged("IngrCodigo")
					Me.OnIngrCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngrNome", DbType:="NVarChar(20)")>  _
		Public Property IngrNome() As String
			Get
				Return Me._IngrNome
			End Get
			Set
				If (String.Equals(Me._IngrNome, value) = false) Then
					Me.OnIngrNomeChanging(value)
					Me.SendPropertyChanging
					Me._IngrNome = value
					Me.SendPropertyChanged("IngrNome")
					Me.OnIngrNomeChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Rec")>  _
	Partial Public Class Rec
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _RecNum As Integer
		
		Private _RecNome As String
		
		Private _RecDescr As String
		
		Private _Codigo As String
		
		Private _PesoRefer As System.Nullable(Of Double)
		
		Private _Pasta As String
		
		Private _Subpasta As String
		
		Private _Densidade As System.Nullable(Of Double)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnRecNomeChanging(value As String)
    End Sub
    Partial Private Sub OnRecNomeChanged()
    End Sub
    Partial Private Sub OnRecDescrChanging(value As String)
    End Sub
    Partial Private Sub OnRecDescrChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnPesoReferChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPesoReferChanged()
    End Sub
    Partial Private Sub OnPastaChanging(value As String)
    End Sub
    Partial Private Sub OnPastaChanged()
    End Sub
    Partial Private Sub OnSubpastaChanging(value As String)
    End Sub
    Partial Private Sub OnSubpastaChanged()
    End Sub
    Partial Private Sub OnDensidadeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDensidadeChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property RecNum() As Integer
			Get
				Return Me._RecNum
			End Get
			Set
				If ((Me._RecNum = value)  _
							= false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNome", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property RecNome() As String
			Get
				Return Me._RecNome
			End Get
			Set
				If (String.Equals(Me._RecNome, value) = false) Then
					Me.OnRecNomeChanging(value)
					Me.SendPropertyChanging
					Me._RecNome = value
					Me.SendPropertyChanged("RecNome")
					Me.OnRecNomeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecDescr", DbType:="VarChar(50)")>  _
		Public Property RecDescr() As String
			Get
				Return Me._RecDescr
			End Get
			Set
				If (String.Equals(Me._RecDescr, value) = false) Then
					Me.OnRecDescrChanging(value)
					Me.SendPropertyChanging
					Me._RecDescr = value
					Me.SendPropertyChanged("RecDescr")
					Me.OnRecDescrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="VarChar(10) NOT NULL", CanBeNull:=false)>  _
		Public Property Codigo() As String
			Get
				Return Me._Codigo
			End Get
			Set
				If (String.Equals(Me._Codigo, value) = false) Then
					Me.OnCodigoChanging(value)
					Me.SendPropertyChanging
					Me._Codigo = value
					Me.SendPropertyChanged("Codigo")
					Me.OnCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PesoRefer", DbType:="Float")>  _
		Public Property PesoRefer() As System.Nullable(Of Double)
			Get
				Return Me._PesoRefer
			End Get
			Set
				If (Me._PesoRefer.Equals(value) = false) Then
					Me.OnPesoReferChanging(value)
					Me.SendPropertyChanging
					Me._PesoRefer = value
					Me.SendPropertyChanged("PesoRefer")
					Me.OnPesoReferChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pasta", DbType:="VarChar(50)")>  _
		Public Property Pasta() As String
			Get
				Return Me._Pasta
			End Get
			Set
				If (String.Equals(Me._Pasta, value) = false) Then
					Me.OnPastaChanging(value)
					Me.SendPropertyChanging
					Me._Pasta = value
					Me.SendPropertyChanged("Pasta")
					Me.OnPastaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subpasta", DbType:="VarChar(50)")>  _
		Public Property Subpasta() As String
			Get
				Return Me._Subpasta
			End Get
			Set
				If (String.Equals(Me._Subpasta, value) = false) Then
					Me.OnSubpastaChanging(value)
					Me.SendPropertyChanging
					Me._Subpasta = value
					Me.SendPropertyChanged("Subpasta")
					Me.OnSubpastaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Densidade", DbType:="Float")>  _
		Public Property Densidade() As System.Nullable(Of Double)
			Get
				Return Me._Densidade
			End Get
			Set
				If (Me._Densidade.Equals(value) = false) Then
					Me.OnDensidadeChanging(value)
					Me.SendPropertyChanging
					Me._Densidade = value
					Me.SendPropertyChanged("Densidade")
					Me.OnDensidadeChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RecBlocos")>  _
	Partial Public Class RecBlocos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _RecNum As Integer
		
		Private _ItemSeq As Integer
		
		Private _BlkNum As System.Nullable(Of Integer)
		
		Private _Param01 As System.Nullable(Of Double)
		
		Private _Param02 As System.Nullable(Of Double)
		
		Private _Param03 As System.Nullable(Of Double)
		
		Private _Param04 As System.Nullable(Of Double)
		
		Private _Param05 As System.Nullable(Of Double)
		
		Private _Param06 As System.Nullable(Of Double)
		
		Private _Param07 As System.Nullable(Of Double)
		
		Private _Param08 As System.Nullable(Of Double)
		
		Private _Param09 As System.Nullable(Of Double)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnItemSeqChanging(value As Integer)
    End Sub
    Partial Private Sub OnItemSeqChanged()
    End Sub
    Partial Private Sub OnBlkNumChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBlkNumChanged()
    End Sub
    Partial Private Sub OnParam01Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam01Changed()
    End Sub
    Partial Private Sub OnParam02Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam02Changed()
    End Sub
    Partial Private Sub OnParam03Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam03Changed()
    End Sub
    Partial Private Sub OnParam04Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam04Changed()
    End Sub
    Partial Private Sub OnParam05Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam05Changed()
    End Sub
    Partial Private Sub OnParam06Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam06Changed()
    End Sub
    Partial Private Sub OnParam07Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam07Changed()
    End Sub
    Partial Private Sub OnParam08Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam08Changed()
    End Sub
    Partial Private Sub OnParam09Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnParam09Changed()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property RecNum() As Integer
			Get
				Return Me._RecNum
			End Get
			Set
				If ((Me._RecNum = value)  _
							= false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemSeq", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property ItemSeq() As Integer
			Get
				Return Me._ItemSeq
			End Get
			Set
				If ((Me._ItemSeq = value)  _
							= false) Then
					Me.OnItemSeqChanging(value)
					Me.SendPropertyChanging
					Me._ItemSeq = value
					Me.SendPropertyChanged("ItemSeq")
					Me.OnItemSeqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BlkNum", DbType:="Int")>  _
		Public Property BlkNum() As System.Nullable(Of Integer)
			Get
				Return Me._BlkNum
			End Get
			Set
				If (Me._BlkNum.Equals(value) = false) Then
					Me.OnBlkNumChanging(value)
					Me.SendPropertyChanging
					Me._BlkNum = value
					Me.SendPropertyChanged("BlkNum")
					Me.OnBlkNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param01", DbType:="Float")>  _
		Public Property Param01() As System.Nullable(Of Double)
			Get
				Return Me._Param01
			End Get
			Set
				If (Me._Param01.Equals(value) = false) Then
					Me.OnParam01Changing(value)
					Me.SendPropertyChanging
					Me._Param01 = value
					Me.SendPropertyChanged("Param01")
					Me.OnParam01Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param02", DbType:="Float")>  _
		Public Property Param02() As System.Nullable(Of Double)
			Get
				Return Me._Param02
			End Get
			Set
				If (Me._Param02.Equals(value) = false) Then
					Me.OnParam02Changing(value)
					Me.SendPropertyChanging
					Me._Param02 = value
					Me.SendPropertyChanged("Param02")
					Me.OnParam02Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param03", DbType:="Float")>  _
		Public Property Param03() As System.Nullable(Of Double)
			Get
				Return Me._Param03
			End Get
			Set
				If (Me._Param03.Equals(value) = false) Then
					Me.OnParam03Changing(value)
					Me.SendPropertyChanging
					Me._Param03 = value
					Me.SendPropertyChanged("Param03")
					Me.OnParam03Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param04", DbType:="Float")>  _
		Public Property Param04() As System.Nullable(Of Double)
			Get
				Return Me._Param04
			End Get
			Set
				If (Me._Param04.Equals(value) = false) Then
					Me.OnParam04Changing(value)
					Me.SendPropertyChanging
					Me._Param04 = value
					Me.SendPropertyChanged("Param04")
					Me.OnParam04Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param05", DbType:="Float")>  _
		Public Property Param05() As System.Nullable(Of Double)
			Get
				Return Me._Param05
			End Get
			Set
				If (Me._Param05.Equals(value) = false) Then
					Me.OnParam05Changing(value)
					Me.SendPropertyChanging
					Me._Param05 = value
					Me.SendPropertyChanged("Param05")
					Me.OnParam05Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param06", DbType:="Float")>  _
		Public Property Param06() As System.Nullable(Of Double)
			Get
				Return Me._Param06
			End Get
			Set
				If (Me._Param06.Equals(value) = false) Then
					Me.OnParam06Changing(value)
					Me.SendPropertyChanging
					Me._Param06 = value
					Me.SendPropertyChanged("Param06")
					Me.OnParam06Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param07", DbType:="Float")>  _
		Public Property Param07() As System.Nullable(Of Double)
			Get
				Return Me._Param07
			End Get
			Set
				If (Me._Param07.Equals(value) = false) Then
					Me.OnParam07Changing(value)
					Me.SendPropertyChanging
					Me._Param07 = value
					Me.SendPropertyChanged("Param07")
					Me.OnParam07Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param08", DbType:="Float")>  _
		Public Property Param08() As System.Nullable(Of Double)
			Get
				Return Me._Param08
			End Get
			Set
				If (Me._Param08.Equals(value) = false) Then
					Me.OnParam08Changing(value)
					Me.SendPropertyChanging
					Me._Param08 = value
					Me.SendPropertyChanged("Param08")
					Me.OnParam08Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Param09", DbType:="Float")>  _
		Public Property Param09() As System.Nullable(Of Double)
			Get
				Return Me._Param09
			End Get
			Set
				If (Me._Param09.Equals(value) = false) Then
					Me.OnParam09Changing(value)
					Me.SendPropertyChanging
					Me._Param09 = value
					Me.SendPropertyChanged("Param09")
					Me.OnParam09Changed
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RecIngred")>  _
	Partial Public Class RecIngred
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _RecNum As Integer
		
		Private _ItemSeq As Integer
		
		Private _IngrCodigo As String
		
		Private _Peso As System.Nullable(Of Double)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnItemSeqChanging(value As Integer)
    End Sub
    Partial Private Sub OnItemSeqChanged()
    End Sub
    Partial Private Sub OnIngrCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnIngrCodigoChanged()
    End Sub
    Partial Private Sub OnPesoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPesoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property RecNum() As Integer
			Get
				Return Me._RecNum
			End Get
			Set
				If ((Me._RecNum = value)  _
							= false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemSeq", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property ItemSeq() As Integer
			Get
				Return Me._ItemSeq
			End Get
			Set
				If ((Me._ItemSeq = value)  _
							= false) Then
					Me.OnItemSeqChanging(value)
					Me.SendPropertyChanging
					Me._ItemSeq = value
					Me.SendPropertyChanged("ItemSeq")
					Me.OnItemSeqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngrCodigo", DbType:="NVarChar(6)")>  _
		Public Property IngrCodigo() As String
			Get
				Return Me._IngrCodigo
			End Get
			Set
				If (String.Equals(Me._IngrCodigo, value) = false) Then
					Me.OnIngrCodigoChanging(value)
					Me.SendPropertyChanging
					Me._IngrCodigo = value
					Me.SendPropertyChanged("IngrCodigo")
					Me.OnIngrCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Peso", DbType:="Float")>  _
		Public Property Peso() As System.Nullable(Of Double)
			Get
				Return Me._Peso
			End Get
			Set
				If (Me._Peso.Equals(value) = false) Then
					Me.OnPesoChanging(value)
					Me.SendPropertyChanging
					Me._Peso = value
					Me.SendPropertyChanged("Peso")
					Me.OnPesoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RecIngredMat")>  _
	Partial Public Class RecIngredMat
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _RecNum As Integer
		
		Private _ItemSeq As Integer
		
		Private _IngrCodigo As String
		
		Private _Peso As System.Nullable(Of Double)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnItemSeqChanging(value As Integer)
    End Sub
    Partial Private Sub OnItemSeqChanged()
    End Sub
    Partial Private Sub OnIngrCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnIngrCodigoChanged()
    End Sub
    Partial Private Sub OnPesoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPesoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property RecNum() As Integer
			Get
				Return Me._RecNum
			End Get
			Set
				If ((Me._RecNum = value)  _
							= false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemSeq", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property ItemSeq() As Integer
			Get
				Return Me._ItemSeq
			End Get
			Set
				If ((Me._ItemSeq = value)  _
							= false) Then
					Me.OnItemSeqChanging(value)
					Me.SendPropertyChanging
					Me._ItemSeq = value
					Me.SendPropertyChanged("ItemSeq")
					Me.OnItemSeqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IngrCodigo", DbType:="NVarChar(6)")>  _
		Public Property IngrCodigo() As String
			Get
				Return Me._IngrCodigo
			End Get
			Set
				If (String.Equals(Me._IngrCodigo, value) = false) Then
					Me.OnIngrCodigoChanging(value)
					Me.SendPropertyChanging
					Me._IngrCodigo = value
					Me.SendPropertyChanged("IngrCodigo")
					Me.OnIngrCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Peso", DbType:="Float")>  _
		Public Property Peso() As System.Nullable(Of Double)
			Get
				Return Me._Peso
			End Get
			Set
				If (Me._Peso.Equals(value) = false) Then
					Me.OnPesoChanging(value)
					Me.SendPropertyChanging
					Me._Peso = value
					Me.SendPropertyChanged("Peso")
					Me.OnPesoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RecTeste")>  _
	Partial Public Class RecTeste
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Area As String
		
		Private _RecNum As Integer
		
		Private _RecNome As String
		
		Private _RecDescr As String
		
		Private _Codigo As String
		
		Private _PesoRefer As System.Nullable(Of Double)
		
		Private _Pasta As String
		
		Private _SubPasta As String
		
		Private _Densidade As System.Nullable(Of Double)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As Integer)
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnRecNomeChanging(value As String)
    End Sub
    Partial Private Sub OnRecNomeChanged()
    End Sub
    Partial Private Sub OnRecDescrChanging(value As String)
    End Sub
    Partial Private Sub OnRecDescrChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnPesoReferChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPesoReferChanged()
    End Sub
    Partial Private Sub OnPastaChanging(value As String)
    End Sub
    Partial Private Sub OnPastaChanged()
    End Sub
    Partial Private Sub OnSubPastaChanging(value As String)
    End Sub
    Partial Private Sub OnSubPastaChanged()
    End Sub
    Partial Private Sub OnDensidadeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDensidadeChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="VarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property RecNum() As Integer
			Get
				Return Me._RecNum
			End Get
			Set
				If ((Me._RecNum = value)  _
							= false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNome", DbType:="VarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property RecNome() As String
			Get
				Return Me._RecNome
			End Get
			Set
				If (String.Equals(Me._RecNome, value) = false) Then
					Me.OnRecNomeChanging(value)
					Me.SendPropertyChanging
					Me._RecNome = value
					Me.SendPropertyChanged("RecNome")
					Me.OnRecNomeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecDescr", DbType:="VarChar(50)")>  _
		Public Property RecDescr() As String
			Get
				Return Me._RecDescr
			End Get
			Set
				If (String.Equals(Me._RecDescr, value) = false) Then
					Me.OnRecDescrChanging(value)
					Me.SendPropertyChanging
					Me._RecDescr = value
					Me.SendPropertyChanged("RecDescr")
					Me.OnRecDescrChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="VarChar(6) NOT NULL", CanBeNull:=false)>  _
		Public Property Codigo() As String
			Get
				Return Me._Codigo
			End Get
			Set
				If (String.Equals(Me._Codigo, value) = false) Then
					Me.OnCodigoChanging(value)
					Me.SendPropertyChanging
					Me._Codigo = value
					Me.SendPropertyChanged("Codigo")
					Me.OnCodigoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PesoRefer", DbType:="Float")>  _
		Public Property PesoRefer() As System.Nullable(Of Double)
			Get
				Return Me._PesoRefer
			End Get
			Set
				If (Me._PesoRefer.Equals(value) = false) Then
					Me.OnPesoReferChanging(value)
					Me.SendPropertyChanging
					Me._PesoRefer = value
					Me.SendPropertyChanged("PesoRefer")
					Me.OnPesoReferChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pasta", DbType:="VarChar(50)")>  _
		Public Property Pasta() As String
			Get
				Return Me._Pasta
			End Get
			Set
				If (String.Equals(Me._Pasta, value) = false) Then
					Me.OnPastaChanging(value)
					Me.SendPropertyChanging
					Me._Pasta = value
					Me.SendPropertyChanged("Pasta")
					Me.OnPastaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubPasta", DbType:="VarChar(50)")>  _
		Public Property SubPasta() As String
			Get
				Return Me._SubPasta
			End Get
			Set
				If (String.Equals(Me._SubPasta, value) = false) Then
					Me.OnSubPastaChanging(value)
					Me.SendPropertyChanging
					Me._SubPasta = value
					Me.SendPropertyChanged("SubPasta")
					Me.OnSubPastaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Densidade", DbType:="Float")>  _
		Public Property Densidade() As System.Nullable(Of Double)
			Get
				Return Me._Densidade
			End Get
			Set
				If (Me._Densidade.Equals(value) = false) Then
					Me.OnDensidadeChanging(value)
					Me.SendPropertyChanging
					Me._Densidade = value
					Me.SendPropertyChanged("Densidade")
					Me.OnDensidadeChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
End Namespace
