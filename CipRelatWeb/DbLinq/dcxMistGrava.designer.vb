'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace nsMistGrava
	
	<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="MistGrava")>  _
	Partial Public Class dcMistGrava
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertCfg(instance As Cfg)
    End Sub
    Partial Private Sub UpdateCfg(instance As Cfg)
    End Sub
    Partial Private Sub DeleteCfg(instance As Cfg)
    End Sub
    Partial Private Sub InsertProdMist(instance As ProdMist)
    End Sub
    Partial Private Sub UpdateProdMist(instance As ProdMist)
    End Sub
    Partial Private Sub DeleteProdMist(instance As ProdMist)
    End Sub
    Partial Private Sub InsertProdMistDos(instance As ProdMistDos)
    End Sub
    Partial Private Sub UpdateProdMistDos(instance As ProdMistDos)
    End Sub
    Partial Private Sub DeleteProdMistDos(instance As ProdMistDos)
    End Sub
    Partial Private Sub InsertTanques(instance As Tanques)
    End Sub
    Partial Private Sub UpdateTanques(instance As Tanques)
    End Sub
    Partial Private Sub DeleteTanques(instance As Tanques)
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("csMistGrava").ConnectionString, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property Cfg() As System.Data.Linq.Table(Of Cfg)
			Get
				Return Me.GetTable(Of Cfg)
			End Get
		End Property
		
		Public ReadOnly Property ProdMist() As System.Data.Linq.Table(Of ProdMist)
			Get
				Return Me.GetTable(Of ProdMist)
			End Get
		End Property
		
		Public ReadOnly Property ProdMistDos() As System.Data.Linq.Table(Of ProdMistDos)
			Get
				Return Me.GetTable(Of ProdMistDos)
			End Get
		End Property
		
		Public ReadOnly Property Tanques() As System.Data.Linq.Table(Of Tanques)
			Get
				Return Me.GetTable(Of Tanques)
			End Get
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Cfg")>  _
	Partial Public Class Cfg
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Item As String
		
		Private _Valor As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnItemChanging(value As String)
    End Sub
    Partial Private Sub OnItemChanged()
    End Sub
    Partial Private Sub OnValorChanging(value As String)
    End Sub
    Partial Private Sub OnValorChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Item", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Item() As String
			Get
				Return Me._Item
			End Get
			Set
				If (String.Equals(Me._Item, value) = false) Then
					Me.OnItemChanging(value)
					Me.SendPropertyChanging
					Me._Item = value
					Me.SendPropertyChanged("Item")
					Me.OnItemChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Valor", DbType:="NVarChar(50)")>  _
		Public Property Valor() As String
			Get
				Return Me._Valor
			End Get
			Set
				If (String.Equals(Me._Valor, value) = false) Then
					Me.OnValorChanging(value)
					Me.SendPropertyChanging
					Me._Valor = value
					Me.SendPropertyChanged("Valor")
					Me.OnValorChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProdMist")>  _
	Partial Public Class ProdMist
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _TqOrigem As Integer
		
		Private _NumSeqTq As Integer
		
		Private _DataHoraMist As String
		
		Private _RecRej As System.Nullable(Of Integer)
		
		Private _RecNum As System.Nullable(Of Integer)
		
		Private _Peso As System.Nullable(Of Integer)
		
		Private _DataHoraTransf As String
		
		Private _Past As System.Nullable(Of Integer)
		
		Private _Dest As System.Nullable(Of Integer)
		
		Private _Ing1 As System.Nullable(Of Double)
		
		Private _Ing2 As System.Nullable(Of Double)
		
		Private _Ing3 As System.Nullable(Of Double)
		
		Private _Ing4 As System.Nullable(Of Double)
		
		Private _Ing5 As System.Nullable(Of Double)
		
		Private _Ing6 As System.Nullable(Of Double)
		
		Private _Ing7 As System.Nullable(Of Double)
		
		Private _Ing8 As System.Nullable(Of Double)
		
		Private _Ing9 As System.Nullable(Of Double)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTqOrigemChanging(value As Integer)
    End Sub
    Partial Private Sub OnTqOrigemChanged()
    End Sub
    Partial Private Sub OnNumSeqTqChanging(value As Integer)
    End Sub
    Partial Private Sub OnNumSeqTqChanged()
    End Sub
    Partial Private Sub OnDataHoraMistChanging(value As String)
    End Sub
    Partial Private Sub OnDataHoraMistChanged()
    End Sub
    Partial Private Sub OnRecRejChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRecRejChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnPesoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPesoChanged()
    End Sub
    Partial Private Sub OnDataHoraTransfChanging(value As String)
    End Sub
    Partial Private Sub OnDataHoraTransfChanged()
    End Sub
    Partial Private Sub OnPastChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPastChanged()
    End Sub
    Partial Private Sub OnDestChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDestChanged()
    End Sub
    Partial Private Sub OnIng1Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnIng1Changed()
    End Sub
    Partial Private Sub OnIng2Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnIng2Changed()
    End Sub
    Partial Private Sub OnIng3Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnIng3Changed()
    End Sub
    Partial Private Sub OnIng4Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnIng4Changed()
    End Sub
    Partial Private Sub OnIng5Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnIng5Changed()
    End Sub
    Partial Private Sub OnIng6Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnIng6Changed()
    End Sub
    Partial Private Sub OnIng7Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnIng7Changed()
    End Sub
    Partial Private Sub OnIng8Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnIng8Changed()
    End Sub
    Partial Private Sub OnIng9Changing(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnIng9Changed()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TqOrigem", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property TqOrigem() As Integer
			Get
				Return Me._TqOrigem
			End Get
			Set
				If ((Me._TqOrigem = value)  _
							= false) Then
					Me.OnTqOrigemChanging(value)
					Me.SendPropertyChanging
					Me._TqOrigem = value
					Me.SendPropertyChanged("TqOrigem")
					Me.OnTqOrigemChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumSeqTq", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property NumSeqTq() As Integer
			Get
				Return Me._NumSeqTq
			End Get
			Set
				If ((Me._NumSeqTq = value)  _
							= false) Then
					Me.OnNumSeqTqChanging(value)
					Me.SendPropertyChanging
					Me._NumSeqTq = value
					Me.SendPropertyChanged("NumSeqTq")
					Me.OnNumSeqTqChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHoraMist", DbType:="NVarChar(14) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property DataHoraMist() As String
			Get
				Return Me._DataHoraMist
			End Get
			Set
				If (String.Equals(Me._DataHoraMist, value) = false) Then
					Me.OnDataHoraMistChanging(value)
					Me.SendPropertyChanging
					Me._DataHoraMist = value
					Me.SendPropertyChanged("DataHoraMist")
					Me.OnDataHoraMistChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecRej", DbType:="Int")>  _
		Public Property RecRej() As System.Nullable(Of Integer)
			Get
				Return Me._RecRej
			End Get
			Set
				If (Me._RecRej.Equals(value) = false) Then
					Me.OnRecRejChanging(value)
					Me.SendPropertyChanging
					Me._RecRej = value
					Me.SendPropertyChanged("RecRej")
					Me.OnRecRejChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int")>  _
		Public Property RecNum() As System.Nullable(Of Integer)
			Get
				Return Me._RecNum
			End Get
			Set
				If (Me._RecNum.Equals(value) = false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Peso", DbType:="Int")>  _
		Public Property Peso() As System.Nullable(Of Integer)
			Get
				Return Me._Peso
			End Get
			Set
				If (Me._Peso.Equals(value) = false) Then
					Me.OnPesoChanging(value)
					Me.SendPropertyChanging
					Me._Peso = value
					Me.SendPropertyChanged("Peso")
					Me.OnPesoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHoraTransf", DbType:="NVarChar(14)")>  _
		Public Property DataHoraTransf() As String
			Get
				Return Me._DataHoraTransf
			End Get
			Set
				If (String.Equals(Me._DataHoraTransf, value) = false) Then
					Me.OnDataHoraTransfChanging(value)
					Me.SendPropertyChanging
					Me._DataHoraTransf = value
					Me.SendPropertyChanged("DataHoraTransf")
					Me.OnDataHoraTransfChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Past", DbType:="Int")>  _
		Public Property Past() As System.Nullable(Of Integer)
			Get
				Return Me._Past
			End Get
			Set
				If (Me._Past.Equals(value) = false) Then
					Me.OnPastChanging(value)
					Me.SendPropertyChanging
					Me._Past = value
					Me.SendPropertyChanged("Past")
					Me.OnPastChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dest", DbType:="Int")>  _
		Public Property Dest() As System.Nullable(Of Integer)
			Get
				Return Me._Dest
			End Get
			Set
				If (Me._Dest.Equals(value) = false) Then
					Me.OnDestChanging(value)
					Me.SendPropertyChanging
					Me._Dest = value
					Me.SendPropertyChanged("Dest")
					Me.OnDestChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ing1", DbType:="Float")>  _
		Public Property Ing1() As System.Nullable(Of Double)
			Get
				Return Me._Ing1
			End Get
			Set
				If (Me._Ing1.Equals(value) = false) Then
					Me.OnIng1Changing(value)
					Me.SendPropertyChanging
					Me._Ing1 = value
					Me.SendPropertyChanged("Ing1")
					Me.OnIng1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ing2", DbType:="Float")>  _
		Public Property Ing2() As System.Nullable(Of Double)
			Get
				Return Me._Ing2
			End Get
			Set
				If (Me._Ing2.Equals(value) = false) Then
					Me.OnIng2Changing(value)
					Me.SendPropertyChanging
					Me._Ing2 = value
					Me.SendPropertyChanged("Ing2")
					Me.OnIng2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ing3", DbType:="Float")>  _
		Public Property Ing3() As System.Nullable(Of Double)
			Get
				Return Me._Ing3
			End Get
			Set
				If (Me._Ing3.Equals(value) = false) Then
					Me.OnIng3Changing(value)
					Me.SendPropertyChanging
					Me._Ing3 = value
					Me.SendPropertyChanged("Ing3")
					Me.OnIng3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ing4", DbType:="Float")>  _
		Public Property Ing4() As System.Nullable(Of Double)
			Get
				Return Me._Ing4
			End Get
			Set
				If (Me._Ing4.Equals(value) = false) Then
					Me.OnIng4Changing(value)
					Me.SendPropertyChanging
					Me._Ing4 = value
					Me.SendPropertyChanged("Ing4")
					Me.OnIng4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ing5", DbType:="Float")>  _
		Public Property Ing5() As System.Nullable(Of Double)
			Get
				Return Me._Ing5
			End Get
			Set
				If (Me._Ing5.Equals(value) = false) Then
					Me.OnIng5Changing(value)
					Me.SendPropertyChanging
					Me._Ing5 = value
					Me.SendPropertyChanged("Ing5")
					Me.OnIng5Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ing6", DbType:="Float")>  _
		Public Property Ing6() As System.Nullable(Of Double)
			Get
				Return Me._Ing6
			End Get
			Set
				If (Me._Ing6.Equals(value) = false) Then
					Me.OnIng6Changing(value)
					Me.SendPropertyChanging
					Me._Ing6 = value
					Me.SendPropertyChanged("Ing6")
					Me.OnIng6Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ing7", DbType:="Float")>  _
		Public Property Ing7() As System.Nullable(Of Double)
			Get
				Return Me._Ing7
			End Get
			Set
				If (Me._Ing7.Equals(value) = false) Then
					Me.OnIng7Changing(value)
					Me.SendPropertyChanging
					Me._Ing7 = value
					Me.SendPropertyChanged("Ing7")
					Me.OnIng7Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ing8", DbType:="Float")>  _
		Public Property Ing8() As System.Nullable(Of Double)
			Get
				Return Me._Ing8
			End Get
			Set
				If (Me._Ing8.Equals(value) = false) Then
					Me.OnIng8Changing(value)
					Me.SendPropertyChanging
					Me._Ing8 = value
					Me.SendPropertyChanged("Ing8")
					Me.OnIng8Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ing9", DbType:="Float")>  _
		Public Property Ing9() As System.Nullable(Of Double)
			Get
				Return Me._Ing9
			End Get
			Set
				If (Me._Ing9.Equals(value) = false) Then
					Me.OnIng9Changing(value)
					Me.SendPropertyChanging
					Me._Ing9 = value
					Me.SendPropertyChanged("Ing9")
					Me.OnIng9Changed
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProdMistDos")>  _
	Partial Public Class ProdMistDos
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _BatchId As Integer
		
		Private _DataHora As String
		
		Private _Origem As Integer
		
		Private _Destino As Integer
		
		Private _RecNum As System.Nullable(Of Integer)
		
		Private _MatPrima As System.Nullable(Of Integer)
		
		Private _QuantPed As System.Nullable(Of Single)
		
		Private _QuantDsg As System.Nullable(Of Single)
		
		Private _Tempet As System.Nullable(Of Single)
		
		Private _StsDos As System.Nullable(Of Integer)
		
		Private _Area As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBatchIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnBatchIdChanged()
    End Sub
    Partial Private Sub OnDataHoraChanging(value As String)
    End Sub
    Partial Private Sub OnDataHoraChanged()
    End Sub
    Partial Private Sub OnOrigemChanging(value As Integer)
    End Sub
    Partial Private Sub OnOrigemChanged()
    End Sub
    Partial Private Sub OnDestinoChanging(value As Integer)
    End Sub
    Partial Private Sub OnDestinoChanged()
    End Sub
    Partial Private Sub OnRecNumChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRecNumChanged()
    End Sub
    Partial Private Sub OnMatPrimaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMatPrimaChanged()
    End Sub
    Partial Private Sub OnQuantPedChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnQuantPedChanged()
    End Sub
    Partial Private Sub OnQuantDsgChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnQuantDsgChanged()
    End Sub
    Partial Private Sub OnTempetChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnTempetChanged()
    End Sub
    Partial Private Sub OnStsDosChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStsDosChanged()
    End Sub
    Partial Private Sub OnAreaChanging(value As String)
    End Sub
    Partial Private Sub OnAreaChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BatchId", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property BatchId() As Integer
			Get
				Return Me._BatchId
			End Get
			Set
				If ((Me._BatchId = value)  _
							= false) Then
					Me.OnBatchIdChanging(value)
					Me.SendPropertyChanging
					Me._BatchId = value
					Me.SendPropertyChanged("BatchId")
					Me.OnBatchIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataHora", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property DataHora() As String
			Get
				Return Me._DataHora
			End Get
			Set
				If (String.Equals(Me._DataHora, value) = false) Then
					Me.OnDataHoraChanging(value)
					Me.SendPropertyChanging
					Me._DataHora = value
					Me.SendPropertyChanged("DataHora")
					Me.OnDataHoraChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Origem", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property Origem() As Integer
			Get
				Return Me._Origem
			End Get
			Set
				If ((Me._Origem = value)  _
							= false) Then
					Me.OnOrigemChanging(value)
					Me.SendPropertyChanging
					Me._Origem = value
					Me.SendPropertyChanged("Origem")
					Me.OnOrigemChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Destino", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property Destino() As Integer
			Get
				Return Me._Destino
			End Get
			Set
				If ((Me._Destino = value)  _
							= false) Then
					Me.OnDestinoChanging(value)
					Me.SendPropertyChanging
					Me._Destino = value
					Me.SendPropertyChanged("Destino")
					Me.OnDestinoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecNum", DbType:="Int")>  _
		Public Property RecNum() As System.Nullable(Of Integer)
			Get
				Return Me._RecNum
			End Get
			Set
				If (Me._RecNum.Equals(value) = false) Then
					Me.OnRecNumChanging(value)
					Me.SendPropertyChanging
					Me._RecNum = value
					Me.SendPropertyChanged("RecNum")
					Me.OnRecNumChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MatPrima", DbType:="Int")>  _
		Public Property MatPrima() As System.Nullable(Of Integer)
			Get
				Return Me._MatPrima
			End Get
			Set
				If (Me._MatPrima.Equals(value) = false) Then
					Me.OnMatPrimaChanging(value)
					Me.SendPropertyChanging
					Me._MatPrima = value
					Me.SendPropertyChanged("MatPrima")
					Me.OnMatPrimaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuantPed", DbType:="Real")>  _
		Public Property QuantPed() As System.Nullable(Of Single)
			Get
				Return Me._QuantPed
			End Get
			Set
				If (Me._QuantPed.Equals(value) = false) Then
					Me.OnQuantPedChanging(value)
					Me.SendPropertyChanging
					Me._QuantPed = value
					Me.SendPropertyChanged("QuantPed")
					Me.OnQuantPedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuantDsg", DbType:="Real")>  _
		Public Property QuantDsg() As System.Nullable(Of Single)
			Get
				Return Me._QuantDsg
			End Get
			Set
				If (Me._QuantDsg.Equals(value) = false) Then
					Me.OnQuantDsgChanging(value)
					Me.SendPropertyChanging
					Me._QuantDsg = value
					Me.SendPropertyChanged("QuantDsg")
					Me.OnQuantDsgChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tempet", DbType:="Real")>  _
		Public Property Tempet() As System.Nullable(Of Single)
			Get
				Return Me._Tempet
			End Get
			Set
				If (Me._Tempet.Equals(value) = false) Then
					Me.OnTempetChanging(value)
					Me.SendPropertyChanging
					Me._Tempet = value
					Me.SendPropertyChanged("Tempet")
					Me.OnTempetChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StsDos", DbType:="Int")>  _
		Public Property StsDos() As System.Nullable(Of Integer)
			Get
				Return Me._StsDos
			End Get
			Set
				If (Me._StsDos.Equals(value) = false) Then
					Me.OnStsDosChanging(value)
					Me.SendPropertyChanging
					Me._StsDos = value
					Me.SendPropertyChanged("StsDos")
					Me.OnStsDosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Area", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Area() As String
			Get
				Return Me._Area
			End Get
			Set
				If (String.Equals(Me._Area, value) = false) Then
					Me.OnAreaChanging(value)
					Me.SendPropertyChanging
					Me._Area = value
					Me.SendPropertyChanged("Area")
					Me.OnAreaChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Tanques")>  _
	Partial Public Class Tanques
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _TqId As Integer
		
		Private _TqNome As String
		
		Private _DbDados As String
		
		Private _DbSts As String
		
		Private _Tipo As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTqIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnTqIdChanged()
    End Sub
    Partial Private Sub OnTqNomeChanging(value As String)
    End Sub
    Partial Private Sub OnTqNomeChanged()
    End Sub
    Partial Private Sub OnDbDadosChanging(value As String)
    End Sub
    Partial Private Sub OnDbDadosChanged()
    End Sub
    Partial Private Sub OnDbStsChanging(value As String)
    End Sub
    Partial Private Sub OnDbStsChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TqId", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property TqId() As Integer
			Get
				Return Me._TqId
			End Get
			Set
				If ((Me._TqId = value)  _
							= false) Then
					Me.OnTqIdChanging(value)
					Me.SendPropertyChanging
					Me._TqId = value
					Me.SendPropertyChanged("TqId")
					Me.OnTqIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TqNome", DbType:="NVarChar(50)")>  _
		Public Property TqNome() As String
			Get
				Return Me._TqNome
			End Get
			Set
				If (String.Equals(Me._TqNome, value) = false) Then
					Me.OnTqNomeChanging(value)
					Me.SendPropertyChanging
					Me._TqNome = value
					Me.SendPropertyChanged("TqNome")
					Me.OnTqNomeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DbDados", DbType:="NVarChar(80)")>  _
		Public Property DbDados() As String
			Get
				Return Me._DbDados
			End Get
			Set
				If (String.Equals(Me._DbDados, value) = false) Then
					Me.OnDbDadosChanging(value)
					Me.SendPropertyChanging
					Me._DbDados = value
					Me.SendPropertyChanged("DbDados")
					Me.OnDbDadosChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DbSts", DbType:="NVarChar(80)")>  _
		Public Property DbSts() As String
			Get
				Return Me._DbSts
			End Get
			Set
				If (String.Equals(Me._DbSts, value) = false) Then
					Me.OnDbStsChanging(value)
					Me.SendPropertyChanging
					Me._DbSts = value
					Me.SendPropertyChanged("DbSts")
					Me.OnDbStsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="Int")>  _
		Public Property Tipo() As System.Nullable(Of Integer)
			Get
				Return Me._Tipo
			End Get
			Set
				If (Me._Tipo.Equals(value) = false) Then
					Me.OnTipoChanging(value)
					Me.SendPropertyChanging
					Me._Tipo = value
					Me.SendPropertyChanged("Tipo")
					Me.OnTipoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
End Namespace
